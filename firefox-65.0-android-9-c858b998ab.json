{
  "results": {
    "http://mdn-bcd-collector.appspot.com/api/interfaces.html": [
      {
        "context": "api.AbortController",
        "info": {
          "code": "self.AbortController"
        },
        "returns": {
          "length": 0,
          "name": "AbortController",
          "type": "function"
        }
      },
      {
        "context": "api.AbortController.abort",
        "info": {
          "code": "AbortController.prototype.abort"
        },
        "returns": {
          "length": 0,
          "name": "abort",
          "type": "function"
        }
      },
      {
        "context": "api.AbortController.signal",
        "info": {
          "code": "'signal' in AbortController.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AbortSignal",
        "info": {
          "code": "self.AbortSignal"
        },
        "returns": {
          "length": 0,
          "name": "AbortSignal",
          "type": "function"
        }
      },
      {
        "context": "api.AbortSignal.aborted",
        "info": {
          "code": "'aborted' in AbortSignal.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AbortSignal.onabort",
        "info": {
          "code": "'onabort' in AbortSignal.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AbsoluteOrientationSensor",
        "info": {
          "code": "self.AbsoluteOrientationSensor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AbstractRange",
        "info": {
          "code": "self.AbstractRange"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AbstractRange.collapsed",
        "info": {
          "code": "'collapsed' in AbstractRange.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AbstractRange.endContainer",
        "info": {
          "code": "'endContainer' in AbstractRange.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AbstractRange.endOffset",
        "info": {
          "code": "'endOffset' in AbstractRange.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AbstractRange.startContainer",
        "info": {
          "code": "'startContainer' in AbstractRange.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AbstractRange.startOffset",
        "info": {
          "code": "'startOffset' in AbstractRange.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Accelerometer",
        "info": {
          "code": "self.Accelerometer"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Accelerometer.x",
        "info": {
          "code": "'x' in Accelerometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Accelerometer.y",
        "info": {
          "code": "'y' in Accelerometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Accelerometer.z",
        "info": {
          "code": "'z' in Accelerometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AmbientLightSensor",
        "info": {
          "code": "self.AmbientLightSensor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AmbientLightSensor.illuminance",
        "info": {
          "code": "'illuminance' in AmbientLightSensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AnalyserNode",
        "info": {
          "code": "self.AnalyserNode"
        },
        "returns": {
          "length": 1,
          "name": "AnalyserNode",
          "type": "function"
        }
      },
      {
        "context": "api.AnalyserNode.fftSize",
        "info": {
          "code": "'fftSize' in AnalyserNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AnalyserNode.frequencyBinCount",
        "info": {
          "code": "'frequencyBinCount' in AnalyserNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AnalyserNode.getByteFrequencyData",
        "info": {
          "code": "AnalyserNode.prototype.getByteFrequencyData"
        },
        "returns": {
          "length": 1,
          "name": "getByteFrequencyData",
          "type": "function"
        }
      },
      {
        "context": "api.AnalyserNode.getByteTimeDomainData",
        "info": {
          "code": "AnalyserNode.prototype.getByteTimeDomainData"
        },
        "returns": {
          "length": 1,
          "name": "getByteTimeDomainData",
          "type": "function"
        }
      },
      {
        "context": "api.AnalyserNode.getFloatFrequencyData",
        "info": {
          "code": "AnalyserNode.prototype.getFloatFrequencyData"
        },
        "returns": {
          "length": 1,
          "name": "getFloatFrequencyData",
          "type": "function"
        }
      },
      {
        "context": "api.AnalyserNode.getFloatTimeDomainData",
        "info": {
          "code": "AnalyserNode.prototype.getFloatTimeDomainData"
        },
        "returns": {
          "length": 1,
          "name": "getFloatTimeDomainData",
          "type": "function"
        }
      },
      {
        "context": "api.AnalyserNode.maxDecibels",
        "info": {
          "code": "'maxDecibels' in AnalyserNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AnalyserNode.minDecibels",
        "info": {
          "code": "'minDecibels' in AnalyserNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AnalyserNode.smoothingTimeConstant",
        "info": {
          "code": "'smoothingTimeConstant' in AnalyserNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation",
        "info": {
          "code": "self.Animation"
        },
        "returns": {
          "length": 0,
          "name": "Animation",
          "type": "function"
        }
      },
      {
        "context": "api.Animation.cancel",
        "info": {
          "code": "Animation.prototype.cancel"
        },
        "returns": {
          "length": 0,
          "name": "cancel",
          "type": "function"
        }
      },
      {
        "context": "api.Animation.currentTime",
        "info": {
          "code": "'currentTime' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.effect",
        "info": {
          "code": "'effect' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.finish",
        "info": {
          "code": "Animation.prototype.finish"
        },
        "returns": {
          "length": 0,
          "name": "finish",
          "type": "function"
        }
      },
      {
        "context": "api.Animation.finished",
        "info": {
          "code": "'finished' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.id",
        "info": {
          "code": "'id' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.oncancel",
        "info": {
          "code": "'oncancel' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.onfinish",
        "info": {
          "code": "'onfinish' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.pause",
        "info": {
          "code": "Animation.prototype.pause"
        },
        "returns": {
          "length": 0,
          "name": "pause",
          "type": "function"
        }
      },
      {
        "context": "api.Animation.pending",
        "info": {
          "code": "'pending' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.play",
        "info": {
          "code": "Animation.prototype.play"
        },
        "returns": {
          "length": 0,
          "name": "play",
          "type": "function"
        }
      },
      {
        "context": "api.Animation.playbackRate",
        "info": {
          "code": "'playbackRate' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.playState",
        "info": {
          "code": "'playState' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.ready",
        "info": {
          "code": "'ready' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.reverse",
        "info": {
          "code": "Animation.prototype.reverse"
        },
        "returns": {
          "length": 0,
          "name": "reverse",
          "type": "function"
        }
      },
      {
        "context": "api.Animation.startTime",
        "info": {
          "code": "'startTime' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Animation.timeline",
        "info": {
          "code": "'timeline' in Animation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Animation.updatePlaybackRate",
        "info": {
          "code": "Animation.prototype.updatePlaybackRate"
        },
        "returns": {
          "length": 1,
          "name": "updatePlaybackRate",
          "type": "function"
        }
      },
      {
        "context": "api.AnimationEffect",
        "info": {
          "code": "self.AnimationEffect"
        },
        "returns": {
          "length": 0,
          "name": "AnimationEffect",
          "type": "function"
        }
      },
      {
        "context": "api.AnimationEffect.getComputedTiming",
        "info": {
          "code": "AnimationEffect.prototype.getComputedTiming"
        },
        "returns": {
          "length": 0,
          "name": "getComputedTiming",
          "type": "function"
        }
      },
      {
        "context": "api.AnimationEffect.getTiming",
        "info": {
          "code": "AnimationEffect.prototype.getTiming"
        },
        "returns": {
          "length": 0,
          "name": "getTiming",
          "type": "function"
        }
      },
      {
        "context": "api.AnimationEffect.localTime",
        "info": {
          "code": "'localTime' in AnimationEffect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AnimationEffect.updateTiming",
        "info": {
          "code": "AnimationEffect.prototype.updateTiming"
        },
        "returns": {
          "length": 0,
          "name": "updateTiming",
          "type": "function"
        }
      },
      {
        "context": "api.AnimationEvent",
        "info": {
          "code": "self.AnimationEvent"
        },
        "returns": {
          "length": 1,
          "name": "AnimationEvent",
          "type": "function"
        }
      },
      {
        "context": "api.AnimationEvent.animationName",
        "info": {
          "code": "'animationName' in AnimationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AnimationEvent.elapsedTime",
        "info": {
          "code": "'elapsedTime' in AnimationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AnimationEvent.pseudoElement",
        "info": {
          "code": "'pseudoElement' in AnimationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AnimationPlaybackEvent",
        "info": {
          "code": "self.AnimationPlaybackEvent"
        },
        "returns": {
          "length": 1,
          "name": "AnimationPlaybackEvent",
          "type": "function"
        }
      },
      {
        "context": "api.AnimationPlaybackEvent.currentTime",
        "info": {
          "code": "'currentTime' in AnimationPlaybackEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AnimationPlaybackEvent.timelineTime",
        "info": {
          "code": "'timelineTime' in AnimationPlaybackEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AnimationTimeline",
        "info": {
          "code": "self.AnimationTimeline"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AnimationTimeline.currentTime",
        "info": {
          "code": "'currentTime' in AnimationTimeline.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AnimationWorkletGlobalScope",
        "info": {
          "code": "self.AnimationWorkletGlobalScope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AnimationWorkletGlobalScope.registerAnimator",
        "info": {
          "code": "AnimationWorkletGlobalScope.prototype.registerAnimator"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache",
        "info": {
          "code": "self.ApplicationCache"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ApplicationCache.abort",
        "info": {
          "code": "ApplicationCache.prototype.abort"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.CHECKING",
        "info": {
          "code": "ApplicationCache.CHECKING"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.DOWNLOADING",
        "info": {
          "code": "ApplicationCache.DOWNLOADING"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.IDLE",
        "info": {
          "code": "ApplicationCache.IDLE"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.OBSOLETE",
        "info": {
          "code": "ApplicationCache.OBSOLETE"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.oncached",
        "info": {
          "code": "'oncached' in ApplicationCache.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.onchecking",
        "info": {
          "code": "'onchecking' in ApplicationCache.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.ondownloading",
        "info": {
          "code": "'ondownloading' in ApplicationCache.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.onerror",
        "info": {
          "code": "'onerror' in ApplicationCache.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.onnoupdate",
        "info": {
          "code": "'onnoupdate' in ApplicationCache.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.onobsolete",
        "info": {
          "code": "'onobsolete' in ApplicationCache.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.onprogress",
        "info": {
          "code": "'onprogress' in ApplicationCache.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.onupdateready",
        "info": {
          "code": "'onupdateready' in ApplicationCache.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.status",
        "info": {
          "code": "'status' in ApplicationCache.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.swapCache",
        "info": {
          "code": "ApplicationCache.prototype.swapCache"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.UNCACHED",
        "info": {
          "code": "ApplicationCache.UNCACHED"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.update",
        "info": {
          "code": "ApplicationCache.prototype.update"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ApplicationCache.UPDATEREADY",
        "info": {
          "code": "ApplicationCache.UPDATEREADY"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Attr",
        "info": {
          "code": "self.Attr"
        },
        "returns": {
          "length": 0,
          "name": "Attr",
          "type": "function"
        }
      },
      {
        "context": "api.Attr.localName",
        "info": {
          "code": "'localName' in Attr.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Attr.name",
        "info": {
          "code": "'name' in Attr.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Attr.namespaceURI",
        "info": {
          "code": "'namespaceURI' in Attr.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Attr.ownerElement",
        "info": {
          "code": "'ownerElement' in Attr.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Attr.prefix",
        "info": {
          "code": "'prefix' in Attr.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Attr.specified",
        "info": {
          "code": "'specified' in Attr.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Attr.value",
        "info": {
          "code": "'value' in Attr.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBuffer",
        "info": {
          "code": "self.AudioBuffer"
        },
        "returns": {
          "length": 1,
          "name": "AudioBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.AudioBuffer.copyFromChannel",
        "info": {
          "code": "AudioBuffer.prototype.copyFromChannel"
        },
        "returns": {
          "length": 2,
          "name": "copyFromChannel",
          "type": "function"
        }
      },
      {
        "context": "api.AudioBuffer.copyToChannel",
        "info": {
          "code": "AudioBuffer.prototype.copyToChannel"
        },
        "returns": {
          "length": 2,
          "name": "copyToChannel",
          "type": "function"
        }
      },
      {
        "context": "api.AudioBuffer.duration",
        "info": {
          "code": "'duration' in AudioBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBuffer.getChannelData",
        "info": {
          "code": "AudioBuffer.prototype.getChannelData"
        },
        "returns": {
          "length": 1,
          "name": "getChannelData",
          "type": "function"
        }
      },
      {
        "context": "api.AudioBuffer.length",
        "info": {
          "code": "'length' in AudioBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBuffer.numberOfChannels",
        "info": {
          "code": "'numberOfChannels' in AudioBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBuffer.sampleRate",
        "info": {
          "code": "'sampleRate' in AudioBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBufferSourceNode",
        "info": {
          "code": "self.AudioBufferSourceNode"
        },
        "returns": {
          "length": 1,
          "name": "AudioBufferSourceNode",
          "type": "function"
        }
      },
      {
        "context": "api.AudioBufferSourceNode.buffer",
        "info": {
          "code": "'buffer' in AudioBufferSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBufferSourceNode.detune",
        "info": {
          "code": "'detune' in AudioBufferSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBufferSourceNode.loop",
        "info": {
          "code": "'loop' in AudioBufferSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBufferSourceNode.loopEnd",
        "info": {
          "code": "'loopEnd' in AudioBufferSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBufferSourceNode.loopStart",
        "info": {
          "code": "'loopStart' in AudioBufferSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBufferSourceNode.playbackRate",
        "info": {
          "code": "'playbackRate' in AudioBufferSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioBufferSourceNode.start",
        "info": {
          "code": "AudioBufferSourceNode.prototype.start"
        },
        "returns": {
          "length": 0,
          "name": "start",
          "type": "function"
        }
      },
      {
        "context": "api.AudioContext",
        "info": {
          "code": "self.AudioContext"
        },
        "returns": {
          "length": 0,
          "name": "AudioContext",
          "type": "function"
        }
      },
      {
        "context": "api.AudioContext.baseLatency",
        "info": {
          "code": "'baseLatency' in AudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioContext.close",
        "info": {
          "code": "AudioContext.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.AudioContext.createMediaElementSource",
        "info": {
          "code": "AudioContext.prototype.createMediaElementSource"
        },
        "returns": {
          "length": 1,
          "name": "createMediaElementSource",
          "type": "function"
        }
      },
      {
        "context": "api.AudioContext.createMediaStreamDestination",
        "info": {
          "code": "AudioContext.prototype.createMediaStreamDestination"
        },
        "returns": {
          "length": 0,
          "name": "createMediaStreamDestination",
          "type": "function"
        }
      },
      {
        "context": "api.AudioContext.createMediaStreamSource",
        "info": {
          "code": "AudioContext.prototype.createMediaStreamSource"
        },
        "returns": {
          "length": 1,
          "name": "createMediaStreamSource",
          "type": "function"
        }
      },
      {
        "context": "api.AudioContext.createMediaStreamTrackSource",
        "info": {
          "code": "AudioContext.prototype.createMediaStreamTrackSource"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioContext.getOutputTimestamp",
        "info": {
          "code": "AudioContext.prototype.getOutputTimestamp"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioContext.outputLatency",
        "info": {
          "code": "'outputLatency' in AudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioContext.resume",
        "info": {
          "code": "AudioContext.prototype.resume"
        },
        "returns": {
          "length": 0,
          "name": "resume",
          "type": "function"
        }
      },
      {
        "context": "api.AudioContext.suspend",
        "info": {
          "code": "AudioContext.prototype.suspend"
        },
        "returns": {
          "length": 0,
          "name": "suspend",
          "type": "function"
        }
      },
      {
        "context": "api.AudioDestinationNode",
        "info": {
          "code": "self.AudioDestinationNode"
        },
        "returns": {
          "length": 0,
          "name": "AudioDestinationNode",
          "type": "function"
        }
      },
      {
        "context": "api.AudioDestinationNode.maxChannelCount",
        "info": {
          "code": "'maxChannelCount' in AudioDestinationNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioListener",
        "info": {
          "code": "self.AudioListener"
        },
        "returns": {
          "length": 0,
          "name": "AudioListener",
          "type": "function"
        }
      },
      {
        "context": "api.AudioListener.forwardX",
        "info": {
          "code": "'forwardX' in AudioListener.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioListener.forwardY",
        "info": {
          "code": "'forwardY' in AudioListener.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioListener.forwardZ",
        "info": {
          "code": "'forwardZ' in AudioListener.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioListener.positionX",
        "info": {
          "code": "'positionX' in AudioListener.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioListener.positionY",
        "info": {
          "code": "'positionY' in AudioListener.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioListener.positionZ",
        "info": {
          "code": "'positionZ' in AudioListener.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioListener.setOrientation",
        "info": {
          "code": "AudioListener.prototype.setOrientation"
        },
        "returns": {
          "length": 6,
          "name": "setOrientation",
          "type": "function"
        }
      },
      {
        "context": "api.AudioListener.setPosition",
        "info": {
          "code": "AudioListener.prototype.setPosition"
        },
        "returns": {
          "length": 3,
          "name": "setPosition",
          "type": "function"
        }
      },
      {
        "context": "api.AudioListener.upX",
        "info": {
          "code": "'upX' in AudioListener.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioListener.upY",
        "info": {
          "code": "'upY' in AudioListener.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioListener.upZ",
        "info": {
          "code": "'upZ' in AudioListener.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioNode",
        "info": {
          "code": "self.AudioNode"
        },
        "returns": {
          "length": 0,
          "name": "AudioNode",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.channelCount",
        "info": {
          "code": "'channelCount' in AudioNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioNode.channelCountMode",
        "info": {
          "code": "'channelCountMode' in AudioNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioNode.channelInterpretation",
        "info": {
          "code": "'channelInterpretation' in AudioNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioNode.connect",
        "info": {
          "code": "AudioNode.prototype.connect"
        },
        "returns": {
          "length": 1,
          "name": "connect",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.connect",
        "info": {
          "code": "AudioNode.prototype.connect"
        },
        "returns": {
          "length": 1,
          "name": "connect",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.context",
        "info": {
          "code": "'context' in AudioNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioNode.disconnect",
        "info": {
          "code": "AudioNode.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.disconnect",
        "info": {
          "code": "AudioNode.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.disconnect",
        "info": {
          "code": "AudioNode.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.disconnect",
        "info": {
          "code": "AudioNode.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.disconnect",
        "info": {
          "code": "AudioNode.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.disconnect",
        "info": {
          "code": "AudioNode.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.disconnect",
        "info": {
          "code": "AudioNode.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.AudioNode.numberOfInputs",
        "info": {
          "code": "'numberOfInputs' in AudioNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioNode.numberOfOutputs",
        "info": {
          "code": "'numberOfOutputs' in AudioNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioParam",
        "info": {
          "code": "self.AudioParam"
        },
        "returns": {
          "length": 0,
          "name": "AudioParam",
          "type": "function"
        }
      },
      {
        "context": "api.AudioParam.automationRate",
        "info": {
          "code": "'automationRate' in AudioParam.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.AudioParam.cancelAndHoldAtTime",
        "info": {
          "code": "AudioParam.prototype.cancelAndHoldAtTime"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioParam.cancelScheduledValues",
        "info": {
          "code": "AudioParam.prototype.cancelScheduledValues"
        },
        "returns": {
          "length": 1,
          "name": "cancelScheduledValues",
          "type": "function"
        }
      },
      {
        "context": "api.AudioParam.defaultValue",
        "info": {
          "code": "'defaultValue' in AudioParam.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioParam.exponentialRampToValueAtTime",
        "info": {
          "code": "AudioParam.prototype.exponentialRampToValueAtTime"
        },
        "returns": {
          "length": 2,
          "name": "exponentialRampToValueAtTime",
          "type": "function"
        }
      },
      {
        "context": "api.AudioParam.linearRampToValueAtTime",
        "info": {
          "code": "AudioParam.prototype.linearRampToValueAtTime"
        },
        "returns": {
          "length": 2,
          "name": "linearRampToValueAtTime",
          "type": "function"
        }
      },
      {
        "context": "api.AudioParam.maxValue",
        "info": {
          "code": "'maxValue' in AudioParam.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioParam.minValue",
        "info": {
          "code": "'minValue' in AudioParam.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioParam.setTargetAtTime",
        "info": {
          "code": "AudioParam.prototype.setTargetAtTime"
        },
        "returns": {
          "length": 3,
          "name": "setTargetAtTime",
          "type": "function"
        }
      },
      {
        "context": "api.AudioParam.setValueAtTime",
        "info": {
          "code": "AudioParam.prototype.setValueAtTime"
        },
        "returns": {
          "length": 2,
          "name": "setValueAtTime",
          "type": "function"
        }
      },
      {
        "context": "api.AudioParam.setValueCurveAtTime",
        "info": {
          "code": "AudioParam.prototype.setValueCurveAtTime"
        },
        "returns": {
          "length": 3,
          "name": "setValueCurveAtTime",
          "type": "function"
        }
      },
      {
        "context": "api.AudioParam.value",
        "info": {
          "code": "'value' in AudioParam.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioParamMap",
        "info": {
          "code": "self.AudioParamMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioProcessingEvent",
        "info": {
          "code": "self.AudioProcessingEvent"
        },
        "returns": {
          "length": 0,
          "name": "AudioProcessingEvent",
          "type": "function"
        }
      },
      {
        "context": "api.AudioProcessingEvent.inputBuffer",
        "info": {
          "code": "'inputBuffer' in AudioProcessingEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioProcessingEvent.outputBuffer",
        "info": {
          "code": "'outputBuffer' in AudioProcessingEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioProcessingEvent.playbackTime",
        "info": {
          "code": "'playbackTime' in AudioProcessingEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioScheduledSourceNode",
        "info": {
          "code": "self.AudioScheduledSourceNode"
        },
        "returns": {
          "length": 0,
          "name": "AudioScheduledSourceNode",
          "type": "function"
        }
      },
      {
        "context": "api.AudioScheduledSourceNode.onended",
        "info": {
          "code": "'onended' in AudioScheduledSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.AudioScheduledSourceNode.start",
        "info": {
          "code": "AudioScheduledSourceNode.prototype.start"
        },
        "returns": {
          "length": 0,
          "name": "start",
          "type": "function"
        }
      },
      {
        "context": "api.AudioScheduledSourceNode.stop",
        "info": {
          "code": "AudioScheduledSourceNode.prototype.stop"
        },
        "returns": {
          "length": 0,
          "name": "stop",
          "type": "function"
        }
      },
      {
        "context": "api.AudioTrack",
        "info": {
          "code": "self.AudioTrack"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioTrack.enabled",
        "info": {
          "code": "'enabled' in AudioTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrack.id",
        "info": {
          "code": "'id' in AudioTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrack.kind",
        "info": {
          "code": "'kind' in AudioTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrack.label",
        "info": {
          "code": "'label' in AudioTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrack.language",
        "info": {
          "code": "'language' in AudioTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrack.sourceBuffer",
        "info": {
          "code": "'sourceBuffer' in AudioTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrackList",
        "info": {
          "code": "self.AudioTrackList"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioTrackList.getTrackById",
        "info": {
          "code": "AudioTrackList.prototype.getTrackById"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrackList.length",
        "info": {
          "code": "'length' in AudioTrackList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrackList.onaddtrack",
        "info": {
          "code": "'onaddtrack' in AudioTrackList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrackList.onchange",
        "info": {
          "code": "'onchange' in AudioTrackList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioTrackList.onremovetrack",
        "info": {
          "code": "'onremovetrack' in AudioTrackList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioWorklet",
        "info": {
          "code": "self.AudioWorklet"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioWorkletGlobalScope",
        "info": {
          "code": "self.AudioWorkletGlobalScope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioWorkletGlobalScope.currentFrame",
        "info": {
          "code": "'currentFrame' in AudioWorkletGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioWorkletGlobalScope.currentTime",
        "info": {
          "code": "'currentTime' in AudioWorkletGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioWorkletGlobalScope.registerProcessor",
        "info": {
          "code": "AudioWorkletGlobalScope.prototype.registerProcessor"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioWorkletGlobalScope.sampleRate",
        "info": {
          "code": "'sampleRate' in AudioWorkletGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioWorkletNode",
        "info": {
          "code": "self.AudioWorkletNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioWorkletNode.onprocessorerror",
        "info": {
          "code": "'onprocessorerror' in AudioWorkletNode.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioWorkletNode.parameters",
        "info": {
          "code": "'parameters' in AudioWorkletNode.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioWorkletNode.port",
        "info": {
          "code": "'port' in AudioWorkletNode.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AudioWorkletProcessor",
        "info": {
          "code": "self.AudioWorkletProcessor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AudioWorkletProcessor.port",
        "info": {
          "code": "'port' in AudioWorkletProcessor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AuthenticatorAssertionResponse",
        "info": {
          "code": "self.AuthenticatorAssertionResponse"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AuthenticatorAssertionResponse.authenticatorData",
        "info": {
          "code": "'authenticatorData' in AuthenticatorAssertionResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AuthenticatorAssertionResponse.signature",
        "info": {
          "code": "'signature' in AuthenticatorAssertionResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AuthenticatorAssertionResponse.userHandle",
        "info": {
          "code": "'userHandle' in AuthenticatorAssertionResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AuthenticatorAttestationResponse",
        "info": {
          "code": "self.AuthenticatorAttestationResponse"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AuthenticatorAttestationResponse.attestationObject",
        "info": {
          "code": "'attestationObject' in AuthenticatorAttestationResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.AuthenticatorResponse",
        "info": {
          "code": "self.AuthenticatorResponse"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.AuthenticatorResponse.clientDataJSON",
        "info": {
          "code": "'clientDataJSON' in AuthenticatorResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchEvent",
        "info": {
          "code": "self.BackgroundFetchEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BackgroundFetchEvent.registration",
        "info": {
          "code": "'registration' in BackgroundFetchEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchManager",
        "info": {
          "code": "self.BackgroundFetchManager"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BackgroundFetchManager.fetch",
        "info": {
          "code": "BackgroundFetchManager.prototype.fetch"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchManager.get",
        "info": {
          "code": "BackgroundFetchManager.prototype.get"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchManager.getIds",
        "info": {
          "code": "BackgroundFetchManager.prototype.getIds"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRecord",
        "info": {
          "code": "self.BackgroundFetchRecord"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BackgroundFetchRecord.request",
        "info": {
          "code": "'request' in BackgroundFetchRecord.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRecord.responseReady",
        "info": {
          "code": "'responseReady' in BackgroundFetchRecord.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration",
        "info": {
          "code": "self.BackgroundFetchRegistration"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.abort",
        "info": {
          "code": "BackgroundFetchRegistration.prototype.abort"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.downloaded",
        "info": {
          "code": "'downloaded' in BackgroundFetchRegistration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.downloadTotal",
        "info": {
          "code": "'downloadTotal' in BackgroundFetchRegistration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.failureReason",
        "info": {
          "code": "'failureReason' in BackgroundFetchRegistration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.id",
        "info": {
          "code": "'id' in BackgroundFetchRegistration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.match",
        "info": {
          "code": "BackgroundFetchRegistration.prototype.match"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.matchAll",
        "info": {
          "code": "BackgroundFetchRegistration.prototype.matchAll"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.onprogress",
        "info": {
          "code": "'onprogress' in BackgroundFetchRegistration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.recordsAvailable",
        "info": {
          "code": "'recordsAvailable' in BackgroundFetchRegistration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.result",
        "info": {
          "code": "'result' in BackgroundFetchRegistration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.uploaded",
        "info": {
          "code": "'uploaded' in BackgroundFetchRegistration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchRegistration.uploadTotal",
        "info": {
          "code": "'uploadTotal' in BackgroundFetchRegistration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BackgroundFetchUpdateUIEvent",
        "info": {
          "code": "self.BackgroundFetchUpdateUIEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BackgroundFetchUpdateUIEvent.updateUI",
        "info": {
          "code": "BackgroundFetchUpdateUIEvent.prototype.updateUI"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BarcodeDetector",
        "info": {
          "code": "self.BarcodeDetector"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BarcodeDetector.detect",
        "info": {
          "code": "BarcodeDetector.prototype.detect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BarcodeDetector.getSupportedFormats",
        "info": {
          "code": "BarcodeDetector.getSupportedFormats"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BarProp",
        "info": {
          "code": "self.BarProp"
        },
        "returns": {
          "length": 0,
          "name": "BarProp",
          "type": "function"
        }
      },
      {
        "context": "api.BarProp.visible",
        "info": {
          "code": "'visible' in BarProp.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BaseAudioContext",
        "info": {
          "code": "self.BaseAudioContext"
        },
        "returns": {
          "length": 0,
          "name": "BaseAudioContext",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.audioWorklet",
        "info": {
          "code": "'audioWorklet' in BaseAudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.BaseAudioContext.createAnalyser",
        "info": {
          "code": "BaseAudioContext.prototype.createAnalyser"
        },
        "returns": {
          "length": 0,
          "name": "createAnalyser",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createBiquadFilter",
        "info": {
          "code": "BaseAudioContext.prototype.createBiquadFilter"
        },
        "returns": {
          "length": 0,
          "name": "createBiquadFilter",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createBuffer",
        "info": {
          "code": "BaseAudioContext.prototype.createBuffer"
        },
        "returns": {
          "length": 3,
          "name": "createBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createBufferSource",
        "info": {
          "code": "BaseAudioContext.prototype.createBufferSource"
        },
        "returns": {
          "length": 0,
          "name": "createBufferSource",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createChannelMerger",
        "info": {
          "code": "BaseAudioContext.prototype.createChannelMerger"
        },
        "returns": {
          "length": 0,
          "name": "createChannelMerger",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createChannelSplitter",
        "info": {
          "code": "BaseAudioContext.prototype.createChannelSplitter"
        },
        "returns": {
          "length": 0,
          "name": "createChannelSplitter",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createConstantSource",
        "info": {
          "code": "BaseAudioContext.prototype.createConstantSource"
        },
        "returns": {
          "length": 0,
          "name": "createConstantSource",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createConvolver",
        "info": {
          "code": "BaseAudioContext.prototype.createConvolver"
        },
        "returns": {
          "length": 0,
          "name": "createConvolver",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createDelay",
        "info": {
          "code": "BaseAudioContext.prototype.createDelay"
        },
        "returns": {
          "length": 0,
          "name": "createDelay",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createDynamicsCompressor",
        "info": {
          "code": "BaseAudioContext.prototype.createDynamicsCompressor"
        },
        "returns": {
          "length": 0,
          "name": "createDynamicsCompressor",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createGain",
        "info": {
          "code": "BaseAudioContext.prototype.createGain"
        },
        "returns": {
          "length": 0,
          "name": "createGain",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createIIRFilter",
        "info": {
          "code": "BaseAudioContext.prototype.createIIRFilter"
        },
        "returns": {
          "length": 2,
          "name": "createIIRFilter",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createOscillator",
        "info": {
          "code": "BaseAudioContext.prototype.createOscillator"
        },
        "returns": {
          "length": 0,
          "name": "createOscillator",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createPanner",
        "info": {
          "code": "BaseAudioContext.prototype.createPanner"
        },
        "returns": {
          "length": 0,
          "name": "createPanner",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createPeriodicWave",
        "info": {
          "code": "BaseAudioContext.prototype.createPeriodicWave"
        },
        "returns": {
          "length": 2,
          "name": "createPeriodicWave",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createScriptProcessor",
        "info": {
          "code": "BaseAudioContext.prototype.createScriptProcessor"
        },
        "returns": {
          "length": 0,
          "name": "createScriptProcessor",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createStereoPanner",
        "info": {
          "code": "BaseAudioContext.prototype.createStereoPanner"
        },
        "returns": {
          "length": 0,
          "name": "createStereoPanner",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.createWaveShaper",
        "info": {
          "code": "BaseAudioContext.prototype.createWaveShaper"
        },
        "returns": {
          "length": 0,
          "name": "createWaveShaper",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.currentTime",
        "info": {
          "code": "'currentTime' in BaseAudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BaseAudioContext.decodeAudioData",
        "info": {
          "code": "BaseAudioContext.prototype.decodeAudioData"
        },
        "returns": {
          "length": 1,
          "name": "decodeAudioData",
          "type": "function"
        }
      },
      {
        "context": "api.BaseAudioContext.destination",
        "info": {
          "code": "'destination' in BaseAudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BaseAudioContext.listener",
        "info": {
          "code": "'listener' in BaseAudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BaseAudioContext.onstatechange",
        "info": {
          "code": "'onstatechange' in BaseAudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BaseAudioContext.sampleRate",
        "info": {
          "code": "'sampleRate' in BaseAudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BaseAudioContext.state",
        "info": {
          "code": "'state' in BaseAudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Baseline",
        "info": {
          "code": "self.Baseline"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Baseline.name",
        "info": {
          "code": "'name' in Baseline.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Baseline.value",
        "info": {
          "code": "'value' in Baseline.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BatteryManager",
        "info": {
          "code": "self.BatteryManager"
        },
        "returns": {
          "length": 0,
          "name": "BatteryManager",
          "type": "function"
        }
      },
      {
        "context": "api.BatteryManager.charging",
        "info": {
          "code": "'charging' in BatteryManager.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BatteryManager.chargingTime",
        "info": {
          "code": "'chargingTime' in BatteryManager.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BatteryManager.dischargingTime",
        "info": {
          "code": "'dischargingTime' in BatteryManager.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BatteryManager.level",
        "info": {
          "code": "'level' in BatteryManager.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BatteryManager.onchargingchange",
        "info": {
          "code": "'onchargingchange' in BatteryManager.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BatteryManager.onchargingtimechange",
        "info": {
          "code": "'onchargingtimechange' in BatteryManager.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BatteryManager.ondischargingtimechange",
        "info": {
          "code": "'ondischargingtimechange' in BatteryManager.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BatteryManager.onlevelchange",
        "info": {
          "code": "'onlevelchange' in BatteryManager.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BeforeInstallPromptEvent",
        "info": {
          "code": "self.BeforeInstallPromptEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BeforeInstallPromptEvent.prompt",
        "info": {
          "code": "BeforeInstallPromptEvent.prototype.prompt"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BeforeUnloadEvent",
        "info": {
          "code": "self.BeforeUnloadEvent"
        },
        "returns": {
          "length": 0,
          "name": "BeforeUnloadEvent",
          "type": "function"
        }
      },
      {
        "context": "api.BeforeUnloadEvent.returnValue",
        "info": {
          "code": "'returnValue' in BeforeUnloadEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BiquadFilterNode",
        "info": {
          "code": "self.BiquadFilterNode"
        },
        "returns": {
          "length": 1,
          "name": "BiquadFilterNode",
          "type": "function"
        }
      },
      {
        "context": "api.BiquadFilterNode.detune",
        "info": {
          "code": "'detune' in BiquadFilterNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BiquadFilterNode.frequency",
        "info": {
          "code": "'frequency' in BiquadFilterNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BiquadFilterNode.gain",
        "info": {
          "code": "'gain' in BiquadFilterNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BiquadFilterNode.getFrequencyResponse",
        "info": {
          "code": "BiquadFilterNode.prototype.getFrequencyResponse"
        },
        "returns": {
          "length": 3,
          "name": "getFrequencyResponse",
          "type": "function"
        }
      },
      {
        "context": "api.BiquadFilterNode.Q",
        "info": {
          "code": "'Q' in BiquadFilterNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BiquadFilterNode.type",
        "info": {
          "code": "'type' in BiquadFilterNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Blob",
        "info": {
          "code": "self.Blob"
        },
        "returns": {
          "length": 0,
          "name": "Blob",
          "type": "function"
        }
      },
      {
        "context": "api.Blob.size",
        "info": {
          "code": "'size' in Blob.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Blob.slice",
        "info": {
          "code": "Blob.prototype.slice"
        },
        "returns": {
          "length": 0,
          "name": "slice",
          "type": "function"
        }
      },
      {
        "context": "api.Blob.type",
        "info": {
          "code": "'type' in Blob.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BlobEvent",
        "info": {
          "code": "self.BlobEvent"
        },
        "returns": {
          "length": 1,
          "name": "BlobEvent",
          "type": "function"
        }
      },
      {
        "context": "api.BlobEvent.data",
        "info": {
          "code": "'data' in BlobEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BlobEvent.timecode",
        "info": {
          "code": "'timecode' in BlobEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Bluetooth",
        "info": {
          "code": "self.Bluetooth"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Bluetooth.getAvailability",
        "info": {
          "code": "Bluetooth.prototype.getAvailability"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Bluetooth.onadvertisementreceived",
        "info": {
          "code": "'onadvertisementreceived' in Bluetooth.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Bluetooth.onavailabilitychanged",
        "info": {
          "code": "'onavailabilitychanged' in Bluetooth.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Bluetooth.oncharacteristicvaluechanged",
        "info": {
          "code": "'oncharacteristicvaluechanged' in Bluetooth.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Bluetooth.ongattserverdisconnected",
        "info": {
          "code": "'ongattserverdisconnected' in Bluetooth.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Bluetooth.onserviceadded",
        "info": {
          "code": "'onserviceadded' in Bluetooth.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Bluetooth.onservicechanged",
        "info": {
          "code": "'onservicechanged' in Bluetooth.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Bluetooth.onserviceremoved",
        "info": {
          "code": "'onserviceremoved' in Bluetooth.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Bluetooth.referringDevice",
        "info": {
          "code": "'referringDevice' in Bluetooth.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Bluetooth.requestDevice",
        "info": {
          "code": "Bluetooth.prototype.requestDevice"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothAdvertisingEvent",
        "info": {
          "code": "self.BluetoothAdvertisingEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothAdvertisingEvent.appearance",
        "info": {
          "code": "'appearance' in BluetoothAdvertisingEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothAdvertisingEvent.device",
        "info": {
          "code": "'device' in BluetoothAdvertisingEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothAdvertisingEvent.manufacturerData",
        "info": {
          "code": "'manufacturerData' in BluetoothAdvertisingEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothAdvertisingEvent.name",
        "info": {
          "code": "'name' in BluetoothAdvertisingEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothAdvertisingEvent.rssi",
        "info": {
          "code": "'rssi' in BluetoothAdvertisingEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothAdvertisingEvent.serviceData",
        "info": {
          "code": "'serviceData' in BluetoothAdvertisingEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothAdvertisingEvent.txPower",
        "info": {
          "code": "'txPower' in BluetoothAdvertisingEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothAdvertisingEvent.uuids",
        "info": {
          "code": "'uuids' in BluetoothAdvertisingEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties",
        "info": {
          "code": "self.BluetoothCharacteristicProperties"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties.authenticatedSignedWrites",
        "info": {
          "code": "'authenticatedSignedWrites' in BluetoothCharacteristicProperties.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties.broadcast",
        "info": {
          "code": "'broadcast' in BluetoothCharacteristicProperties.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties.indicate",
        "info": {
          "code": "'indicate' in BluetoothCharacteristicProperties.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties.notify",
        "info": {
          "code": "'notify' in BluetoothCharacteristicProperties.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties.read",
        "info": {
          "code": "'read' in BluetoothCharacteristicProperties.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties.reliableWrite",
        "info": {
          "code": "'reliableWrite' in BluetoothCharacteristicProperties.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties.writableAuxiliaries",
        "info": {
          "code": "'writableAuxiliaries' in BluetoothCharacteristicProperties.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties.write",
        "info": {
          "code": "'write' in BluetoothCharacteristicProperties.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothCharacteristicProperties.writeWithoutResponse",
        "info": {
          "code": "'writeWithoutResponse' in BluetoothCharacteristicProperties.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice",
        "info": {
          "code": "self.BluetoothDevice"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothDevice.gatt",
        "info": {
          "code": "'gatt' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.id",
        "info": {
          "code": "'id' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.name",
        "info": {
          "code": "'name' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.onadvertisementreceived",
        "info": {
          "code": "'onadvertisementreceived' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.oncharacteristicvaluechanged",
        "info": {
          "code": "'oncharacteristicvaluechanged' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.ongattserverdisconnected",
        "info": {
          "code": "'ongattserverdisconnected' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.onserviceadded",
        "info": {
          "code": "'onserviceadded' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.onservicechanged",
        "info": {
          "code": "'onservicechanged' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.onserviceremoved",
        "info": {
          "code": "'onserviceremoved' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.unwatchAdvertisements",
        "info": {
          "code": "BluetoothDevice.prototype.unwatchAdvertisements"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.watchAdvertisements",
        "info": {
          "code": "BluetoothDevice.prototype.watchAdvertisements"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothDevice.watchingAdvertisements",
        "info": {
          "code": "'watchingAdvertisements' in BluetoothDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothManufacturerDataMap",
        "info": {
          "code": "self.BluetoothManufacturerDataMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothPermissionResult",
        "info": {
          "code": "self.BluetoothPermissionResult"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothPermissionResult.devices",
        "info": {
          "code": "'devices' in BluetoothPermissionResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic",
        "info": {
          "code": "self.BluetoothRemoteGATTCharacteristic"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.getDescriptor",
        "info": {
          "code": "BluetoothRemoteGATTCharacteristic.prototype.getDescriptor"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.getDescriptors",
        "info": {
          "code": "BluetoothRemoteGATTCharacteristic.prototype.getDescriptors"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.oncharacteristicvaluechanged",
        "info": {
          "code": "'oncharacteristicvaluechanged' in BluetoothRemoteGATTCharacteristic.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.properties",
        "info": {
          "code": "'properties' in BluetoothRemoteGATTCharacteristic.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.readValue",
        "info": {
          "code": "BluetoothRemoteGATTCharacteristic.prototype.readValue"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.service",
        "info": {
          "code": "'service' in BluetoothRemoteGATTCharacteristic.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.startNotifications",
        "info": {
          "code": "BluetoothRemoteGATTCharacteristic.prototype.startNotifications"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.stopNotifications",
        "info": {
          "code": "BluetoothRemoteGATTCharacteristic.prototype.stopNotifications"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.uuid",
        "info": {
          "code": "'uuid' in BluetoothRemoteGATTCharacteristic.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.value",
        "info": {
          "code": "'value' in BluetoothRemoteGATTCharacteristic.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTCharacteristic.writeValue",
        "info": {
          "code": "BluetoothRemoteGATTCharacteristic.prototype.writeValue"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTDescriptor",
        "info": {
          "code": "self.BluetoothRemoteGATTDescriptor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTDescriptor.characteristic",
        "info": {
          "code": "'characteristic' in BluetoothRemoteGATTDescriptor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTDescriptor.readValue",
        "info": {
          "code": "BluetoothRemoteGATTDescriptor.prototype.readValue"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTDescriptor.uuid",
        "info": {
          "code": "'uuid' in BluetoothRemoteGATTDescriptor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTDescriptor.value",
        "info": {
          "code": "'value' in BluetoothRemoteGATTDescriptor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTDescriptor.writeValue",
        "info": {
          "code": "BluetoothRemoteGATTDescriptor.prototype.writeValue"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTServer",
        "info": {
          "code": "self.BluetoothRemoteGATTServer"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTServer.connect",
        "info": {
          "code": "BluetoothRemoteGATTServer.prototype.connect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTServer.connected",
        "info": {
          "code": "'connected' in BluetoothRemoteGATTServer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTServer.device",
        "info": {
          "code": "'device' in BluetoothRemoteGATTServer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTServer.disconnect",
        "info": {
          "code": "BluetoothRemoteGATTServer.prototype.disconnect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTServer.getPrimaryService",
        "info": {
          "code": "BluetoothRemoteGATTServer.prototype.getPrimaryService"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTServer.getPrimaryServices",
        "info": {
          "code": "BluetoothRemoteGATTServer.prototype.getPrimaryServices"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService",
        "info": {
          "code": "self.BluetoothRemoteGATTService"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.device",
        "info": {
          "code": "'device' in BluetoothRemoteGATTService.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.getCharacteristic",
        "info": {
          "code": "BluetoothRemoteGATTService.prototype.getCharacteristic"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.getCharacteristics",
        "info": {
          "code": "BluetoothRemoteGATTService.prototype.getCharacteristics"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.getIncludedService",
        "info": {
          "code": "BluetoothRemoteGATTService.prototype.getIncludedService"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.getIncludedServices",
        "info": {
          "code": "BluetoothRemoteGATTService.prototype.getIncludedServices"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.isPrimary",
        "info": {
          "code": "'isPrimary' in BluetoothRemoteGATTService.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.oncharacteristicvaluechanged",
        "info": {
          "code": "'oncharacteristicvaluechanged' in BluetoothRemoteGATTService.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.onserviceadded",
        "info": {
          "code": "'onserviceadded' in BluetoothRemoteGATTService.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.onservicechanged",
        "info": {
          "code": "'onservicechanged' in BluetoothRemoteGATTService.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.onserviceremoved",
        "info": {
          "code": "'onserviceremoved' in BluetoothRemoteGATTService.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothRemoteGATTService.uuid",
        "info": {
          "code": "'uuid' in BluetoothRemoteGATTService.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothServiceDataMap",
        "info": {
          "code": "self.BluetoothServiceDataMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothUUID",
        "info": {
          "code": "self.BluetoothUUID"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BluetoothUUID.canonicalUUID",
        "info": {
          "code": "BluetoothUUID.canonicalUUID"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothUUID.getCharacteristic",
        "info": {
          "code": "BluetoothUUID.getCharacteristic"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothUUID.getDescriptor",
        "info": {
          "code": "BluetoothUUID.getDescriptor"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BluetoothUUID.getService",
        "info": {
          "code": "BluetoothUUID.getService"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BreakToken",
        "info": {
          "code": "self.BreakToken"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.BreakToken.childBreakTokens",
        "info": {
          "code": "'childBreakTokens' in BreakToken.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BreakToken.data",
        "info": {
          "code": "'data' in BreakToken.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.BroadcastChannel",
        "info": {
          "code": "self.BroadcastChannel"
        },
        "returns": {
          "length": 1,
          "name": "BroadcastChannel",
          "type": "function"
        }
      },
      {
        "context": "api.BroadcastChannel.close",
        "info": {
          "code": "BroadcastChannel.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.BroadcastChannel.name",
        "info": {
          "code": "'name' in BroadcastChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BroadcastChannel.onmessage",
        "info": {
          "code": "'onmessage' in BroadcastChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BroadcastChannel.onmessageerror",
        "info": {
          "code": "'onmessageerror' in BroadcastChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.BroadcastChannel.postMessage",
        "info": {
          "code": "BroadcastChannel.prototype.postMessage"
        },
        "returns": {
          "length": 1,
          "name": "postMessage",
          "type": "function"
        }
      },
      {
        "context": "api.Cache",
        "info": {
          "code": "self.Cache"
        },
        "returns": {
          "length": 0,
          "name": "Cache",
          "type": "function"
        }
      },
      {
        "context": "api.Cache.add",
        "info": {
          "code": "Cache.prototype.add"
        },
        "returns": {
          "length": 1,
          "name": "add",
          "type": "function"
        }
      },
      {
        "context": "api.Cache.addAll",
        "info": {
          "code": "Cache.prototype.addAll"
        },
        "returns": {
          "length": 1,
          "name": "addAll",
          "type": "function"
        }
      },
      {
        "context": "api.Cache.delete",
        "info": {
          "code": "Cache.prototype.delete"
        },
        "returns": {
          "length": 1,
          "name": "delete",
          "type": "function"
        }
      },
      {
        "context": "api.Cache.keys",
        "info": {
          "code": "Cache.prototype.keys"
        },
        "returns": {
          "length": 0,
          "name": "keys",
          "type": "function"
        }
      },
      {
        "context": "api.Cache.match",
        "info": {
          "code": "Cache.prototype.match"
        },
        "returns": {
          "length": 1,
          "name": "match",
          "type": "function"
        }
      },
      {
        "context": "api.Cache.matchAll",
        "info": {
          "code": "Cache.prototype.matchAll"
        },
        "returns": {
          "length": 0,
          "name": "matchAll",
          "type": "function"
        }
      },
      {
        "context": "api.Cache.put",
        "info": {
          "code": "Cache.prototype.put"
        },
        "returns": {
          "length": 2,
          "name": "put",
          "type": "function"
        }
      },
      {
        "context": "api.CacheStorage",
        "info": {
          "code": "self.CacheStorage"
        },
        "returns": {
          "length": 2,
          "name": "CacheStorage",
          "type": "function"
        }
      },
      {
        "context": "api.CacheStorage.delete",
        "info": {
          "code": "CacheStorage.prototype.delete"
        },
        "returns": {
          "length": 1,
          "name": "delete",
          "type": "function"
        }
      },
      {
        "context": "api.CacheStorage.has",
        "info": {
          "code": "CacheStorage.prototype.has"
        },
        "returns": {
          "length": 1,
          "name": "has",
          "type": "function"
        }
      },
      {
        "context": "api.CacheStorage.keys",
        "info": {
          "code": "CacheStorage.prototype.keys"
        },
        "returns": {
          "length": 0,
          "name": "keys",
          "type": "function"
        }
      },
      {
        "context": "api.CacheStorage.match",
        "info": {
          "code": "CacheStorage.prototype.match"
        },
        "returns": {
          "length": 1,
          "name": "match",
          "type": "function"
        }
      },
      {
        "context": "api.CacheStorage.open",
        "info": {
          "code": "CacheStorage.prototype.open"
        },
        "returns": {
          "length": 1,
          "name": "open",
          "type": "function"
        }
      },
      {
        "context": "api.CanMakePaymentEvent",
        "info": {
          "code": "self.CanMakePaymentEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CanMakePaymentEvent.methodData",
        "info": {
          "code": "'methodData' in CanMakePaymentEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CanMakePaymentEvent.paymentRequestOrigin",
        "info": {
          "code": "'paymentRequestOrigin' in CanMakePaymentEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CanMakePaymentEvent.respondWith",
        "info": {
          "code": "CanMakePaymentEvent.prototype.respondWith"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CanMakePaymentEvent.topOrigin",
        "info": {
          "code": "'topOrigin' in CanMakePaymentEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CanvasCaptureMediaStreamTrack",
        "info": {
          "code": "self.CanvasCaptureMediaStreamTrack"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CanvasCaptureMediaStreamTrack.canvas",
        "info": {
          "code": "'canvas' in CanvasCaptureMediaStreamTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CanvasCaptureMediaStreamTrack.requestFrame",
        "info": {
          "code": "CanvasCaptureMediaStreamTrack.prototype.requestFrame"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CanvasGradient",
        "info": {
          "code": "self.CanvasGradient"
        },
        "returns": {
          "length": 0,
          "name": "CanvasGradient",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasGradient.addColorStop",
        "info": {
          "code": "CanvasGradient.prototype.addColorStop"
        },
        "returns": {
          "length": 2,
          "name": "addColorStop",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasPattern",
        "info": {
          "code": "self.CanvasPattern"
        },
        "returns": {
          "length": 0,
          "name": "CanvasPattern",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasPattern.setTransform",
        "info": {
          "code": "CanvasPattern.prototype.setTransform"
        },
        "returns": {
          "length": 1,
          "name": "setTransform",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D",
        "info": {
          "code": "self.CanvasRenderingContext2D"
        },
        "returns": {
          "length": 0,
          "name": "CanvasRenderingContext2D",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.arc",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.arc"
        },
        "returns": {
          "length": 5,
          "name": "arc",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.arcTo",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.arcTo"
        },
        "returns": {
          "length": 5,
          "name": "arcTo",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.beginPath",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.beginPath"
        },
        "returns": {
          "length": 0,
          "name": "beginPath",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.bezierCurveTo",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.bezierCurveTo"
        },
        "returns": {
          "length": 6,
          "name": "bezierCurveTo",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.canvas",
        "info": {
          "code": "'canvas' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.clearRect",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.clearRect"
        },
        "returns": {
          "length": 4,
          "name": "clearRect",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.clip",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.clip"
        },
        "returns": {
          "length": 0,
          "name": "clip",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.clip",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.clip"
        },
        "returns": {
          "length": 0,
          "name": "clip",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.closePath",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.closePath"
        },
        "returns": {
          "length": 0,
          "name": "closePath",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.createImageData",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.createImageData"
        },
        "returns": {
          "length": 1,
          "name": "createImageData",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.createImageData",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.createImageData"
        },
        "returns": {
          "length": 1,
          "name": "createImageData",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.createLinearGradient",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.createLinearGradient"
        },
        "returns": {
          "length": 4,
          "name": "createLinearGradient",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.createPattern",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.createPattern"
        },
        "returns": {
          "length": 2,
          "name": "createPattern",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.createRadialGradient",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.createRadialGradient"
        },
        "returns": {
          "length": 6,
          "name": "createRadialGradient",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.direction",
        "info": {
          "code": "'direction' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.drawFocusIfNeeded",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.drawFocusIfNeeded"
        },
        "returns": {
          "length": 1,
          "name": "drawFocusIfNeeded",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.drawFocusIfNeeded",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.drawFocusIfNeeded"
        },
        "returns": {
          "length": 1,
          "name": "drawFocusIfNeeded",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.drawImage",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.drawImage"
        },
        "returns": {
          "length": 3,
          "name": "drawImage",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.drawImage",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.drawImage"
        },
        "returns": {
          "length": 3,
          "name": "drawImage",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.drawImage",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.drawImage"
        },
        "returns": {
          "length": 3,
          "name": "drawImage",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.ellipse",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.ellipse"
        },
        "returns": {
          "length": 7,
          "name": "ellipse",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.fill",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.fill"
        },
        "returns": {
          "length": 0,
          "name": "fill",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.fill",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.fill"
        },
        "returns": {
          "length": 0,
          "name": "fill",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.fillRect",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.fillRect"
        },
        "returns": {
          "length": 4,
          "name": "fillRect",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.fillStyle",
        "info": {
          "code": "'fillStyle' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.fillText",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.fillText"
        },
        "returns": {
          "length": 3,
          "name": "fillText",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.filter",
        "info": {
          "code": "'filter' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.font",
        "info": {
          "code": "'font' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.getContextAttributes",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.getContextAttributes"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.getImageData",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.getImageData"
        },
        "returns": {
          "length": 4,
          "name": "getImageData",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.getLineDash",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.getLineDash"
        },
        "returns": {
          "length": 0,
          "name": "getLineDash",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.getTransform",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.getTransform"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.globalAlpha",
        "info": {
          "code": "'globalAlpha' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.globalCompositeOperation",
        "info": {
          "code": "'globalCompositeOperation' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.imageSmoothingEnabled",
        "info": {
          "code": "'imageSmoothingEnabled' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.imageSmoothingQuality",
        "info": {
          "code": "'imageSmoothingQuality' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.isPointInPath",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.isPointInPath"
        },
        "returns": {
          "length": 2,
          "name": "isPointInPath",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.isPointInPath",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.isPointInPath"
        },
        "returns": {
          "length": 2,
          "name": "isPointInPath",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.isPointInStroke",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.isPointInStroke"
        },
        "returns": {
          "length": 2,
          "name": "isPointInStroke",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.isPointInStroke",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.isPointInStroke"
        },
        "returns": {
          "length": 2,
          "name": "isPointInStroke",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.lineCap",
        "info": {
          "code": "'lineCap' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.lineDashOffset",
        "info": {
          "code": "'lineDashOffset' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.lineJoin",
        "info": {
          "code": "'lineJoin' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.lineTo",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.lineTo"
        },
        "returns": {
          "length": 2,
          "name": "lineTo",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.lineWidth",
        "info": {
          "code": "'lineWidth' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.measureText",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.measureText"
        },
        "returns": {
          "length": 1,
          "name": "measureText",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.miterLimit",
        "info": {
          "code": "'miterLimit' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.moveTo",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.moveTo"
        },
        "returns": {
          "length": 2,
          "name": "moveTo",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.putImageData",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.putImageData"
        },
        "returns": {
          "length": 3,
          "name": "putImageData",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.putImageData",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.putImageData"
        },
        "returns": {
          "length": 3,
          "name": "putImageData",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.quadraticCurveTo",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.quadraticCurveTo"
        },
        "returns": {
          "length": 4,
          "name": "quadraticCurveTo",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.rect",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.rect"
        },
        "returns": {
          "length": 4,
          "name": "rect",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.resetTransform",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.resetTransform"
        },
        "returns": {
          "length": 0,
          "name": "resetTransform",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.restore",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.restore"
        },
        "returns": {
          "length": 0,
          "name": "restore",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.rotate",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.rotate"
        },
        "returns": {
          "length": 1,
          "name": "rotate",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.save",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.save"
        },
        "returns": {
          "length": 0,
          "name": "save",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.scale",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.scale"
        },
        "returns": {
          "length": 2,
          "name": "scale",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.scrollPathIntoView",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.scrollPathIntoView"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.scrollPathIntoView",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.scrollPathIntoView"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.setLineDash",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.setLineDash"
        },
        "returns": {
          "length": 1,
          "name": "setLineDash",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.setTransform",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.setTransform"
        },
        "returns": {
          "length": 6,
          "name": "setTransform",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.setTransform",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.setTransform"
        },
        "returns": {
          "length": 6,
          "name": "setTransform",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.shadowBlur",
        "info": {
          "code": "'shadowBlur' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.shadowColor",
        "info": {
          "code": "'shadowColor' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.shadowOffsetX",
        "info": {
          "code": "'shadowOffsetX' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.shadowOffsetY",
        "info": {
          "code": "'shadowOffsetY' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.stroke",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.stroke"
        },
        "returns": {
          "length": 0,
          "name": "stroke",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.stroke",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.stroke"
        },
        "returns": {
          "length": 0,
          "name": "stroke",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.strokeRect",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.strokeRect"
        },
        "returns": {
          "length": 4,
          "name": "strokeRect",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.strokeStyle",
        "info": {
          "code": "'strokeStyle' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.strokeText",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.strokeText"
        },
        "returns": {
          "length": 3,
          "name": "strokeText",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.textAlign",
        "info": {
          "code": "'textAlign' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.textBaseline",
        "info": {
          "code": "'textBaseline' in CanvasRenderingContext2D.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.transform",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.transform"
        },
        "returns": {
          "length": 6,
          "name": "transform",
          "type": "function"
        }
      },
      {
        "context": "api.CanvasRenderingContext2D.translate",
        "info": {
          "code": "CanvasRenderingContext2D.prototype.translate"
        },
        "returns": {
          "length": 2,
          "name": "translate",
          "type": "function"
        }
      },
      {
        "context": "api.CaretPosition",
        "info": {
          "code": "self.CaretPosition"
        },
        "returns": {
          "length": 0,
          "name": "CaretPosition",
          "type": "function"
        }
      },
      {
        "context": "api.CaretPosition.getClientRect",
        "info": {
          "code": "CaretPosition.prototype.getClientRect"
        },
        "returns": {
          "length": 0,
          "name": "getClientRect",
          "type": "function"
        }
      },
      {
        "context": "api.CaretPosition.offset",
        "info": {
          "code": "'offset' in CaretPosition.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CaretPosition.offsetNode",
        "info": {
          "code": "'offsetNode' in CaretPosition.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CDATASection",
        "info": {
          "code": "self.CDATASection"
        },
        "returns": {
          "length": 0,
          "name": "CDATASection",
          "type": "function"
        }
      },
      {
        "context": "api.ChannelMergerNode",
        "info": {
          "code": "self.ChannelMergerNode"
        },
        "returns": {
          "length": 1,
          "name": "ChannelMergerNode",
          "type": "function"
        }
      },
      {
        "context": "api.ChannelSplitterNode",
        "info": {
          "code": "self.ChannelSplitterNode"
        },
        "returns": {
          "length": 1,
          "name": "ChannelSplitterNode",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData",
        "info": {
          "code": "self.CharacterData"
        },
        "returns": {
          "length": 0,
          "name": "CharacterData",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData.after",
        "info": {
          "code": "CharacterData.prototype.after"
        },
        "returns": {
          "length": 0,
          "name": "after",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData.appendData",
        "info": {
          "code": "CharacterData.prototype.appendData"
        },
        "returns": {
          "length": 1,
          "name": "appendData",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData.before",
        "info": {
          "code": "CharacterData.prototype.before"
        },
        "returns": {
          "length": 0,
          "name": "before",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData.data",
        "info": {
          "code": "'data' in CharacterData.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CharacterData.deleteData",
        "info": {
          "code": "CharacterData.prototype.deleteData"
        },
        "returns": {
          "length": 2,
          "name": "deleteData",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData.insertData",
        "info": {
          "code": "CharacterData.prototype.insertData"
        },
        "returns": {
          "length": 2,
          "name": "insertData",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData.length",
        "info": {
          "code": "'length' in CharacterData.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CharacterData.nextElementSibling",
        "info": {
          "code": "'nextElementSibling' in CharacterData.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CharacterData.previousElementSibling",
        "info": {
          "code": "'previousElementSibling' in CharacterData.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CharacterData.remove",
        "info": {
          "code": "CharacterData.prototype.remove"
        },
        "returns": {
          "length": 0,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData.replaceData",
        "info": {
          "code": "CharacterData.prototype.replaceData"
        },
        "returns": {
          "length": 3,
          "name": "replaceData",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData.replaceWith",
        "info": {
          "code": "CharacterData.prototype.replaceWith"
        },
        "returns": {
          "length": 0,
          "name": "replaceWith",
          "type": "function"
        }
      },
      {
        "context": "api.CharacterData.substringData",
        "info": {
          "code": "CharacterData.prototype.substringData"
        },
        "returns": {
          "length": 2,
          "name": "substringData",
          "type": "function"
        }
      },
      {
        "context": "api.ChildBreakToken",
        "info": {
          "code": "self.ChildBreakToken"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ChildBreakToken.breakType",
        "info": {
          "code": "'breakType' in ChildBreakToken.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ChildBreakToken.child",
        "info": {
          "code": "'child' in ChildBreakToken.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Client",
        "info": {
          "code": "self.Client"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Client.frameType",
        "info": {
          "code": "'frameType' in Client.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Client.id",
        "info": {
          "code": "'id' in Client.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Client.postMessage",
        "info": {
          "code": "Client.prototype.postMessage"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Client.type",
        "info": {
          "code": "'type' in Client.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Client.url",
        "info": {
          "code": "'url' in Client.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Clients",
        "info": {
          "code": "self.Clients"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Clients.claim",
        "info": {
          "code": "Clients.prototype.claim"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Clients.get",
        "info": {
          "code": "Clients.prototype.get"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Clients.matchAll",
        "info": {
          "code": "Clients.prototype.matchAll"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Clients.openWindow",
        "info": {
          "code": "Clients.prototype.openWindow"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Clipboard",
        "info": {
          "code": "self.Clipboard"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Clipboard.read",
        "info": {
          "code": "Clipboard.prototype.read"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Clipboard.readText",
        "info": {
          "code": "Clipboard.prototype.readText"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Clipboard.write",
        "info": {
          "code": "Clipboard.prototype.write"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Clipboard.writeText",
        "info": {
          "code": "Clipboard.prototype.writeText"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ClipboardEvent",
        "info": {
          "code": "self.ClipboardEvent"
        },
        "returns": {
          "length": 1,
          "name": "ClipboardEvent",
          "type": "function"
        }
      },
      {
        "context": "api.ClipboardEvent.clipboardData",
        "info": {
          "code": "'clipboardData' in ClipboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CloseEvent",
        "info": {
          "code": "self.CloseEvent"
        },
        "returns": {
          "length": 1,
          "name": "CloseEvent",
          "type": "function"
        }
      },
      {
        "context": "api.CloseEvent.code",
        "info": {
          "code": "'code' in CloseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CloseEvent.reason",
        "info": {
          "code": "'reason' in CloseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CloseEvent.wasClean",
        "info": {
          "code": "'wasClean' in CloseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Comment",
        "info": {
          "code": "self.Comment"
        },
        "returns": {
          "length": 0,
          "name": "Comment",
          "type": "function"
        }
      },
      {
        "context": "api.CompileError",
        "info": {
          "code": "self.CompileError"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CompositionEvent",
        "info": {
          "code": "self.CompositionEvent"
        },
        "returns": {
          "length": 1,
          "name": "CompositionEvent",
          "type": "function"
        }
      },
      {
        "context": "api.CompositionEvent.data",
        "info": {
          "code": "'data' in CompositionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ConstantSourceNode",
        "info": {
          "code": "self.ConstantSourceNode"
        },
        "returns": {
          "length": 1,
          "name": "ConstantSourceNode",
          "type": "function"
        }
      },
      {
        "context": "api.ConstantSourceNode.offset",
        "info": {
          "code": "'offset' in ConstantSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ConstrainablePattern",
        "info": {
          "code": "self.ConstrainablePattern"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ConstrainablePattern.applyConstraints",
        "info": {
          "code": "ConstrainablePattern.prototype.applyConstraints"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ConstrainablePattern.getCapabilities",
        "info": {
          "code": "ConstrainablePattern.prototype.getCapabilities"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ConstrainablePattern.getConstraints",
        "info": {
          "code": "ConstrainablePattern.prototype.getConstraints"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ConstrainablePattern.getSettings",
        "info": {
          "code": "ConstrainablePattern.prototype.getSettings"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ConstrainablePattern.onoverconstrained",
        "info": {
          "code": "'onoverconstrained' in ConstrainablePattern.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ConvolverNode",
        "info": {
          "code": "self.ConvolverNode"
        },
        "returns": {
          "length": 1,
          "name": "ConvolverNode",
          "type": "function"
        }
      },
      {
        "context": "api.ConvolverNode.buffer",
        "info": {
          "code": "'buffer' in ConvolverNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ConvolverNode.normalize",
        "info": {
          "code": "'normalize' in ConvolverNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CookieChangeEvent",
        "info": {
          "code": "self.CookieChangeEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CookieChangeEvent.changed",
        "info": {
          "code": "'changed' in CookieChangeEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieChangeEvent.deleted",
        "info": {
          "code": "'deleted' in CookieChangeEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore",
        "info": {
          "code": "self.CookieStore"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CookieStore.delete",
        "info": {
          "code": "CookieStore.prototype.delete"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.delete",
        "info": {
          "code": "CookieStore.prototype.delete"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.get",
        "info": {
          "code": "CookieStore.prototype.get"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.get",
        "info": {
          "code": "CookieStore.prototype.get"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.getAll",
        "info": {
          "code": "CookieStore.prototype.getAll"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.getAll",
        "info": {
          "code": "CookieStore.prototype.getAll"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.getChangeSubscriptions",
        "info": {
          "code": "CookieStore.prototype.getChangeSubscriptions"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.onchange",
        "info": {
          "code": "'onchange' in CookieStore.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.set",
        "info": {
          "code": "CookieStore.prototype.set"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.set",
        "info": {
          "code": "CookieStore.prototype.set"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CookieStore.subscribeToChanges",
        "info": {
          "code": "CookieStore.prototype.subscribeToChanges"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Coordinates",
        "info": {
          "code": "self.Coordinates"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Coordinates.accuracy",
        "info": {
          "code": "'accuracy' in Coordinates.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Coordinates.altitude",
        "info": {
          "code": "'altitude' in Coordinates.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Coordinates.altitudeAccuracy",
        "info": {
          "code": "'altitudeAccuracy' in Coordinates.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Coordinates.heading",
        "info": {
          "code": "'heading' in Coordinates.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Coordinates.latitude",
        "info": {
          "code": "'latitude' in Coordinates.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Coordinates.longitude",
        "info": {
          "code": "'longitude' in Coordinates.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Coordinates.speed",
        "info": {
          "code": "'speed' in Coordinates.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CrashReportBody",
        "info": {
          "code": "self.CrashReportBody"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CrashReportBody.reason",
        "info": {
          "code": "'reason' in CrashReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Credential",
        "info": {
          "code": "self.Credential"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Credential.id",
        "info": {
          "code": "'id' in Credential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Credential.type",
        "info": {
          "code": "'type' in Credential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CredentialsContainer",
        "info": {
          "code": "self.CredentialsContainer"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CredentialsContainer.create",
        "info": {
          "code": "CredentialsContainer.prototype.create"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CredentialsContainer.get",
        "info": {
          "code": "CredentialsContainer.prototype.get"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CredentialsContainer.preventSilentAccess",
        "info": {
          "code": "CredentialsContainer.prototype.preventSilentAccess"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CredentialsContainer.store",
        "info": {
          "code": "CredentialsContainer.prototype.store"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Crypto",
        "info": {
          "code": "self.Crypto"
        },
        "returns": {
          "length": 0,
          "name": "Crypto",
          "type": "function"
        }
      },
      {
        "context": "api.Crypto.getRandomValues",
        "info": {
          "code": "Crypto.prototype.getRandomValues"
        },
        "returns": {
          "length": 1,
          "name": "getRandomValues",
          "type": "function"
        }
      },
      {
        "context": "api.Crypto.subtle",
        "info": {
          "code": "'subtle' in Crypto.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CryptoKey",
        "info": {
          "code": "self.CryptoKey"
        },
        "returns": {
          "length": 0,
          "name": "CryptoKey",
          "type": "function"
        }
      },
      {
        "context": "api.CryptoKey.algorithm",
        "info": {
          "code": "'algorithm' in CryptoKey.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CryptoKey.extractable",
        "info": {
          "code": "'extractable' in CryptoKey.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CryptoKey.type",
        "info": {
          "code": "'type' in CryptoKey.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CryptoKey.usages",
        "info": {
          "code": "'usages' in CryptoKey.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSConditionRule",
        "info": {
          "code": "self.CSSConditionRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSConditionRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSConditionRule.conditionText",
        "info": {
          "code": "'conditionText' in CSSConditionRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule",
        "info": {
          "code": "self.CSSCounterStyleRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSCounterStyleRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSCounterStyleRule.additiveSymbols",
        "info": {
          "code": "'additiveSymbols' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.fallback",
        "info": {
          "code": "'fallback' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.name",
        "info": {
          "code": "'name' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.negative",
        "info": {
          "code": "'negative' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.pad",
        "info": {
          "code": "'pad' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.prefix",
        "info": {
          "code": "'prefix' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.range",
        "info": {
          "code": "'range' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.speakAs",
        "info": {
          "code": "'speakAs' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.suffix",
        "info": {
          "code": "'suffix' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.symbols",
        "info": {
          "code": "'symbols' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSCounterStyleRule.system",
        "info": {
          "code": "'system' in CSSCounterStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSFontFaceRule",
        "info": {
          "code": "self.CSSFontFaceRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSFontFaceRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSFontFaceRule.style",
        "info": {
          "code": "'style' in CSSFontFaceRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSFontFeatureValuesMap",
        "info": {
          "code": "self.CSSFontFeatureValuesMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSFontFeatureValuesMap.set",
        "info": {
          "code": "CSSFontFeatureValuesMap.prototype.set"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSFontFeatureValuesRule",
        "info": {
          "code": "self.CSSFontFeatureValuesRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSFontFeatureValuesRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSFontFeatureValuesRule.annotation",
        "info": {
          "code": "'annotation' in CSSFontFeatureValuesRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CSSFontFeatureValuesRule.characterVariant",
        "info": {
          "code": "'characterVariant' in CSSFontFeatureValuesRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CSSFontFeatureValuesRule.fontFamily",
        "info": {
          "code": "'fontFamily' in CSSFontFeatureValuesRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSFontFeatureValuesRule.ornaments",
        "info": {
          "code": "'ornaments' in CSSFontFeatureValuesRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CSSFontFeatureValuesRule.styleset",
        "info": {
          "code": "'styleset' in CSSFontFeatureValuesRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CSSFontFeatureValuesRule.stylistic",
        "info": {
          "code": "'stylistic' in CSSFontFeatureValuesRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CSSFontFeatureValuesRule.swash",
        "info": {
          "code": "'swash' in CSSFontFeatureValuesRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CSSFontPaletteValuesRule",
        "info": {
          "code": "self.CSSFontPaletteValuesRule"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSFontPaletteValuesRule.basePalette",
        "info": {
          "code": "'basePalette' in CSSFontPaletteValuesRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSFontPaletteValuesRule.fontFamily",
        "info": {
          "code": "'fontFamily' in CSSFontPaletteValuesRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSGroupingRule",
        "info": {
          "code": "self.CSSGroupingRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSGroupingRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSGroupingRule.cssRules",
        "info": {
          "code": "'cssRules' in CSSGroupingRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSGroupingRule.deleteRule",
        "info": {
          "code": "CSSGroupingRule.prototype.deleteRule"
        },
        "returns": {
          "length": 1,
          "name": "deleteRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSGroupingRule.insertRule",
        "info": {
          "code": "CSSGroupingRule.prototype.insertRule"
        },
        "returns": {
          "length": 1,
          "name": "insertRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSImageValue",
        "info": {
          "code": "self.CSSImageValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSImportRule",
        "info": {
          "code": "self.CSSImportRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSImportRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSImportRule.href",
        "info": {
          "code": "'href' in CSSImportRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSImportRule.media",
        "info": {
          "code": "'media' in CSSImportRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSImportRule.styleSheet",
        "info": {
          "code": "'styleSheet' in CSSImportRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSKeyframeRule",
        "info": {
          "code": "self.CSSKeyframeRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSKeyframeRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSKeyframeRule.keyText",
        "info": {
          "code": "'keyText' in CSSKeyframeRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSKeyframeRule.style",
        "info": {
          "code": "'style' in CSSKeyframeRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSKeyframesRule",
        "info": {
          "code": "self.CSSKeyframesRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSKeyframesRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSKeyframesRule.appendRule",
        "info": {
          "code": "CSSKeyframesRule.prototype.appendRule"
        },
        "returns": {
          "length": 1,
          "name": "appendRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSKeyframesRule.cssRules",
        "info": {
          "code": "'cssRules' in CSSKeyframesRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSKeyframesRule.deleteRule",
        "info": {
          "code": "CSSKeyframesRule.prototype.deleteRule"
        },
        "returns": {
          "length": 1,
          "name": "deleteRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSKeyframesRule.findRule",
        "info": {
          "code": "CSSKeyframesRule.prototype.findRule"
        },
        "returns": {
          "length": 1,
          "name": "findRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSKeyframesRule.name",
        "info": {
          "code": "'name' in CSSKeyframesRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSKeywordValue",
        "info": {
          "code": "self.CSSKeywordValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSKeywordValue.value",
        "info": {
          "code": "'value' in CSSKeywordValue.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMarginRule",
        "info": {
          "code": "self.CSSMarginRule"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMarginRule.name",
        "info": {
          "code": "'name' in CSSMarginRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMarginRule.style",
        "info": {
          "code": "'style' in CSSMarginRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathClamp",
        "info": {
          "code": "self.CSSMathClamp"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMathClamp.max",
        "info": {
          "code": "'max' in CSSMathClamp.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathClamp.min",
        "info": {
          "code": "'min' in CSSMathClamp.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathClamp.val",
        "info": {
          "code": "'val' in CSSMathClamp.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathInvert",
        "info": {
          "code": "self.CSSMathInvert"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMathInvert.value",
        "info": {
          "code": "'value' in CSSMathInvert.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathMax",
        "info": {
          "code": "self.CSSMathMax"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMathMax.values",
        "info": {
          "code": "'values' in CSSMathMax.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathMin",
        "info": {
          "code": "self.CSSMathMin"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMathMin.values",
        "info": {
          "code": "'values' in CSSMathMin.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathNegate",
        "info": {
          "code": "self.CSSMathNegate"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMathNegate.value",
        "info": {
          "code": "'value' in CSSMathNegate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathProduct",
        "info": {
          "code": "self.CSSMathProduct"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMathProduct.values",
        "info": {
          "code": "'values' in CSSMathProduct.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathSum",
        "info": {
          "code": "self.CSSMathSum"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMathSum.values",
        "info": {
          "code": "'values' in CSSMathSum.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMathValue",
        "info": {
          "code": "self.CSSMathValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMathValue.operator",
        "info": {
          "code": "'operator' in CSSMathValue.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMatrixComponent",
        "info": {
          "code": "self.CSSMatrixComponent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSMatrixComponent.matrix",
        "info": {
          "code": "'matrix' in CSSMatrixComponent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSMediaRule",
        "info": {
          "code": "self.CSSMediaRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSMediaRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSMediaRule.media",
        "info": {
          "code": "'media' in CSSMediaRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSNamespaceRule",
        "info": {
          "code": "self.CSSNamespaceRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSNamespaceRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSNamespaceRule.namespaceURI",
        "info": {
          "code": "'namespaceURI' in CSSNamespaceRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSNamespaceRule.prefix",
        "info": {
          "code": "'prefix' in CSSNamespaceRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSNumericArray",
        "info": {
          "code": "self.CSSNumericArray"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSNumericArray.length",
        "info": {
          "code": "'length' in CSSNumericArray.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue",
        "info": {
          "code": "self.CSSNumericValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSNumericValue.add",
        "info": {
          "code": "CSSNumericValue.prototype.add"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.div",
        "info": {
          "code": "CSSNumericValue.prototype.div"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.equals",
        "info": {
          "code": "CSSNumericValue.prototype.equals"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.max",
        "info": {
          "code": "CSSNumericValue.prototype.max"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.min",
        "info": {
          "code": "CSSNumericValue.prototype.min"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.mul",
        "info": {
          "code": "CSSNumericValue.prototype.mul"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.parse",
        "info": {
          "code": "CSSNumericValue.parse"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.sub",
        "info": {
          "code": "CSSNumericValue.prototype.sub"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.to",
        "info": {
          "code": "CSSNumericValue.prototype.to"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.toSum",
        "info": {
          "code": "CSSNumericValue.prototype.toSum"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSNumericValue.type",
        "info": {
          "code": "CSSNumericValue.prototype.type"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPageRule",
        "info": {
          "code": "self.CSSPageRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSPageRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSPageRule.selectorText",
        "info": {
          "code": "'selectorText' in CSSPageRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CSSPageRule.style",
        "info": {
          "code": "'style' in CSSPageRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSParserAtRule",
        "info": {
          "code": "self.CSSParserAtRule"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSParserAtRule.body",
        "info": {
          "code": "'body' in CSSParserAtRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserAtRule.name",
        "info": {
          "code": "'name' in CSSParserAtRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserAtRule.prelude",
        "info": {
          "code": "'prelude' in CSSParserAtRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserBlock",
        "info": {
          "code": "self.CSSParserBlock"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSParserBlock.body",
        "info": {
          "code": "'body' in CSSParserBlock.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserBlock.name",
        "info": {
          "code": "'name' in CSSParserBlock.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserDeclaration",
        "info": {
          "code": "self.CSSParserDeclaration"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSParserDeclaration.body",
        "info": {
          "code": "'body' in CSSParserDeclaration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserDeclaration.name",
        "info": {
          "code": "'name' in CSSParserDeclaration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserFunction",
        "info": {
          "code": "self.CSSParserFunction"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSParserFunction.args",
        "info": {
          "code": "'args' in CSSParserFunction.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserFunction.name",
        "info": {
          "code": "'name' in CSSParserFunction.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserQualifiedRule",
        "info": {
          "code": "self.CSSParserQualifiedRule"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSParserQualifiedRule.body",
        "info": {
          "code": "'body' in CSSParserQualifiedRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserQualifiedRule.prelude",
        "info": {
          "code": "'prelude' in CSSParserQualifiedRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSParserRule",
        "info": {
          "code": "self.CSSParserRule"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSParserValue",
        "info": {
          "code": "self.CSSParserValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSPerspective",
        "info": {
          "code": "self.CSSPerspective"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSPerspective.length",
        "info": {
          "code": "'length' in CSSPerspective.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElement",
        "info": {
          "code": "self.CSSPseudoElement"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSPseudoElement.animate",
        "info": {
          "code": "CSSPseudoElement.prototype.animate"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElement.convertPointFromNode",
        "info": {
          "code": "CSSPseudoElement.prototype.convertPointFromNode"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElement.convertQuadFromNode",
        "info": {
          "code": "CSSPseudoElement.prototype.convertQuadFromNode"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElement.convertRectFromNode",
        "info": {
          "code": "CSSPseudoElement.prototype.convertRectFromNode"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElement.element",
        "info": {
          "code": "'element' in CSSPseudoElement.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElement.getAnimations",
        "info": {
          "code": "CSSPseudoElement.prototype.getAnimations"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElement.getBoxQuads",
        "info": {
          "code": "CSSPseudoElement.prototype.getBoxQuads"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElement.style",
        "info": {
          "code": "'style' in CSSPseudoElement.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElement.type",
        "info": {
          "code": "'type' in CSSPseudoElement.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElementList",
        "info": {
          "code": "self.CSSPseudoElementList"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSPseudoElementList.getByType",
        "info": {
          "code": "CSSPseudoElementList.prototype.getByType"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElementList.item",
        "info": {
          "code": "CSSPseudoElementList.prototype.item"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSPseudoElementList.length",
        "info": {
          "code": "'length' in CSSPseudoElementList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSRotate",
        "info": {
          "code": "self.CSSRotate"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSRotate.angle",
        "info": {
          "code": "'angle' in CSSRotate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSRotate.x",
        "info": {
          "code": "'x' in CSSRotate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSRotate.y",
        "info": {
          "code": "'y' in CSSRotate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSRotate.z",
        "info": {
          "code": "'z' in CSSRotate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSRule",
        "info": {
          "code": "self.CSSRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSRule.CHARSET_RULE",
        "info": {
          "code": "CSSRule.CHARSET_RULE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.CSSRule.COUNTER_STYLE_RULE",
        "info": {
          "code": "CSSRule.COUNTER_STYLE_RULE"
        },
        "returns": {
          "type": "number",
          "value": 11
        }
      },
      {
        "context": "api.CSSRule.cssText",
        "info": {
          "code": "'cssText' in CSSRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSRule.FONT_FACE_RULE",
        "info": {
          "code": "CSSRule.FONT_FACE_RULE"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.CSSRule.FONT_FEATURE_VALUES_RULE",
        "info": {
          "code": "CSSRule.FONT_FEATURE_VALUES_RULE"
        },
        "returns": {
          "type": "number",
          "value": 14
        }
      },
      {
        "context": "api.CSSRule.FONT_PALETTE_VALUES_RULE",
        "info": {
          "code": "CSSRule.FONT_PALETTE_VALUES_RULE"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSRule.IMPORT_RULE",
        "info": {
          "code": "CSSRule.IMPORT_RULE"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.CSSRule.KEYFRAME_RULE",
        "info": {
          "code": "CSSRule.KEYFRAME_RULE"
        },
        "returns": {
          "type": "number",
          "value": 8
        }
      },
      {
        "context": "api.CSSRule.KEYFRAMES_RULE",
        "info": {
          "code": "CSSRule.KEYFRAMES_RULE"
        },
        "returns": {
          "type": "number",
          "value": 7
        }
      },
      {
        "context": "api.CSSRule.MARGIN_RULE",
        "info": {
          "code": "CSSRule.MARGIN_RULE"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSRule.MEDIA_RULE",
        "info": {
          "code": "CSSRule.MEDIA_RULE"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.CSSRule.NAMESPACE_RULE",
        "info": {
          "code": "CSSRule.NAMESPACE_RULE"
        },
        "returns": {
          "type": "number",
          "value": 10
        }
      },
      {
        "context": "api.CSSRule.PAGE_RULE",
        "info": {
          "code": "CSSRule.PAGE_RULE"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.CSSRule.parentRule",
        "info": {
          "code": "'parentRule' in CSSRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSRule.parentStyleSheet",
        "info": {
          "code": "'parentStyleSheet' in CSSRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSRule.STYLE_RULE",
        "info": {
          "code": "CSSRule.STYLE_RULE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.CSSRule.SUPPORTS_RULE",
        "info": {
          "code": "CSSRule.SUPPORTS_RULE"
        },
        "returns": {
          "type": "number",
          "value": 12
        }
      },
      {
        "context": "api.CSSRule.type",
        "info": {
          "code": "'type' in CSSRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSRule.VIEWPORT_RULE",
        "info": {
          "code": "CSSRule.VIEWPORT_RULE"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSRuleList",
        "info": {
          "code": "self.CSSRuleList"
        },
        "returns": {
          "length": 0,
          "name": "CSSRuleList",
          "type": "function"
        }
      },
      {
        "context": "api.CSSRuleList.item",
        "info": {
          "code": "CSSRuleList.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.CSSRuleList.length",
        "info": {
          "code": "'length' in CSSRuleList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSScale",
        "info": {
          "code": "self.CSSScale"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSScale.x",
        "info": {
          "code": "'x' in CSSScale.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSScale.y",
        "info": {
          "code": "'y' in CSSScale.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSScale.z",
        "info": {
          "code": "'z' in CSSScale.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSSkew",
        "info": {
          "code": "self.CSSSkew"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSSkew.ax",
        "info": {
          "code": "'ax' in CSSSkew.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSSkew.ay",
        "info": {
          "code": "'ay' in CSSSkew.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSSkewX",
        "info": {
          "code": "self.CSSSkewX"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSSkewX.ax",
        "info": {
          "code": "'ax' in CSSSkewX.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSSkewY",
        "info": {
          "code": "self.CSSSkewY"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSSkewY.ay",
        "info": {
          "code": "'ay' in CSSSkewY.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSStyleDeclaration",
        "info": {
          "code": "self.CSSStyleDeclaration"
        },
        "returns": {
          "length": 0,
          "name": "CSSStyleDeclaration",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleDeclaration.cssFloat",
        "info": {
          "code": "'cssFloat' in CSSStyleDeclaration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CSSStyleDeclaration.cssText",
        "info": {
          "code": "'cssText' in CSSStyleDeclaration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSStyleDeclaration.getPropertyPriority",
        "info": {
          "code": "CSSStyleDeclaration.prototype.getPropertyPriority"
        },
        "returns": {
          "length": 1,
          "name": "getPropertyPriority",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleDeclaration.getPropertyValue",
        "info": {
          "code": "CSSStyleDeclaration.prototype.getPropertyValue"
        },
        "returns": {
          "length": 1,
          "name": "getPropertyValue",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleDeclaration.item",
        "info": {
          "code": "CSSStyleDeclaration.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleDeclaration.length",
        "info": {
          "code": "'length' in CSSStyleDeclaration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSStyleDeclaration.parentRule",
        "info": {
          "code": "'parentRule' in CSSStyleDeclaration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSStyleDeclaration.removeProperty",
        "info": {
          "code": "CSSStyleDeclaration.prototype.removeProperty"
        },
        "returns": {
          "length": 1,
          "name": "removeProperty",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleDeclaration.setProperty",
        "info": {
          "code": "CSSStyleDeclaration.prototype.setProperty"
        },
        "returns": {
          "length": 2,
          "name": "setProperty",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleRule",
        "info": {
          "code": "self.CSSStyleRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSStyleRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleRule.selectorText",
        "info": {
          "code": "'selectorText' in CSSStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSStyleRule.style",
        "info": {
          "code": "'style' in CSSStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSStyleRule.styleMap",
        "info": {
          "code": "'styleMap' in CSSStyleRule.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.CSSStyleSheet",
        "info": {
          "code": "self.CSSStyleSheet"
        },
        "returns": {
          "length": 0,
          "name": "CSSStyleSheet",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleSheet.cssRules",
        "info": {
          "code": "'cssRules' in CSSStyleSheet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSStyleSheet.deleteRule",
        "info": {
          "code": "CSSStyleSheet.prototype.deleteRule"
        },
        "returns": {
          "length": 1,
          "name": "deleteRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleSheet.insertRule",
        "info": {
          "code": "CSSStyleSheet.prototype.insertRule"
        },
        "returns": {
          "length": 1,
          "name": "insertRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSStyleSheet.ownerRule",
        "info": {
          "code": "'ownerRule' in CSSStyleSheet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CSSStyleValue",
        "info": {
          "code": "self.CSSStyleValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSStyleValue.parse",
        "info": {
          "code": "CSSStyleValue.parse"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSStyleValue.parseAll",
        "info": {
          "code": "CSSStyleValue.parseAll"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSSupportsRule",
        "info": {
          "code": "self.CSSSupportsRule"
        },
        "returns": {
          "length": 0,
          "name": "CSSSupportsRule",
          "type": "function"
        }
      },
      {
        "context": "api.CSSTransformComponent",
        "info": {
          "code": "self.CSSTransformComponent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSTransformComponent.is2D",
        "info": {
          "code": "'is2D' in CSSTransformComponent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSTransformComponent.toMatrix",
        "info": {
          "code": "CSSTransformComponent.prototype.toMatrix"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSTransformValue",
        "info": {
          "code": "self.CSSTransformValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSTransformValue.is2D",
        "info": {
          "code": "'is2D' in CSSTransformValue.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSTransformValue.length",
        "info": {
          "code": "'length' in CSSTransformValue.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSTransformValue.toMatrix",
        "info": {
          "code": "CSSTransformValue.prototype.toMatrix"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSTranslate",
        "info": {
          "code": "self.CSSTranslate"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSTranslate.x",
        "info": {
          "code": "'x' in CSSTranslate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSTranslate.y",
        "info": {
          "code": "'y' in CSSTranslate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSTranslate.z",
        "info": {
          "code": "'z' in CSSTranslate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSUnitValue",
        "info": {
          "code": "self.CSSUnitValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSUnitValue.unit",
        "info": {
          "code": "'unit' in CSSUnitValue.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSUnitValue.value",
        "info": {
          "code": "'value' in CSSUnitValue.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSUnparsedValue",
        "info": {
          "code": "self.CSSUnparsedValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSUnparsedValue.length",
        "info": {
          "code": "'length' in CSSUnparsedValue.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSVariableReferenceValue",
        "info": {
          "code": "self.CSSVariableReferenceValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSVariableReferenceValue.fallback",
        "info": {
          "code": "'fallback' in CSSVariableReferenceValue.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSVariableReferenceValue.variable",
        "info": {
          "code": "'variable' in CSSVariableReferenceValue.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CSSViewportRule",
        "info": {
          "code": "self.CSSViewportRule"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.CSSViewportRule.style",
        "info": {
          "code": "'style' in CSSViewportRule.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.CustomElementRegistry",
        "info": {
          "code": "self.CustomElementRegistry"
        },
        "returns": {
          "length": 0,
          "name": "CustomElementRegistry",
          "type": "function"
        }
      },
      {
        "context": "api.CustomElementRegistry.define",
        "info": {
          "code": "CustomElementRegistry.prototype.define"
        },
        "returns": {
          "length": 2,
          "name": "define",
          "type": "function"
        }
      },
      {
        "context": "api.CustomElementRegistry.get",
        "info": {
          "code": "CustomElementRegistry.prototype.get"
        },
        "returns": {
          "length": 1,
          "name": "get",
          "type": "function"
        }
      },
      {
        "context": "api.CustomElementRegistry.upgrade",
        "info": {
          "code": "CustomElementRegistry.prototype.upgrade"
        },
        "returns": {
          "length": 1,
          "name": "upgrade",
          "type": "function"
        }
      },
      {
        "context": "api.CustomElementRegistry.whenDefined",
        "info": {
          "code": "CustomElementRegistry.prototype.whenDefined"
        },
        "returns": {
          "length": 1,
          "name": "whenDefined",
          "type": "function"
        }
      },
      {
        "context": "api.CustomEvent",
        "info": {
          "code": "self.CustomEvent"
        },
        "returns": {
          "length": 1,
          "name": "CustomEvent",
          "type": "function"
        }
      },
      {
        "context": "api.CustomEvent.detail",
        "info": {
          "code": "'detail' in CustomEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.CustomEvent.initCustomEvent",
        "info": {
          "code": "CustomEvent.prototype.initCustomEvent"
        },
        "returns": {
          "length": 1,
          "name": "initCustomEvent",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransfer",
        "info": {
          "code": "self.DataTransfer"
        },
        "returns": {
          "length": 0,
          "name": "DataTransfer",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransfer.clearData",
        "info": {
          "code": "DataTransfer.prototype.clearData"
        },
        "returns": {
          "length": 0,
          "name": "clearData",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransfer.dropEffect",
        "info": {
          "code": "'dropEffect' in DataTransfer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DataTransfer.effectAllowed",
        "info": {
          "code": "'effectAllowed' in DataTransfer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DataTransfer.files",
        "info": {
          "code": "'files' in DataTransfer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DataTransfer.getData",
        "info": {
          "code": "DataTransfer.prototype.getData"
        },
        "returns": {
          "length": 1,
          "name": "getData",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransfer.items",
        "info": {
          "code": "'items' in DataTransfer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DataTransfer.setData",
        "info": {
          "code": "DataTransfer.prototype.setData"
        },
        "returns": {
          "length": 2,
          "name": "setData",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransfer.setDragImage",
        "info": {
          "code": "DataTransfer.prototype.setDragImage"
        },
        "returns": {
          "length": 3,
          "name": "setDragImage",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransfer.types",
        "info": {
          "code": "'types' in DataTransfer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DataTransferItem",
        "info": {
          "code": "self.DataTransferItem"
        },
        "returns": {
          "length": 0,
          "name": "DataTransferItem",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransferItem.getAsFile",
        "info": {
          "code": "DataTransferItem.prototype.getAsFile"
        },
        "returns": {
          "length": 0,
          "name": "getAsFile",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransferItem.getAsString",
        "info": {
          "code": "DataTransferItem.prototype.getAsString"
        },
        "returns": {
          "length": 1,
          "name": "getAsString",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransferItem.kind",
        "info": {
          "code": "'kind' in DataTransferItem.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DataTransferItem.type",
        "info": {
          "code": "'type' in DataTransferItem.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DataTransferItem.webkitGetAsEntry",
        "info": {
          "code": "DataTransferItem.prototype.webkitGetAsEntry"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DataTransferItemList",
        "info": {
          "code": "self.DataTransferItemList"
        },
        "returns": {
          "length": 0,
          "name": "DataTransferItemList",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransferItemList.add",
        "info": {
          "code": "DataTransferItemList.prototype.add"
        },
        "returns": {
          "length": 1,
          "name": "add",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransferItemList.add",
        "info": {
          "code": "DataTransferItemList.prototype.add"
        },
        "returns": {
          "length": 1,
          "name": "add",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransferItemList.clear",
        "info": {
          "code": "DataTransferItemList.prototype.clear"
        },
        "returns": {
          "length": 0,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.DataTransferItemList.length",
        "info": {
          "code": "'length' in DataTransferItemList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DataTransferItemList.remove",
        "info": {
          "code": "DataTransferItemList.prototype.remove"
        },
        "returns": {
          "length": 1,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.DeadFragmentInformation",
        "info": {
          "code": "self.DeadFragmentInformation"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DeadFragmentInformation.children",
        "info": {
          "code": "'children' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.height",
        "info": {
          "code": "'height' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.isOverflowed",
        "info": {
          "code": "'isOverflowed' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.left",
        "info": {
          "code": "'left' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.nextInBox",
        "info": {
          "code": "'nextInBox' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.nextSibling",
        "info": {
          "code": "'nextSibling' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.node",
        "info": {
          "code": "'node' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.previousInBox",
        "info": {
          "code": "'previousInBox' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.previousSibling",
        "info": {
          "code": "'previousSibling' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.top",
        "info": {
          "code": "'top' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeadFragmentInformation.width",
        "info": {
          "code": "'width' in DeadFragmentInformation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DedicatedWorkerGlobalScope",
        "info": {
          "code": "self.DedicatedWorkerGlobalScope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DedicatedWorkerGlobalScope.cancelAnimationFrame",
        "info": {
          "code": "DedicatedWorkerGlobalScope.prototype.cancelAnimationFrame"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DedicatedWorkerGlobalScope.close",
        "info": {
          "code": "DedicatedWorkerGlobalScope.prototype.close"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DedicatedWorkerGlobalScope.name",
        "info": {
          "code": "'name' in DedicatedWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DedicatedWorkerGlobalScope.onmessage",
        "info": {
          "code": "'onmessage' in DedicatedWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DedicatedWorkerGlobalScope.onmessageerror",
        "info": {
          "code": "'onmessageerror' in DedicatedWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DedicatedWorkerGlobalScope.postMessage",
        "info": {
          "code": "DedicatedWorkerGlobalScope.prototype.postMessage"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DedicatedWorkerGlobalScope.postMessage",
        "info": {
          "code": "DedicatedWorkerGlobalScope.prototype.postMessage"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DedicatedWorkerGlobalScope.requestAnimationFrame",
        "info": {
          "code": "DedicatedWorkerGlobalScope.prototype.requestAnimationFrame"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DelayNode",
        "info": {
          "code": "self.DelayNode"
        },
        "returns": {
          "length": 1,
          "name": "DelayNode",
          "type": "function"
        }
      },
      {
        "context": "api.DelayNode.delayTime",
        "info": {
          "code": "'delayTime' in DelayNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DeprecationReportBody",
        "info": {
          "code": "self.DeprecationReportBody"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DeprecationReportBody.anticipatedRemoval",
        "info": {
          "code": "'anticipatedRemoval' in DeprecationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeprecationReportBody.columnNumber",
        "info": {
          "code": "'columnNumber' in DeprecationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeprecationReportBody.id",
        "info": {
          "code": "'id' in DeprecationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeprecationReportBody.lineNumber",
        "info": {
          "code": "'lineNumber' in DeprecationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeprecationReportBody.message",
        "info": {
          "code": "'message' in DeprecationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeprecationReportBody.sourceFile",
        "info": {
          "code": "'sourceFile' in DeprecationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DetectedBarcode",
        "info": {
          "code": "self.DetectedBarcode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DetectedBarcode.boundingBox",
        "info": {
          "code": "'boundingBox' in DetectedBarcode.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DetectedBarcode.cornerPoints",
        "info": {
          "code": "'cornerPoints' in DetectedBarcode.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DetectedBarcode.format",
        "info": {
          "code": "'format' in DetectedBarcode.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DetectedBarcode.rawValue",
        "info": {
          "code": "'rawValue' in DetectedBarcode.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DetectedFace",
        "info": {
          "code": "self.DetectedFace"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DetectedFace.boundingBox",
        "info": {
          "code": "'boundingBox' in DetectedFace.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DetectedFace.landmarks",
        "info": {
          "code": "'landmarks' in DetectedFace.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeviceAcceleration",
        "info": {
          "code": "self.DeviceAcceleration"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DeviceAcceleration.x",
        "info": {
          "code": "'x' in DeviceAcceleration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeviceAcceleration.y",
        "info": {
          "code": "'y' in DeviceAcceleration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeviceAcceleration.z",
        "info": {
          "code": "'z' in DeviceAcceleration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeviceMotionEvent",
        "info": {
          "code": "self.DeviceMotionEvent"
        },
        "returns": {
          "length": 1,
          "name": "DeviceMotionEvent",
          "type": "function"
        }
      },
      {
        "context": "api.DeviceMotionEvent.acceleration",
        "info": {
          "code": "'acceleration' in DeviceMotionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DeviceMotionEvent.accelerationIncludingGravity",
        "info": {
          "code": "'accelerationIncludingGravity' in DeviceMotionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DeviceMotionEvent.interval",
        "info": {
          "code": "'interval' in DeviceMotionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DeviceMotionEvent.rotationRate",
        "info": {
          "code": "'rotationRate' in DeviceMotionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DeviceOrientationEvent",
        "info": {
          "code": "self.DeviceOrientationEvent"
        },
        "returns": {
          "length": 1,
          "name": "DeviceOrientationEvent",
          "type": "function"
        }
      },
      {
        "context": "api.DeviceOrientationEvent.absolute",
        "info": {
          "code": "'absolute' in DeviceOrientationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DeviceOrientationEvent.alpha",
        "info": {
          "code": "'alpha' in DeviceOrientationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DeviceOrientationEvent.beta",
        "info": {
          "code": "'beta' in DeviceOrientationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DeviceOrientationEvent.gamma",
        "info": {
          "code": "'gamma' in DeviceOrientationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DeviceRotationRate",
        "info": {
          "code": "self.DeviceRotationRate"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DeviceRotationRate.alpha",
        "info": {
          "code": "'alpha' in DeviceRotationRate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeviceRotationRate.beta",
        "info": {
          "code": "'beta' in DeviceRotationRate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.DeviceRotationRate.gamma",
        "info": {
          "code": "'gamma' in DeviceRotationRate.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Document",
        "info": {
          "code": "self.Document"
        },
        "returns": {
          "length": 0,
          "name": "Document",
          "type": "function"
        }
      },
      {
        "context": "api.Document.activeElement",
        "info": {
          "code": "'activeElement' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.addressSpace",
        "info": {
          "code": "'addressSpace' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.adoptNode",
        "info": {
          "code": "Document.prototype.adoptNode"
        },
        "returns": {
          "length": 1,
          "name": "adoptNode",
          "type": "function"
        }
      },
      {
        "context": "api.Document.alinkColor",
        "info": {
          "code": "'alinkColor' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.all",
        "info": {
          "code": "'all' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.anchors",
        "info": {
          "code": "'anchors' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.append",
        "info": {
          "code": "Document.prototype.append"
        },
        "returns": {
          "length": 0,
          "name": "append",
          "type": "function"
        }
      },
      {
        "context": "api.Document.applets",
        "info": {
          "code": "'applets' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.bgColor",
        "info": {
          "code": "'bgColor' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.body",
        "info": {
          "code": "'body' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.captureEvents",
        "info": {
          "code": "Document.prototype.captureEvents"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.caretPositionFromPoint",
        "info": {
          "code": "Document.prototype.caretPositionFromPoint"
        },
        "returns": {
          "length": 2,
          "name": "caretPositionFromPoint",
          "type": "function"
        }
      },
      {
        "context": "api.Document.characterSet",
        "info": {
          "code": "'characterSet' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.charset",
        "info": {
          "code": "'charset' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.childElementCount",
        "info": {
          "code": "'childElementCount' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.children",
        "info": {
          "code": "'children' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.clear",
        "info": {
          "code": "Document.prototype.clear"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.close",
        "info": {
          "code": "Document.prototype.close"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.compatMode",
        "info": {
          "code": "'compatMode' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.contentType",
        "info": {
          "code": "'contentType' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.convertPointFromNode",
        "info": {
          "code": "Document.prototype.convertPointFromNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.convertQuadFromNode",
        "info": {
          "code": "Document.prototype.convertQuadFromNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.convertRectFromNode",
        "info": {
          "code": "Document.prototype.convertRectFromNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.cookie",
        "info": {
          "code": "'cookie' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.createAttribute",
        "info": {
          "code": "Document.prototype.createAttribute"
        },
        "returns": {
          "length": 1,
          "name": "createAttribute",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createAttributeNS",
        "info": {
          "code": "Document.prototype.createAttributeNS"
        },
        "returns": {
          "length": 2,
          "name": "createAttributeNS",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createCDATASection",
        "info": {
          "code": "Document.prototype.createCDATASection"
        },
        "returns": {
          "length": 1,
          "name": "createCDATASection",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createComment",
        "info": {
          "code": "Document.prototype.createComment"
        },
        "returns": {
          "length": 1,
          "name": "createComment",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createDocumentFragment",
        "info": {
          "code": "Document.prototype.createDocumentFragment"
        },
        "returns": {
          "length": 0,
          "name": "createDocumentFragment",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createElement",
        "info": {
          "code": "Document.prototype.createElement"
        },
        "returns": {
          "length": 1,
          "name": "createElement",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createElementNS",
        "info": {
          "code": "Document.prototype.createElementNS"
        },
        "returns": {
          "length": 2,
          "name": "createElementNS",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createEvent",
        "info": {
          "code": "Document.prototype.createEvent"
        },
        "returns": {
          "length": 1,
          "name": "createEvent",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createNodeIterator",
        "info": {
          "code": "Document.prototype.createNodeIterator"
        },
        "returns": {
          "length": 1,
          "name": "createNodeIterator",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createProcessingInstruction",
        "info": {
          "code": "Document.prototype.createProcessingInstruction"
        },
        "returns": {
          "length": 2,
          "name": "createProcessingInstruction",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createRange",
        "info": {
          "code": "Document.prototype.createRange"
        },
        "returns": {
          "length": 0,
          "name": "createRange",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createTextNode",
        "info": {
          "code": "Document.prototype.createTextNode"
        },
        "returns": {
          "length": 1,
          "name": "createTextNode",
          "type": "function"
        }
      },
      {
        "context": "api.Document.createTreeWalker",
        "info": {
          "code": "Document.prototype.createTreeWalker"
        },
        "returns": {
          "length": 1,
          "name": "createTreeWalker",
          "type": "function"
        }
      },
      {
        "context": "api.Document.currentScript",
        "info": {
          "code": "'currentScript' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.defaultView",
        "info": {
          "code": "'defaultView' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.designMode",
        "info": {
          "code": "'designMode' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.dir",
        "info": {
          "code": "'dir' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.doctype",
        "info": {
          "code": "'doctype' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.documentElement",
        "info": {
          "code": "'documentElement' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.documentURI",
        "info": {
          "code": "'documentURI' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.domain",
        "info": {
          "code": "'domain' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.elementFromPoint",
        "info": {
          "code": "Document.prototype.elementFromPoint"
        },
        "returns": {
          "length": 2,
          "name": "elementFromPoint",
          "type": "function"
        }
      },
      {
        "context": "api.Document.elementsFromPoint",
        "info": {
          "code": "Document.prototype.elementsFromPoint"
        },
        "returns": {
          "length": 2,
          "name": "elementsFromPoint",
          "type": "function"
        }
      },
      {
        "context": "api.Document.embeds",
        "info": {
          "code": "'embeds' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.execCommand",
        "info": {
          "code": "Document.prototype.execCommand"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.exitFullscreen",
        "info": {
          "code": "Document.prototype.exitFullscreen"
        },
        "returns": {
          "length": 0,
          "name": "exitFullscreen",
          "type": "function"
        }
      },
      {
        "context": "api.Document.exitPictureInPicture",
        "info": {
          "code": "Document.prototype.exitPictureInPicture"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.exitPointerLock",
        "info": {
          "code": "Document.prototype.exitPointerLock"
        },
        "returns": {
          "length": 0,
          "name": "exitPointerLock",
          "type": "function"
        }
      },
      {
        "context": "api.Document.featurePolicy",
        "info": {
          "code": "'featurePolicy' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.fgColor",
        "info": {
          "code": "'fgColor' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.firstElementChild",
        "info": {
          "code": "'firstElementChild' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.fonts",
        "info": {
          "code": "'fonts' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.forms",
        "info": {
          "code": "'forms' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.fullscreen",
        "info": {
          "code": "'fullscreen' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.fullscreenElement",
        "info": {
          "code": "'fullscreenElement' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.fullscreenEnabled",
        "info": {
          "code": "'fullscreenEnabled' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.getAnimations",
        "info": {
          "code": "Document.prototype.getAnimations"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.getBoxQuads",
        "info": {
          "code": "Document.prototype.getBoxQuads"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.getElementById",
        "info": {
          "code": "Document.prototype.getElementById"
        },
        "returns": {
          "length": 1,
          "name": "getElementById",
          "type": "function"
        }
      },
      {
        "context": "api.Document.getElementsByClassName",
        "info": {
          "code": "Document.prototype.getElementsByClassName"
        },
        "returns": {
          "length": 1,
          "name": "getElementsByClassName",
          "type": "function"
        }
      },
      {
        "context": "api.Document.getElementsByName",
        "info": {
          "code": "Document.prototype.getElementsByName"
        },
        "returns": {
          "length": 1,
          "name": "getElementsByName",
          "type": "function"
        }
      },
      {
        "context": "api.Document.getElementsByTagName",
        "info": {
          "code": "Document.prototype.getElementsByTagName"
        },
        "returns": {
          "length": 1,
          "name": "getElementsByTagName",
          "type": "function"
        }
      },
      {
        "context": "api.Document.getElementsByTagNameNS",
        "info": {
          "code": "Document.prototype.getElementsByTagNameNS"
        },
        "returns": {
          "length": 2,
          "name": "getElementsByTagNameNS",
          "type": "function"
        }
      },
      {
        "context": "api.Document.getSelection",
        "info": {
          "code": "Document.prototype.getSelection"
        },
        "returns": {
          "length": 0,
          "name": "getSelection",
          "type": "function"
        }
      },
      {
        "context": "api.Document.hasFocus",
        "info": {
          "code": "Document.prototype.hasFocus"
        },
        "returns": {
          "length": 0,
          "name": "hasFocus",
          "type": "function"
        }
      },
      {
        "context": "api.Document.head",
        "info": {
          "code": "'head' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.hidden",
        "info": {
          "code": "'hidden' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.images",
        "info": {
          "code": "'images' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.implementation",
        "info": {
          "code": "'implementation' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.importNode",
        "info": {
          "code": "Document.prototype.importNode"
        },
        "returns": {
          "length": 1,
          "name": "importNode",
          "type": "function"
        }
      },
      {
        "context": "api.Document.inputEncoding",
        "info": {
          "code": "'inputEncoding' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.lastElementChild",
        "info": {
          "code": "'lastElementChild' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.lastModified",
        "info": {
          "code": "'lastModified' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.layoutNow",
        "info": {
          "code": "Document.prototype.layoutNow"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.linkColor",
        "info": {
          "code": "'linkColor' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.links",
        "info": {
          "code": "'links' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.location",
        "info": {
          "code": "'location' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.measureElement",
        "info": {
          "code": "Document.prototype.measureElement"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.measureText",
        "info": {
          "code": "Document.prototype.measureText"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.namedFlows",
        "info": {
          "code": "'namedFlows' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onabort",
        "info": {
          "code": "'onabort' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onanimationcancel",
        "info": {
          "code": "'onanimationcancel' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onanimationend",
        "info": {
          "code": "'onanimationend' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onanimationiteration",
        "info": {
          "code": "'onanimationiteration' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onanimationstart",
        "info": {
          "code": "'onanimationstart' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onauxclick",
        "info": {
          "code": "'onauxclick' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onblur",
        "info": {
          "code": "'onblur' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.oncancel",
        "info": {
          "code": "'oncancel' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.oncanplay",
        "info": {
          "code": "'oncanplay' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.oncanplaythrough",
        "info": {
          "code": "'oncanplaythrough' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onchange",
        "info": {
          "code": "'onchange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onclick",
        "info": {
          "code": "'onclick' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onclose",
        "info": {
          "code": "'onclose' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.oncontextmenu",
        "info": {
          "code": "'oncontextmenu' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.oncopy",
        "info": {
          "code": "'oncopy' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.oncuechange",
        "info": {
          "code": "'oncuechange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.oncut",
        "info": {
          "code": "'oncut' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondblclick",
        "info": {
          "code": "'ondblclick' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondrag",
        "info": {
          "code": "'ondrag' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondragend",
        "info": {
          "code": "'ondragend' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondragenter",
        "info": {
          "code": "'ondragenter' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondragexit",
        "info": {
          "code": "'ondragexit' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondragleave",
        "info": {
          "code": "'ondragleave' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondragover",
        "info": {
          "code": "'ondragover' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondragstart",
        "info": {
          "code": "'ondragstart' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondrop",
        "info": {
          "code": "'ondrop' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ondurationchange",
        "info": {
          "code": "'ondurationchange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onemptied",
        "info": {
          "code": "'onemptied' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onended",
        "info": {
          "code": "'onended' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onerror",
        "info": {
          "code": "'onerror' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onfocus",
        "info": {
          "code": "'onfocus' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onformdata",
        "info": {
          "code": "'onformdata' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onfullscreenchange",
        "info": {
          "code": "'onfullscreenchange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onfullscreenerror",
        "info": {
          "code": "'onfullscreenerror' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ongotpointercapture",
        "info": {
          "code": "'ongotpointercapture' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.oninput",
        "info": {
          "code": "'oninput' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.oninvalid",
        "info": {
          "code": "'oninvalid' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onkeydown",
        "info": {
          "code": "'onkeydown' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onkeypress",
        "info": {
          "code": "'onkeypress' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onkeyup",
        "info": {
          "code": "'onkeyup' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onload",
        "info": {
          "code": "'onload' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onloadeddata",
        "info": {
          "code": "'onloadeddata' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onloadedmetadata",
        "info": {
          "code": "'onloadedmetadata' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onloadend",
        "info": {
          "code": "'onloadend' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onloadstart",
        "info": {
          "code": "'onloadstart' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onlostpointercapture",
        "info": {
          "code": "'onlostpointercapture' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onmousedown",
        "info": {
          "code": "'onmousedown' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onmouseenter",
        "info": {
          "code": "'onmouseenter' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onmouseleave",
        "info": {
          "code": "'onmouseleave' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onmousemove",
        "info": {
          "code": "'onmousemove' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onmouseout",
        "info": {
          "code": "'onmouseout' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onmouseover",
        "info": {
          "code": "'onmouseover' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onmouseup",
        "info": {
          "code": "'onmouseup' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onpaste",
        "info": {
          "code": "'onpaste' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onpause",
        "info": {
          "code": "'onpause' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onplay",
        "info": {
          "code": "'onplay' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onplaying",
        "info": {
          "code": "'onplaying' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onpointercancel",
        "info": {
          "code": "'onpointercancel' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onpointerdown",
        "info": {
          "code": "'onpointerdown' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onpointerenter",
        "info": {
          "code": "'onpointerenter' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onpointerleave",
        "info": {
          "code": "'onpointerleave' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onpointerlockchange",
        "info": {
          "code": "'onpointerlockchange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onpointerlockerror",
        "info": {
          "code": "'onpointerlockerror' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onpointermove",
        "info": {
          "code": "'onpointermove' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onpointerout",
        "info": {
          "code": "'onpointerout' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onpointerover",
        "info": {
          "code": "'onpointerover' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onpointerup",
        "info": {
          "code": "'onpointerup' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onprogress",
        "info": {
          "code": "'onprogress' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onratechange",
        "info": {
          "code": "'onratechange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onreadystatechange",
        "info": {
          "code": "'onreadystatechange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onreset",
        "info": {
          "code": "'onreset' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onresize",
        "info": {
          "code": "'onresize' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onscroll",
        "info": {
          "code": "'onscroll' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onsecuritypolicyviolation",
        "info": {
          "code": "'onsecuritypolicyviolation' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.onseeked",
        "info": {
          "code": "'onseeked' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onseeking",
        "info": {
          "code": "'onseeking' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onselect",
        "info": {
          "code": "'onselect' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onselectionchange",
        "info": {
          "code": "'onselectionchange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onselectstart",
        "info": {
          "code": "'onselectstart' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onstalled",
        "info": {
          "code": "'onstalled' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onsubmit",
        "info": {
          "code": "'onsubmit' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onsuspend",
        "info": {
          "code": "'onsuspend' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontimeupdate",
        "info": {
          "code": "'ontimeupdate' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontoggle",
        "info": {
          "code": "'ontoggle' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontouchcancel",
        "info": {
          "code": "'ontouchcancel' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontouchend",
        "info": {
          "code": "'ontouchend' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontouchmove",
        "info": {
          "code": "'ontouchmove' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontouchstart",
        "info": {
          "code": "'ontouchstart' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontransitioncancel",
        "info": {
          "code": "'ontransitioncancel' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontransitionend",
        "info": {
          "code": "'ontransitionend' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontransitionrun",
        "info": {
          "code": "'ontransitionrun' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.ontransitionstart",
        "info": {
          "code": "'ontransitionstart' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onvisibilitychange",
        "info": {
          "code": "'onvisibilitychange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onvolumechange",
        "info": {
          "code": "'onvolumechange' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onwaiting",
        "info": {
          "code": "'onwaiting' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.onwheel",
        "info": {
          "code": "'onwheel' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.open",
        "info": {
          "code": "Document.prototype.open"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.open",
        "info": {
          "code": "Document.prototype.open"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.origin",
        "info": {
          "code": "'origin' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.pictureInPictureElement",
        "info": {
          "code": "'pictureInPictureElement' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.pictureInPictureEnabled",
        "info": {
          "code": "'pictureInPictureEnabled' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.plugins",
        "info": {
          "code": "'plugins' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.pointerLockElement",
        "info": {
          "code": "'pointerLockElement' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.prepend",
        "info": {
          "code": "Document.prototype.prepend"
        },
        "returns": {
          "length": 0,
          "name": "prepend",
          "type": "function"
        }
      },
      {
        "context": "api.Document.queryCommandEnabled",
        "info": {
          "code": "Document.prototype.queryCommandEnabled"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.queryCommandIndeterm",
        "info": {
          "code": "Document.prototype.queryCommandIndeterm"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.queryCommandState",
        "info": {
          "code": "Document.prototype.queryCommandState"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.queryCommandSupported",
        "info": {
          "code": "Document.prototype.queryCommandSupported"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.queryCommandValue",
        "info": {
          "code": "Document.prototype.queryCommandValue"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.querySelector",
        "info": {
          "code": "Document.prototype.querySelector"
        },
        "returns": {
          "length": 1,
          "name": "querySelector",
          "type": "function"
        }
      },
      {
        "context": "api.Document.querySelectorAll",
        "info": {
          "code": "Document.prototype.querySelectorAll"
        },
        "returns": {
          "length": 1,
          "name": "querySelectorAll",
          "type": "function"
        }
      },
      {
        "context": "api.Document.readyState",
        "info": {
          "code": "'readyState' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.referrer",
        "info": {
          "code": "'referrer' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.releaseEvents",
        "info": {
          "code": "Document.prototype.releaseEvents"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.rootElement",
        "info": {
          "code": "'rootElement' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.scripts",
        "info": {
          "code": "'scripts' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.scrollingElement",
        "info": {
          "code": "'scrollingElement' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.styleSheets",
        "info": {
          "code": "'styleSheets' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.timeline",
        "info": {
          "code": "'timeline' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.title",
        "info": {
          "code": "'title' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.URL",
        "info": {
          "code": "'URL' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.visibilityState",
        "info": {
          "code": "'visibilityState' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Document.vlinkColor",
        "info": {
          "code": "'vlinkColor' in Document.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Document.write",
        "info": {
          "code": "Document.prototype.write"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Document.writeln",
        "info": {
          "code": "Document.prototype.writeln"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DocumentFragment",
        "info": {
          "code": "self.DocumentFragment"
        },
        "returns": {
          "length": 0,
          "name": "DocumentFragment",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentFragment.append",
        "info": {
          "code": "DocumentFragment.prototype.append"
        },
        "returns": {
          "length": 0,
          "name": "append",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentFragment.childElementCount",
        "info": {
          "code": "'childElementCount' in DocumentFragment.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DocumentFragment.children",
        "info": {
          "code": "'children' in DocumentFragment.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DocumentFragment.firstElementChild",
        "info": {
          "code": "'firstElementChild' in DocumentFragment.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DocumentFragment.getElementById",
        "info": {
          "code": "DocumentFragment.prototype.getElementById"
        },
        "returns": {
          "length": 1,
          "name": "getElementById",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentFragment.lastElementChild",
        "info": {
          "code": "'lastElementChild' in DocumentFragment.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DocumentFragment.prepend",
        "info": {
          "code": "DocumentFragment.prototype.prepend"
        },
        "returns": {
          "length": 0,
          "name": "prepend",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentFragment.querySelector",
        "info": {
          "code": "DocumentFragment.prototype.querySelector"
        },
        "returns": {
          "length": 1,
          "name": "querySelector",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentFragment.querySelectorAll",
        "info": {
          "code": "DocumentFragment.prototype.querySelectorAll"
        },
        "returns": {
          "length": 1,
          "name": "querySelectorAll",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentTimeline",
        "info": {
          "code": "self.DocumentTimeline"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DocumentType",
        "info": {
          "code": "self.DocumentType"
        },
        "returns": {
          "length": 0,
          "name": "DocumentType",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentType.after",
        "info": {
          "code": "DocumentType.prototype.after"
        },
        "returns": {
          "length": 0,
          "name": "after",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentType.before",
        "info": {
          "code": "DocumentType.prototype.before"
        },
        "returns": {
          "length": 0,
          "name": "before",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentType.name",
        "info": {
          "code": "'name' in DocumentType.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DocumentType.publicId",
        "info": {
          "code": "'publicId' in DocumentType.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DocumentType.remove",
        "info": {
          "code": "DocumentType.prototype.remove"
        },
        "returns": {
          "length": 0,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentType.replaceWith",
        "info": {
          "code": "DocumentType.prototype.replaceWith"
        },
        "returns": {
          "length": 0,
          "name": "replaceWith",
          "type": "function"
        }
      },
      {
        "context": "api.DocumentType.systemId",
        "info": {
          "code": "'systemId' in DocumentType.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMException",
        "info": {
          "code": "self.DOMException"
        },
        "returns": {
          "length": 0,
          "name": "DOMException",
          "type": "function"
        }
      },
      {
        "context": "api.DOMException.ABORT_ERR",
        "info": {
          "code": "DOMException.ABORT_ERR"
        },
        "returns": {
          "type": "number",
          "value": 20
        }
      },
      {
        "context": "api.DOMException.code",
        "info": {
          "code": "'code' in DOMException.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMException.DATA_CLONE_ERR",
        "info": {
          "code": "DOMException.DATA_CLONE_ERR"
        },
        "returns": {
          "type": "number",
          "value": 25
        }
      },
      {
        "context": "api.DOMException.DOMSTRING_SIZE_ERR",
        "info": {
          "code": "DOMException.DOMSTRING_SIZE_ERR"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.DOMException.HIERARCHY_REQUEST_ERR",
        "info": {
          "code": "DOMException.HIERARCHY_REQUEST_ERR"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.DOMException.INDEX_SIZE_ERR",
        "info": {
          "code": "DOMException.INDEX_SIZE_ERR"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.DOMException.INUSE_ATTRIBUTE_ERR",
        "info": {
          "code": "DOMException.INUSE_ATTRIBUTE_ERR"
        },
        "returns": {
          "type": "number",
          "value": 10
        }
      },
      {
        "context": "api.DOMException.INVALID_ACCESS_ERR",
        "info": {
          "code": "DOMException.INVALID_ACCESS_ERR"
        },
        "returns": {
          "type": "number",
          "value": 15
        }
      },
      {
        "context": "api.DOMException.INVALID_CHARACTER_ERR",
        "info": {
          "code": "DOMException.INVALID_CHARACTER_ERR"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.DOMException.INVALID_MODIFICATION_ERR",
        "info": {
          "code": "DOMException.INVALID_MODIFICATION_ERR"
        },
        "returns": {
          "type": "number",
          "value": 13
        }
      },
      {
        "context": "api.DOMException.INVALID_NODE_TYPE_ERR",
        "info": {
          "code": "DOMException.INVALID_NODE_TYPE_ERR"
        },
        "returns": {
          "type": "number",
          "value": 24
        }
      },
      {
        "context": "api.DOMException.INVALID_STATE_ERR",
        "info": {
          "code": "DOMException.INVALID_STATE_ERR"
        },
        "returns": {
          "type": "number",
          "value": 11
        }
      },
      {
        "context": "api.DOMException.message",
        "info": {
          "code": "'message' in DOMException.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMException.name",
        "info": {
          "code": "'name' in DOMException.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMException.NAMESPACE_ERR",
        "info": {
          "code": "DOMException.NAMESPACE_ERR"
        },
        "returns": {
          "type": "number",
          "value": 14
        }
      },
      {
        "context": "api.DOMException.NETWORK_ERR",
        "info": {
          "code": "DOMException.NETWORK_ERR"
        },
        "returns": {
          "type": "number",
          "value": 19
        }
      },
      {
        "context": "api.DOMException.NO_DATA_ALLOWED_ERR",
        "info": {
          "code": "DOMException.NO_DATA_ALLOWED_ERR"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.DOMException.NO_MODIFICATION_ALLOWED_ERR",
        "info": {
          "code": "DOMException.NO_MODIFICATION_ALLOWED_ERR"
        },
        "returns": {
          "type": "number",
          "value": 7
        }
      },
      {
        "context": "api.DOMException.NOT_FOUND_ERR",
        "info": {
          "code": "DOMException.NOT_FOUND_ERR"
        },
        "returns": {
          "type": "number",
          "value": 8
        }
      },
      {
        "context": "api.DOMException.NOT_SUPPORTED_ERR",
        "info": {
          "code": "DOMException.NOT_SUPPORTED_ERR"
        },
        "returns": {
          "type": "number",
          "value": 9
        }
      },
      {
        "context": "api.DOMException.QUOTA_EXCEEDED_ERR",
        "info": {
          "code": "DOMException.QUOTA_EXCEEDED_ERR"
        },
        "returns": {
          "type": "number",
          "value": 22
        }
      },
      {
        "context": "api.DOMException.SECURITY_ERR",
        "info": {
          "code": "DOMException.SECURITY_ERR"
        },
        "returns": {
          "type": "number",
          "value": 18
        }
      },
      {
        "context": "api.DOMException.SYNTAX_ERR",
        "info": {
          "code": "DOMException.SYNTAX_ERR"
        },
        "returns": {
          "type": "number",
          "value": 12
        }
      },
      {
        "context": "api.DOMException.TIMEOUT_ERR",
        "info": {
          "code": "DOMException.TIMEOUT_ERR"
        },
        "returns": {
          "type": "number",
          "value": 23
        }
      },
      {
        "context": "api.DOMException.TYPE_MISMATCH_ERR",
        "info": {
          "code": "DOMException.TYPE_MISMATCH_ERR"
        },
        "returns": {
          "type": "number",
          "value": 17
        }
      },
      {
        "context": "api.DOMException.URL_MISMATCH_ERR",
        "info": {
          "code": "DOMException.URL_MISMATCH_ERR"
        },
        "returns": {
          "type": "number",
          "value": 21
        }
      },
      {
        "context": "api.DOMException.VALIDATION_ERR",
        "info": {
          "code": "DOMException.VALIDATION_ERR"
        },
        "returns": {
          "type": "number",
          "value": 16
        }
      },
      {
        "context": "api.DOMException.WRONG_DOCUMENT_ERR",
        "info": {
          "code": "DOMException.WRONG_DOCUMENT_ERR"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.DOMImplementation",
        "info": {
          "code": "self.DOMImplementation"
        },
        "returns": {
          "length": 0,
          "name": "DOMImplementation",
          "type": "function"
        }
      },
      {
        "context": "api.DOMImplementation.createDocument",
        "info": {
          "code": "DOMImplementation.prototype.createDocument"
        },
        "returns": {
          "length": 2,
          "name": "createDocument",
          "type": "function"
        }
      },
      {
        "context": "api.DOMImplementation.createDocumentType",
        "info": {
          "code": "DOMImplementation.prototype.createDocumentType"
        },
        "returns": {
          "length": 3,
          "name": "createDocumentType",
          "type": "function"
        }
      },
      {
        "context": "api.DOMImplementation.createHTMLDocument",
        "info": {
          "code": "DOMImplementation.prototype.createHTMLDocument"
        },
        "returns": {
          "length": 0,
          "name": "createHTMLDocument",
          "type": "function"
        }
      },
      {
        "context": "api.DOMImplementation.hasFeature",
        "info": {
          "code": "DOMImplementation.prototype.hasFeature"
        },
        "returns": {
          "length": 0,
          "name": "hasFeature",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix",
        "info": {
          "code": "self.DOMMatrix"
        },
        "returns": {
          "length": 0,
          "name": "DOMMatrix",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.a",
        "info": {
          "code": "'a' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.b",
        "info": {
          "code": "'b' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.c",
        "info": {
          "code": "'c' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.d",
        "info": {
          "code": "'d' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.e",
        "info": {
          "code": "'e' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.f",
        "info": {
          "code": "'f' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.fromFloat32Array",
        "info": {
          "code": "DOMMatrix.fromFloat32Array"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMMatrix.fromFloat64Array",
        "info": {
          "code": "DOMMatrix.fromFloat64Array"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMMatrix.fromMatrix",
        "info": {
          "code": "DOMMatrix.fromMatrix"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMMatrix.invertSelf",
        "info": {
          "code": "DOMMatrix.prototype.invertSelf"
        },
        "returns": {
          "length": 0,
          "name": "invertSelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.m11",
        "info": {
          "code": "'m11' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m12",
        "info": {
          "code": "'m12' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m13",
        "info": {
          "code": "'m13' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m14",
        "info": {
          "code": "'m14' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m21",
        "info": {
          "code": "'m21' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m22",
        "info": {
          "code": "'m22' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m23",
        "info": {
          "code": "'m23' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m24",
        "info": {
          "code": "'m24' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m31",
        "info": {
          "code": "'m31' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m32",
        "info": {
          "code": "'m32' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m33",
        "info": {
          "code": "'m33' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m34",
        "info": {
          "code": "'m34' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m41",
        "info": {
          "code": "'m41' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m42",
        "info": {
          "code": "'m42' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m43",
        "info": {
          "code": "'m43' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.m44",
        "info": {
          "code": "'m44' in DOMMatrix.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrix.multiplySelf",
        "info": {
          "code": "DOMMatrix.prototype.multiplySelf"
        },
        "returns": {
          "length": 1,
          "name": "multiplySelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.preMultiplySelf",
        "info": {
          "code": "DOMMatrix.prototype.preMultiplySelf"
        },
        "returns": {
          "length": 1,
          "name": "preMultiplySelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.rotateAxisAngleSelf",
        "info": {
          "code": "DOMMatrix.prototype.rotateAxisAngleSelf"
        },
        "returns": {
          "length": 4,
          "name": "rotateAxisAngleSelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.rotateFromVectorSelf",
        "info": {
          "code": "DOMMatrix.prototype.rotateFromVectorSelf"
        },
        "returns": {
          "length": 2,
          "name": "rotateFromVectorSelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.rotateSelf",
        "info": {
          "code": "DOMMatrix.prototype.rotateSelf"
        },
        "returns": {
          "length": 1,
          "name": "rotateSelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.scale3dSelf",
        "info": {
          "code": "DOMMatrix.prototype.scale3dSelf"
        },
        "returns": {
          "length": 1,
          "name": "scale3dSelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.scaleSelf",
        "info": {
          "code": "DOMMatrix.prototype.scaleSelf"
        },
        "returns": {
          "length": 1,
          "name": "scaleSelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.setMatrixValue",
        "info": {
          "code": "DOMMatrix.prototype.setMatrixValue"
        },
        "returns": {
          "length": 1,
          "name": "setMatrixValue",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.skewXSelf",
        "info": {
          "code": "DOMMatrix.prototype.skewXSelf"
        },
        "returns": {
          "length": 1,
          "name": "skewXSelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.skewYSelf",
        "info": {
          "code": "DOMMatrix.prototype.skewYSelf"
        },
        "returns": {
          "length": 1,
          "name": "skewYSelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrix.translateSelf",
        "info": {
          "code": "DOMMatrix.prototype.translateSelf"
        },
        "returns": {
          "length": 2,
          "name": "translateSelf",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly",
        "info": {
          "code": "self.DOMMatrixReadOnly"
        },
        "returns": {
          "length": 0,
          "name": "DOMMatrixReadOnly",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.a",
        "info": {
          "code": "'a' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.b",
        "info": {
          "code": "'b' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.c",
        "info": {
          "code": "'c' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.d",
        "info": {
          "code": "'d' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.e",
        "info": {
          "code": "'e' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.f",
        "info": {
          "code": "'f' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.flipX",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.flipX"
        },
        "returns": {
          "length": 0,
          "name": "flipX",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.flipY",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.flipY"
        },
        "returns": {
          "length": 0,
          "name": "flipY",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.fromFloat32Array",
        "info": {
          "code": "DOMMatrixReadOnly.fromFloat32Array"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.fromFloat64Array",
        "info": {
          "code": "DOMMatrixReadOnly.fromFloat64Array"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.fromMatrix",
        "info": {
          "code": "DOMMatrixReadOnly.fromMatrix"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.inverse",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.inverse"
        },
        "returns": {
          "length": 0,
          "name": "inverse",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.is2D",
        "info": {
          "code": "'is2D' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.isIdentity",
        "info": {
          "code": "'isIdentity' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m11",
        "info": {
          "code": "'m11' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m12",
        "info": {
          "code": "'m12' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m13",
        "info": {
          "code": "'m13' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m14",
        "info": {
          "code": "'m14' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m21",
        "info": {
          "code": "'m21' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m22",
        "info": {
          "code": "'m22' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m23",
        "info": {
          "code": "'m23' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m24",
        "info": {
          "code": "'m24' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m31",
        "info": {
          "code": "'m31' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m32",
        "info": {
          "code": "'m32' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m33",
        "info": {
          "code": "'m33' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m34",
        "info": {
          "code": "'m34' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m41",
        "info": {
          "code": "'m41' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m42",
        "info": {
          "code": "'m42' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m43",
        "info": {
          "code": "'m43' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.m44",
        "info": {
          "code": "'m44' in DOMMatrixReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.multiply",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.multiply"
        },
        "returns": {
          "length": 1,
          "name": "multiply",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.rotate",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.rotate"
        },
        "returns": {
          "length": 1,
          "name": "rotate",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.rotateAxisAngle",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.rotateAxisAngle"
        },
        "returns": {
          "length": 4,
          "name": "rotateAxisAngle",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.rotateFromVector",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.rotateFromVector"
        },
        "returns": {
          "length": 2,
          "name": "rotateFromVector",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.scale",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.scale"
        },
        "returns": {
          "length": 1,
          "name": "scale",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.scale3d",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.scale3d"
        },
        "returns": {
          "length": 1,
          "name": "scale3d",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.scaleNonUniform",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.scaleNonUniform"
        },
        "returns": {
          "length": 1,
          "name": "scaleNonUniform",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.skewX",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.skewX"
        },
        "returns": {
          "length": 1,
          "name": "skewX",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.skewY",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.skewY"
        },
        "returns": {
          "length": 1,
          "name": "skewY",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.toFloat32Array",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.toFloat32Array"
        },
        "returns": {
          "length": 0,
          "name": "toFloat32Array",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.toFloat64Array",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.toFloat64Array"
        },
        "returns": {
          "length": 0,
          "name": "toFloat64Array",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.toJSON",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.transformPoint",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.transformPoint"
        },
        "returns": {
          "length": 0,
          "name": "transformPoint",
          "type": "function"
        }
      },
      {
        "context": "api.DOMMatrixReadOnly.translate",
        "info": {
          "code": "DOMMatrixReadOnly.prototype.translate"
        },
        "returns": {
          "length": 2,
          "name": "translate",
          "type": "function"
        }
      },
      {
        "context": "api.DOMParser",
        "info": {
          "code": "self.DOMParser"
        },
        "returns": {
          "length": 0,
          "name": "DOMParser",
          "type": "function"
        }
      },
      {
        "context": "api.DOMParser.parseFromString",
        "info": {
          "code": "DOMParser.prototype.parseFromString"
        },
        "returns": {
          "length": 2,
          "name": "parseFromString",
          "type": "function"
        }
      },
      {
        "context": "api.DOMPoint",
        "info": {
          "code": "self.DOMPoint"
        },
        "returns": {
          "length": 0,
          "name": "DOMPoint",
          "type": "function"
        }
      },
      {
        "context": "api.DOMPoint.fromPoint",
        "info": {
          "code": "DOMPoint.fromPoint"
        },
        "returns": {
          "length": 0,
          "name": "fromPoint",
          "type": "function"
        }
      },
      {
        "context": "api.DOMPoint.w",
        "info": {
          "code": "'w' in DOMPoint.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMPoint.x",
        "info": {
          "code": "'x' in DOMPoint.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMPoint.y",
        "info": {
          "code": "'y' in DOMPoint.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMPoint.z",
        "info": {
          "code": "'z' in DOMPoint.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMPointReadOnly",
        "info": {
          "code": "self.DOMPointReadOnly"
        },
        "returns": {
          "length": 0,
          "name": "DOMPointReadOnly",
          "type": "function"
        }
      },
      {
        "context": "api.DOMPointReadOnly.fromPoint",
        "info": {
          "code": "DOMPointReadOnly.fromPoint"
        },
        "returns": {
          "length": 0,
          "name": "fromPoint",
          "type": "function"
        }
      },
      {
        "context": "api.DOMPointReadOnly.matrixTransform",
        "info": {
          "code": "DOMPointReadOnly.prototype.matrixTransform"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMPointReadOnly.toJSON",
        "info": {
          "code": "DOMPointReadOnly.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.DOMPointReadOnly.w",
        "info": {
          "code": "'w' in DOMPointReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMPointReadOnly.x",
        "info": {
          "code": "'x' in DOMPointReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMPointReadOnly.y",
        "info": {
          "code": "'y' in DOMPointReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMPointReadOnly.z",
        "info": {
          "code": "'z' in DOMPointReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMQuad",
        "info": {
          "code": "self.DOMQuad"
        },
        "returns": {
          "length": 0,
          "name": "DOMQuad",
          "type": "function"
        }
      },
      {
        "context": "api.DOMQuad.fromQuad",
        "info": {
          "code": "DOMQuad.fromQuad"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMQuad.fromRect",
        "info": {
          "code": "DOMQuad.fromRect"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMQuad.getBounds",
        "info": {
          "code": "DOMQuad.prototype.getBounds"
        },
        "returns": {
          "length": 0,
          "name": "getBounds",
          "type": "function"
        }
      },
      {
        "context": "api.DOMQuad.p1",
        "info": {
          "code": "'p1' in DOMQuad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMQuad.p2",
        "info": {
          "code": "'p2' in DOMQuad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMQuad.p3",
        "info": {
          "code": "'p3' in DOMQuad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMQuad.p4",
        "info": {
          "code": "'p4' in DOMQuad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMQuad.toJSON",
        "info": {
          "code": "DOMQuad.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.DOMRect",
        "info": {
          "code": "self.DOMRect"
        },
        "returns": {
          "length": 0,
          "name": "DOMRect",
          "type": "function"
        }
      },
      {
        "context": "api.DOMRect.fromRect",
        "info": {
          "code": "DOMRect.fromRect"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMRect.height",
        "info": {
          "code": "'height' in DOMRect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRect.width",
        "info": {
          "code": "'width' in DOMRect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRect.x",
        "info": {
          "code": "'x' in DOMRect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRect.y",
        "info": {
          "code": "'y' in DOMRect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRectList",
        "info": {
          "code": "self.DOMRectList"
        },
        "returns": {
          "length": 0,
          "name": "DOMRectList",
          "type": "function"
        }
      },
      {
        "context": "api.DOMRectList.item",
        "info": {
          "code": "DOMRectList.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.DOMRectList.length",
        "info": {
          "code": "'length' in DOMRectList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRectReadOnly",
        "info": {
          "code": "self.DOMRectReadOnly"
        },
        "returns": {
          "length": 0,
          "name": "DOMRectReadOnly",
          "type": "function"
        }
      },
      {
        "context": "api.DOMRectReadOnly.bottom",
        "info": {
          "code": "'bottom' in DOMRectReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRectReadOnly.fromRect",
        "info": {
          "code": "DOMRectReadOnly.fromRect"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.DOMRectReadOnly.height",
        "info": {
          "code": "'height' in DOMRectReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRectReadOnly.left",
        "info": {
          "code": "'left' in DOMRectReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRectReadOnly.right",
        "info": {
          "code": "'right' in DOMRectReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRectReadOnly.toJSON",
        "info": {
          "code": "DOMRectReadOnly.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.DOMRectReadOnly.top",
        "info": {
          "code": "'top' in DOMRectReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRectReadOnly.width",
        "info": {
          "code": "'width' in DOMRectReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRectReadOnly.x",
        "info": {
          "code": "'x' in DOMRectReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMRectReadOnly.y",
        "info": {
          "code": "'y' in DOMRectReadOnly.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMStringList",
        "info": {
          "code": "self.DOMStringList"
        },
        "returns": {
          "length": 0,
          "name": "DOMStringList",
          "type": "function"
        }
      },
      {
        "context": "api.DOMStringList.contains",
        "info": {
          "code": "DOMStringList.prototype.contains"
        },
        "returns": {
          "length": 1,
          "name": "contains",
          "type": "function"
        }
      },
      {
        "context": "api.DOMStringList.item",
        "info": {
          "code": "DOMStringList.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.DOMStringList.length",
        "info": {
          "code": "'length' in DOMStringList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMStringMap",
        "info": {
          "code": "self.DOMStringMap"
        },
        "returns": {
          "length": 0,
          "name": "DOMStringMap",
          "type": "function"
        }
      },
      {
        "context": "api.DOMTokenList",
        "info": {
          "code": "self.DOMTokenList"
        },
        "returns": {
          "length": 0,
          "name": "DOMTokenList",
          "type": "function"
        }
      },
      {
        "context": "api.DOMTokenList.add",
        "info": {
          "code": "DOMTokenList.prototype.add"
        },
        "returns": {
          "length": 0,
          "name": "add",
          "type": "function"
        }
      },
      {
        "context": "api.DOMTokenList.contains",
        "info": {
          "code": "DOMTokenList.prototype.contains"
        },
        "returns": {
          "length": 1,
          "name": "contains",
          "type": "function"
        }
      },
      {
        "context": "api.DOMTokenList.item",
        "info": {
          "code": "DOMTokenList.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.DOMTokenList.length",
        "info": {
          "code": "'length' in DOMTokenList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DOMTokenList.remove",
        "info": {
          "code": "DOMTokenList.prototype.remove"
        },
        "returns": {
          "length": 0,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.DOMTokenList.replace",
        "info": {
          "code": "DOMTokenList.prototype.replace"
        },
        "returns": {
          "length": 2,
          "name": "replace",
          "type": "function"
        }
      },
      {
        "context": "api.DOMTokenList.supports",
        "info": {
          "code": "DOMTokenList.prototype.supports"
        },
        "returns": {
          "length": 1,
          "name": "supports",
          "type": "function"
        }
      },
      {
        "context": "api.DOMTokenList.toggle",
        "info": {
          "code": "DOMTokenList.prototype.toggle"
        },
        "returns": {
          "length": 1,
          "name": "toggle",
          "type": "function"
        }
      },
      {
        "context": "api.DOMTokenList.value",
        "info": {
          "code": "'value' in DOMTokenList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DragEvent",
        "info": {
          "code": "self.DragEvent"
        },
        "returns": {
          "length": 1,
          "name": "DragEvent",
          "type": "function"
        }
      },
      {
        "context": "api.DragEvent.dataTransfer",
        "info": {
          "code": "'dataTransfer' in DragEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DynamicsCompressorNode",
        "info": {
          "code": "self.DynamicsCompressorNode"
        },
        "returns": {
          "length": 1,
          "name": "DynamicsCompressorNode",
          "type": "function"
        }
      },
      {
        "context": "api.DynamicsCompressorNode.attack",
        "info": {
          "code": "'attack' in DynamicsCompressorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DynamicsCompressorNode.knee",
        "info": {
          "code": "'knee' in DynamicsCompressorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DynamicsCompressorNode.ratio",
        "info": {
          "code": "'ratio' in DynamicsCompressorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DynamicsCompressorNode.reduction",
        "info": {
          "code": "'reduction' in DynamicsCompressorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DynamicsCompressorNode.release",
        "info": {
          "code": "'release' in DynamicsCompressorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.DynamicsCompressorNode.threshold",
        "info": {
          "code": "'threshold' in DynamicsCompressorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element",
        "info": {
          "code": "self.Element"
        },
        "returns": {
          "length": 0,
          "name": "Element",
          "type": "function"
        }
      },
      {
        "context": "api.Element.after",
        "info": {
          "code": "Element.prototype.after"
        },
        "returns": {
          "length": 0,
          "name": "after",
          "type": "function"
        }
      },
      {
        "context": "api.Element.animate",
        "info": {
          "code": "Element.prototype.animate"
        },
        "returns": {
          "length": 1,
          "name": "animate",
          "type": "function"
        }
      },
      {
        "context": "api.Element.append",
        "info": {
          "code": "Element.prototype.append"
        },
        "returns": {
          "length": 0,
          "name": "append",
          "type": "function"
        }
      },
      {
        "context": "api.Element.ariaActiveDescendant",
        "info": {
          "code": "'ariaActiveDescendant' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaAtomic",
        "info": {
          "code": "'ariaAtomic' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaAutoComplete",
        "info": {
          "code": "'ariaAutoComplete' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaBusy",
        "info": {
          "code": "'ariaBusy' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaChecked",
        "info": {
          "code": "'ariaChecked' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaColCount",
        "info": {
          "code": "'ariaColCount' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaColIndex",
        "info": {
          "code": "'ariaColIndex' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaColSpan",
        "info": {
          "code": "'ariaColSpan' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaControls",
        "info": {
          "code": "'ariaControls' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaCurrent",
        "info": {
          "code": "'ariaCurrent' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaDescribedBy",
        "info": {
          "code": "'ariaDescribedBy' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaDetails",
        "info": {
          "code": "'ariaDetails' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaDisabled",
        "info": {
          "code": "'ariaDisabled' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaErrorMessage",
        "info": {
          "code": "'ariaErrorMessage' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaExpanded",
        "info": {
          "code": "'ariaExpanded' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaFlowTo",
        "info": {
          "code": "'ariaFlowTo' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaHasPopup",
        "info": {
          "code": "'ariaHasPopup' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaHidden",
        "info": {
          "code": "'ariaHidden' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaInvalid",
        "info": {
          "code": "'ariaInvalid' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaKeyShortcuts",
        "info": {
          "code": "'ariaKeyShortcuts' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaLabel",
        "info": {
          "code": "'ariaLabel' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaLabelledBy",
        "info": {
          "code": "'ariaLabelledBy' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaLevel",
        "info": {
          "code": "'ariaLevel' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaLive",
        "info": {
          "code": "'ariaLive' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaModal",
        "info": {
          "code": "'ariaModal' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaMultiLine",
        "info": {
          "code": "'ariaMultiLine' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaMultiSelectable",
        "info": {
          "code": "'ariaMultiSelectable' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaOrientation",
        "info": {
          "code": "'ariaOrientation' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaOwns",
        "info": {
          "code": "'ariaOwns' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaPlaceholder",
        "info": {
          "code": "'ariaPlaceholder' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaPosInSet",
        "info": {
          "code": "'ariaPosInSet' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaPressed",
        "info": {
          "code": "'ariaPressed' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaReadOnly",
        "info": {
          "code": "'ariaReadOnly' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaRelevant",
        "info": {
          "code": "'ariaRelevant' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaRequired",
        "info": {
          "code": "'ariaRequired' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaRoleDescription",
        "info": {
          "code": "'ariaRoleDescription' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaRowCount",
        "info": {
          "code": "'ariaRowCount' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaRowIndex",
        "info": {
          "code": "'ariaRowIndex' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaRowSpan",
        "info": {
          "code": "'ariaRowSpan' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaSelected",
        "info": {
          "code": "'ariaSelected' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaSetSize",
        "info": {
          "code": "'ariaSetSize' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaSort",
        "info": {
          "code": "'ariaSort' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaValueMax",
        "info": {
          "code": "'ariaValueMax' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaValueMin",
        "info": {
          "code": "'ariaValueMin' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaValueNow",
        "info": {
          "code": "'ariaValueNow' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.ariaValueText",
        "info": {
          "code": "'ariaValueText' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.assignedSlot",
        "info": {
          "code": "'assignedSlot' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.attachShadow",
        "info": {
          "code": "Element.prototype.attachShadow"
        },
        "returns": {
          "length": 1,
          "name": "attachShadow",
          "type": "function"
        }
      },
      {
        "context": "api.Element.attributes",
        "info": {
          "code": "'attributes' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.before",
        "info": {
          "code": "Element.prototype.before"
        },
        "returns": {
          "length": 0,
          "name": "before",
          "type": "function"
        }
      },
      {
        "context": "api.Element.childElementCount",
        "info": {
          "code": "'childElementCount' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.children",
        "info": {
          "code": "'children' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.classList",
        "info": {
          "code": "'classList' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.className",
        "info": {
          "code": "'className' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.clientHeight",
        "info": {
          "code": "'clientHeight' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.clientLeft",
        "info": {
          "code": "'clientLeft' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.clientTop",
        "info": {
          "code": "'clientTop' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.clientWidth",
        "info": {
          "code": "'clientWidth' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.closest",
        "info": {
          "code": "Element.prototype.closest"
        },
        "returns": {
          "length": 1,
          "name": "closest",
          "type": "function"
        }
      },
      {
        "context": "api.Element.computedStyleMap",
        "info": {
          "code": "Element.prototype.computedStyleMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.convertPointFromNode",
        "info": {
          "code": "Element.prototype.convertPointFromNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.convertQuadFromNode",
        "info": {
          "code": "Element.prototype.convertQuadFromNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.convertRectFromNode",
        "info": {
          "code": "Element.prototype.convertRectFromNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.firstElementChild",
        "info": {
          "code": "'firstElementChild' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.getAnimations",
        "info": {
          "code": "Element.prototype.getAnimations"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.getAttribute",
        "info": {
          "code": "Element.prototype.getAttribute"
        },
        "returns": {
          "length": 1,
          "name": "getAttribute",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getAttributeNames",
        "info": {
          "code": "Element.prototype.getAttributeNames"
        },
        "returns": {
          "length": 0,
          "name": "getAttributeNames",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getAttributeNode",
        "info": {
          "code": "Element.prototype.getAttributeNode"
        },
        "returns": {
          "length": 1,
          "name": "getAttributeNode",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getAttributeNodeNS",
        "info": {
          "code": "Element.prototype.getAttributeNodeNS"
        },
        "returns": {
          "length": 2,
          "name": "getAttributeNodeNS",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getAttributeNS",
        "info": {
          "code": "Element.prototype.getAttributeNS"
        },
        "returns": {
          "length": 2,
          "name": "getAttributeNS",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getBoundingClientRect",
        "info": {
          "code": "Element.prototype.getBoundingClientRect"
        },
        "returns": {
          "length": 0,
          "name": "getBoundingClientRect",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getBoxQuads",
        "info": {
          "code": "Element.prototype.getBoxQuads"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.getClientRects",
        "info": {
          "code": "Element.prototype.getClientRects"
        },
        "returns": {
          "length": 0,
          "name": "getClientRects",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getElementsByClassName",
        "info": {
          "code": "Element.prototype.getElementsByClassName"
        },
        "returns": {
          "length": 1,
          "name": "getElementsByClassName",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getElementsByTagName",
        "info": {
          "code": "Element.prototype.getElementsByTagName"
        },
        "returns": {
          "length": 1,
          "name": "getElementsByTagName",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getElementsByTagNameNS",
        "info": {
          "code": "Element.prototype.getElementsByTagNameNS"
        },
        "returns": {
          "length": 2,
          "name": "getElementsByTagNameNS",
          "type": "function"
        }
      },
      {
        "context": "api.Element.getFragmentInformation",
        "info": {
          "code": "Element.prototype.getFragmentInformation"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.getRegionFlowRanges",
        "info": {
          "code": "Element.prototype.getRegionFlowRanges"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.hasAttribute",
        "info": {
          "code": "Element.prototype.hasAttribute"
        },
        "returns": {
          "length": 1,
          "name": "hasAttribute",
          "type": "function"
        }
      },
      {
        "context": "api.Element.hasAttributeNS",
        "info": {
          "code": "Element.prototype.hasAttributeNS"
        },
        "returns": {
          "length": 2,
          "name": "hasAttributeNS",
          "type": "function"
        }
      },
      {
        "context": "api.Element.hasAttributes",
        "info": {
          "code": "Element.prototype.hasAttributes"
        },
        "returns": {
          "length": 0,
          "name": "hasAttributes",
          "type": "function"
        }
      },
      {
        "context": "api.Element.hasPointerCapture",
        "info": {
          "code": "Element.prototype.hasPointerCapture"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.id",
        "info": {
          "code": "'id' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.innerHTML",
        "info": {
          "code": "'innerHTML' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.insertAdjacentElement",
        "info": {
          "code": "Element.prototype.insertAdjacentElement"
        },
        "returns": {
          "length": 2,
          "name": "insertAdjacentElement",
          "type": "function"
        }
      },
      {
        "context": "api.Element.insertAdjacentHTML",
        "info": {
          "code": "Element.prototype.insertAdjacentHTML"
        },
        "returns": {
          "length": 2,
          "name": "insertAdjacentHTML",
          "type": "function"
        }
      },
      {
        "context": "api.Element.insertAdjacentText",
        "info": {
          "code": "Element.prototype.insertAdjacentText"
        },
        "returns": {
          "length": 2,
          "name": "insertAdjacentText",
          "type": "function"
        }
      },
      {
        "context": "api.Element.lastElementChild",
        "info": {
          "code": "'lastElementChild' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.localName",
        "info": {
          "code": "'localName' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.matches",
        "info": {
          "code": "Element.prototype.matches"
        },
        "returns": {
          "length": 1,
          "name": "matches",
          "type": "function"
        }
      },
      {
        "context": "api.Element.namespaceURI",
        "info": {
          "code": "'namespaceURI' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.nextElementSibling",
        "info": {
          "code": "'nextElementSibling' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.onfullscreenchange",
        "info": {
          "code": "'onfullscreenchange' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.onfullscreenerror",
        "info": {
          "code": "'onfullscreenerror' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.outerHTML",
        "info": {
          "code": "'outerHTML' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.prefix",
        "info": {
          "code": "'prefix' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.prepend",
        "info": {
          "code": "Element.prototype.prepend"
        },
        "returns": {
          "length": 0,
          "name": "prepend",
          "type": "function"
        }
      },
      {
        "context": "api.Element.previousElementSibling",
        "info": {
          "code": "'previousElementSibling' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.querySelector",
        "info": {
          "code": "Element.prototype.querySelector"
        },
        "returns": {
          "length": 1,
          "name": "querySelector",
          "type": "function"
        }
      },
      {
        "context": "api.Element.querySelectorAll",
        "info": {
          "code": "Element.prototype.querySelectorAll"
        },
        "returns": {
          "length": 1,
          "name": "querySelectorAll",
          "type": "function"
        }
      },
      {
        "context": "api.Element.regionOverset",
        "info": {
          "code": "'regionOverset' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.releasePointerCapture",
        "info": {
          "code": "Element.prototype.releasePointerCapture"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.remove",
        "info": {
          "code": "Element.prototype.remove"
        },
        "returns": {
          "length": 0,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.Element.removeAttribute",
        "info": {
          "code": "Element.prototype.removeAttribute"
        },
        "returns": {
          "length": 1,
          "name": "removeAttribute",
          "type": "function"
        }
      },
      {
        "context": "api.Element.removeAttributeNode",
        "info": {
          "code": "Element.prototype.removeAttributeNode"
        },
        "returns": {
          "length": 1,
          "name": "removeAttributeNode",
          "type": "function"
        }
      },
      {
        "context": "api.Element.removeAttributeNS",
        "info": {
          "code": "Element.prototype.removeAttributeNS"
        },
        "returns": {
          "length": 2,
          "name": "removeAttributeNS",
          "type": "function"
        }
      },
      {
        "context": "api.Element.replaceWith",
        "info": {
          "code": "Element.prototype.replaceWith"
        },
        "returns": {
          "length": 0,
          "name": "replaceWith",
          "type": "function"
        }
      },
      {
        "context": "api.Element.requestFullscreen",
        "info": {
          "code": "Element.prototype.requestFullscreen"
        },
        "returns": {
          "length": 0,
          "name": "requestFullscreen",
          "type": "function"
        }
      },
      {
        "context": "api.Element.requestPointerLock",
        "info": {
          "code": "Element.prototype.requestPointerLock"
        },
        "returns": {
          "length": 0,
          "name": "requestPointerLock",
          "type": "function"
        }
      },
      {
        "context": "api.Element.role",
        "info": {
          "code": "'role' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Element.scroll",
        "info": {
          "code": "Element.prototype.scroll"
        },
        "returns": {
          "length": 0,
          "name": "scroll",
          "type": "function"
        }
      },
      {
        "context": "api.Element.scroll",
        "info": {
          "code": "Element.prototype.scroll"
        },
        "returns": {
          "length": 0,
          "name": "scroll",
          "type": "function"
        }
      },
      {
        "context": "api.Element.scrollBy",
        "info": {
          "code": "Element.prototype.scrollBy"
        },
        "returns": {
          "length": 0,
          "name": "scrollBy",
          "type": "function"
        }
      },
      {
        "context": "api.Element.scrollBy",
        "info": {
          "code": "Element.prototype.scrollBy"
        },
        "returns": {
          "length": 0,
          "name": "scrollBy",
          "type": "function"
        }
      },
      {
        "context": "api.Element.scrollHeight",
        "info": {
          "code": "'scrollHeight' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.scrollIntoView",
        "info": {
          "code": "Element.prototype.scrollIntoView"
        },
        "returns": {
          "length": 0,
          "name": "scrollIntoView",
          "type": "function"
        }
      },
      {
        "context": "api.Element.scrollLeft",
        "info": {
          "code": "'scrollLeft' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.scrollTo",
        "info": {
          "code": "Element.prototype.scrollTo"
        },
        "returns": {
          "length": 0,
          "name": "scrollTo",
          "type": "function"
        }
      },
      {
        "context": "api.Element.scrollTo",
        "info": {
          "code": "Element.prototype.scrollTo"
        },
        "returns": {
          "length": 0,
          "name": "scrollTo",
          "type": "function"
        }
      },
      {
        "context": "api.Element.scrollTop",
        "info": {
          "code": "'scrollTop' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.scrollWidth",
        "info": {
          "code": "'scrollWidth' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.setAttribute",
        "info": {
          "code": "Element.prototype.setAttribute"
        },
        "returns": {
          "length": 2,
          "name": "setAttribute",
          "type": "function"
        }
      },
      {
        "context": "api.Element.setAttributeNode",
        "info": {
          "code": "Element.prototype.setAttributeNode"
        },
        "returns": {
          "length": 1,
          "name": "setAttributeNode",
          "type": "function"
        }
      },
      {
        "context": "api.Element.setAttributeNodeNS",
        "info": {
          "code": "Element.prototype.setAttributeNodeNS"
        },
        "returns": {
          "length": 1,
          "name": "setAttributeNodeNS",
          "type": "function"
        }
      },
      {
        "context": "api.Element.setAttributeNS",
        "info": {
          "code": "Element.prototype.setAttributeNS"
        },
        "returns": {
          "length": 3,
          "name": "setAttributeNS",
          "type": "function"
        }
      },
      {
        "context": "api.Element.setPointerCapture",
        "info": {
          "code": "Element.prototype.setPointerCapture"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Element.shadowRoot",
        "info": {
          "code": "'shadowRoot' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.slot",
        "info": {
          "code": "'slot' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.tagName",
        "info": {
          "code": "'tagName' in Element.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Element.toggleAttribute",
        "info": {
          "code": "Element.prototype.toggleAttribute"
        },
        "returns": {
          "length": 1,
          "name": "toggleAttribute",
          "type": "function"
        }
      },
      {
        "context": "api.Element.webkitMatchesSelector",
        "info": {
          "code": "Element.prototype.webkitMatchesSelector"
        },
        "returns": {
          "length": 1,
          "name": "webkitMatchesSelector",
          "type": "function"
        }
      },
      {
        "context": "api.EnterPictureInPictureEvent",
        "info": {
          "code": "self.EnterPictureInPictureEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.EnterPictureInPictureEvent.pictureInPictureWindow",
        "info": {
          "code": "'pictureInPictureWindow' in EnterPictureInPictureEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ErrorEvent",
        "info": {
          "code": "self.ErrorEvent"
        },
        "returns": {
          "length": 1,
          "name": "ErrorEvent",
          "type": "function"
        }
      },
      {
        "context": "api.ErrorEvent.colno",
        "info": {
          "code": "'colno' in ErrorEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ErrorEvent.error",
        "info": {
          "code": "'error' in ErrorEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ErrorEvent.filename",
        "info": {
          "code": "'filename' in ErrorEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ErrorEvent.lineno",
        "info": {
          "code": "'lineno' in ErrorEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ErrorEvent.message",
        "info": {
          "code": "'message' in ErrorEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event",
        "info": {
          "code": "self.Event"
        },
        "returns": {
          "length": 1,
          "name": "Event",
          "type": "function"
        }
      },
      {
        "context": "api.Event.AT_TARGET",
        "info": {
          "code": "Event.AT_TARGET"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.Event.bubbles",
        "info": {
          "code": "'bubbles' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.BUBBLING_PHASE",
        "info": {
          "code": "Event.BUBBLING_PHASE"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.Event.cancelable",
        "info": {
          "code": "'cancelable' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.cancelBubble",
        "info": {
          "code": "'cancelBubble' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.CAPTURING_PHASE",
        "info": {
          "code": "Event.CAPTURING_PHASE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.Event.composed",
        "info": {
          "code": "'composed' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.composedPath",
        "info": {
          "code": "Event.prototype.composedPath"
        },
        "returns": {
          "length": 0,
          "name": "composedPath",
          "type": "function"
        }
      },
      {
        "context": "api.Event.currentTarget",
        "info": {
          "code": "'currentTarget' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.defaultPrevented",
        "info": {
          "code": "'defaultPrevented' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.eventPhase",
        "info": {
          "code": "'eventPhase' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.initEvent",
        "info": {
          "code": "Event.prototype.initEvent"
        },
        "returns": {
          "length": 1,
          "name": "initEvent",
          "type": "function"
        }
      },
      {
        "context": "api.Event.isTrusted",
        "info": {
          "code": "'isTrusted' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Event.NONE",
        "info": {
          "code": "Event.NONE"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.Event.preventDefault",
        "info": {
          "code": "Event.prototype.preventDefault"
        },
        "returns": {
          "length": 0,
          "name": "preventDefault",
          "type": "function"
        }
      },
      {
        "context": "api.Event.returnValue",
        "info": {
          "code": "'returnValue' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Event.srcElement",
        "info": {
          "code": "'srcElement' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.stopImmediatePropagation",
        "info": {
          "code": "Event.prototype.stopImmediatePropagation"
        },
        "returns": {
          "length": 0,
          "name": "stopImmediatePropagation",
          "type": "function"
        }
      },
      {
        "context": "api.Event.stopPropagation",
        "info": {
          "code": "Event.prototype.stopPropagation"
        },
        "returns": {
          "length": 0,
          "name": "stopPropagation",
          "type": "function"
        }
      },
      {
        "context": "api.Event.target",
        "info": {
          "code": "'target' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.timeStamp",
        "info": {
          "code": "'timeStamp' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Event.type",
        "info": {
          "code": "'type' in Event.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.EventCounts",
        "info": {
          "code": "self.EventCounts"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.EventSource",
        "info": {
          "code": "self.EventSource"
        },
        "returns": {
          "length": 1,
          "name": "EventSource",
          "type": "function"
        }
      },
      {
        "context": "api.EventSource.close",
        "info": {
          "code": "EventSource.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.EventSource.CLOSED",
        "info": {
          "code": "EventSource.CLOSED"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.EventSource.CONNECTING",
        "info": {
          "code": "EventSource.CONNECTING"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.EventSource.onerror",
        "info": {
          "code": "'onerror' in EventSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.EventSource.onmessage",
        "info": {
          "code": "'onmessage' in EventSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.EventSource.onopen",
        "info": {
          "code": "'onopen' in EventSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.EventSource.OPEN",
        "info": {
          "code": "EventSource.OPEN"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.EventSource.readyState",
        "info": {
          "code": "'readyState' in EventSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.EventSource.url",
        "info": {
          "code": "'url' in EventSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.EventSource.withCredentials",
        "info": {
          "code": "'withCredentials' in EventSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.EventTarget",
        "info": {
          "code": "self.EventTarget"
        },
        "returns": {
          "length": 0,
          "name": "EventTarget",
          "type": "function"
        }
      },
      {
        "context": "api.EventTarget.addEventListener",
        "info": {
          "code": "EventTarget.prototype.addEventListener"
        },
        "returns": {
          "length": 2,
          "name": "addEventListener",
          "type": "function"
        }
      },
      {
        "context": "api.EventTarget.dispatchEvent",
        "info": {
          "code": "EventTarget.prototype.dispatchEvent"
        },
        "returns": {
          "length": 1,
          "name": "dispatchEvent",
          "type": "function"
        }
      },
      {
        "context": "api.EventTarget.removeEventListener",
        "info": {
          "code": "EventTarget.prototype.removeEventListener"
        },
        "returns": {
          "length": 2,
          "name": "removeEventListener",
          "type": "function"
        }
      },
      {
        "context": "api.ExtendableCookieChangeEvent",
        "info": {
          "code": "self.ExtendableCookieChangeEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ExtendableCookieChangeEvent.changed",
        "info": {
          "code": "'changed' in ExtendableCookieChangeEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ExtendableCookieChangeEvent.deleted",
        "info": {
          "code": "'deleted' in ExtendableCookieChangeEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ExtendableEvent",
        "info": {
          "code": "self.ExtendableEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ExtendableEvent.waitUntil",
        "info": {
          "code": "ExtendableEvent.prototype.waitUntil"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ExtendableMessageEvent",
        "info": {
          "code": "self.ExtendableMessageEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ExtendableMessageEvent.data",
        "info": {
          "code": "'data' in ExtendableMessageEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ExtendableMessageEvent.lastEventId",
        "info": {
          "code": "'lastEventId' in ExtendableMessageEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ExtendableMessageEvent.origin",
        "info": {
          "code": "'origin' in ExtendableMessageEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ExtendableMessageEvent.ports",
        "info": {
          "code": "'ports' in ExtendableMessageEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ExtendableMessageEvent.source",
        "info": {
          "code": "'source' in ExtendableMessageEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.External",
        "info": {
          "code": "self.External"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.External.AddSearchProvider",
        "info": {
          "code": "External.prototype.AddSearchProvider"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.External.IsSearchProviderInstalled",
        "info": {
          "code": "External.prototype.IsSearchProviderInstalled"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FaceDetector",
        "info": {
          "code": "self.FaceDetector"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.FaceDetector.detect",
        "info": {
          "code": "FaceDetector.prototype.detect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FeaturePolicy",
        "info": {
          "code": "self.FeaturePolicy"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.FeaturePolicy.allowedFeatures",
        "info": {
          "code": "FeaturePolicy.prototype.allowedFeatures"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FeaturePolicy.allowsFeature",
        "info": {
          "code": "FeaturePolicy.prototype.allowsFeature"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FeaturePolicy.features",
        "info": {
          "code": "FeaturePolicy.prototype.features"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FeaturePolicy.getAllowlistForFeature",
        "info": {
          "code": "FeaturePolicy.prototype.getAllowlistForFeature"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FeaturePolicyViolationReportBody",
        "info": {
          "code": "self.FeaturePolicyViolationReportBody"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.FeaturePolicyViolationReportBody.columnNumber",
        "info": {
          "code": "'columnNumber' in FeaturePolicyViolationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FeaturePolicyViolationReportBody.disposition",
        "info": {
          "code": "'disposition' in FeaturePolicyViolationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FeaturePolicyViolationReportBody.featureId",
        "info": {
          "code": "'featureId' in FeaturePolicyViolationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FeaturePolicyViolationReportBody.lineNumber",
        "info": {
          "code": "'lineNumber' in FeaturePolicyViolationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FeaturePolicyViolationReportBody.sourceFile",
        "info": {
          "code": "'sourceFile' in FeaturePolicyViolationReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FederatedCredential",
        "info": {
          "code": "self.FederatedCredential"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.FederatedCredential.iconURL",
        "info": {
          "code": "'iconURL' in FederatedCredential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FederatedCredential.name",
        "info": {
          "code": "'name' in FederatedCredential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FederatedCredential.protocol",
        "info": {
          "code": "'protocol' in FederatedCredential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FederatedCredential.provider",
        "info": {
          "code": "'provider' in FederatedCredential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FetchEvent",
        "info": {
          "code": "self.FetchEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.FetchEvent.clientId",
        "info": {
          "code": "'clientId' in FetchEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FetchEvent.request",
        "info": {
          "code": "'request' in FetchEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FetchEvent.respondWith",
        "info": {
          "code": "FetchEvent.prototype.respondWith"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.File",
        "info": {
          "code": "self.File"
        },
        "returns": {
          "length": 2,
          "name": "File",
          "type": "function"
        }
      },
      {
        "context": "api.File.lastModified",
        "info": {
          "code": "'lastModified' in File.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.File.name",
        "info": {
          "code": "'name' in File.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.File.webkitRelativePath",
        "info": {
          "code": "'webkitRelativePath' in File.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.FileList",
        "info": {
          "code": "self.FileList"
        },
        "returns": {
          "length": 0,
          "name": "FileList",
          "type": "function"
        }
      },
      {
        "context": "api.FileList.item",
        "info": {
          "code": "FileList.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.FileList.length",
        "info": {
          "code": "'length' in FileList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReader",
        "info": {
          "code": "self.FileReader"
        },
        "returns": {
          "length": 0,
          "name": "FileReader",
          "type": "function"
        }
      },
      {
        "context": "api.FileReader.abort",
        "info": {
          "code": "FileReader.prototype.abort"
        },
        "returns": {
          "length": 0,
          "name": "abort",
          "type": "function"
        }
      },
      {
        "context": "api.FileReader.DONE",
        "info": {
          "code": "FileReader.DONE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.FileReader.EMPTY",
        "info": {
          "code": "FileReader.EMPTY"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.FileReader.error",
        "info": {
          "code": "'error' in FileReader.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReader.LOADING",
        "info": {
          "code": "FileReader.LOADING"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.FileReader.onabort",
        "info": {
          "code": "'onabort' in FileReader.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReader.onerror",
        "info": {
          "code": "'onerror' in FileReader.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReader.onload",
        "info": {
          "code": "'onload' in FileReader.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReader.onloadend",
        "info": {
          "code": "'onloadend' in FileReader.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReader.onloadstart",
        "info": {
          "code": "'onloadstart' in FileReader.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReader.onprogress",
        "info": {
          "code": "'onprogress' in FileReader.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReader.readAsArrayBuffer",
        "info": {
          "code": "FileReader.prototype.readAsArrayBuffer"
        },
        "returns": {
          "length": 1,
          "name": "readAsArrayBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.FileReader.readAsBinaryString",
        "info": {
          "code": "FileReader.prototype.readAsBinaryString"
        },
        "returns": {
          "length": 1,
          "name": "readAsBinaryString",
          "type": "function"
        }
      },
      {
        "context": "api.FileReader.readAsDataURL",
        "info": {
          "code": "FileReader.prototype.readAsDataURL"
        },
        "returns": {
          "length": 1,
          "name": "readAsDataURL",
          "type": "function"
        }
      },
      {
        "context": "api.FileReader.readAsText",
        "info": {
          "code": "FileReader.prototype.readAsText"
        },
        "returns": {
          "length": 1,
          "name": "readAsText",
          "type": "function"
        }
      },
      {
        "context": "api.FileReader.readyState",
        "info": {
          "code": "'readyState' in FileReader.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReader.result",
        "info": {
          "code": "'result' in FileReader.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileReaderSync",
        "info": {
          "code": "self.FileReaderSync"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.FileReaderSync.readAsArrayBuffer",
        "info": {
          "code": "FileReaderSync.prototype.readAsArrayBuffer"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FileReaderSync.readAsBinaryString",
        "info": {
          "code": "FileReaderSync.prototype.readAsBinaryString"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FileReaderSync.readAsDataURL",
        "info": {
          "code": "FileReaderSync.prototype.readAsDataURL"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FileReaderSync.readAsText",
        "info": {
          "code": "FileReaderSync.prototype.readAsText"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FileSystem",
        "info": {
          "code": "self.FileSystem"
        },
        "returns": {
          "length": 0,
          "name": "FileSystem",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystem.name",
        "info": {
          "code": "'name' in FileSystem.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileSystem.root",
        "info": {
          "code": "'root' in FileSystem.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileSystemDirectoryEntry",
        "info": {
          "code": "self.FileSystemDirectoryEntry"
        },
        "returns": {
          "length": 0,
          "name": "FileSystemDirectoryEntry",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystemDirectoryEntry.createReader",
        "info": {
          "code": "FileSystemDirectoryEntry.prototype.createReader"
        },
        "returns": {
          "length": 0,
          "name": "createReader",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystemDirectoryEntry.getDirectory",
        "info": {
          "code": "FileSystemDirectoryEntry.prototype.getDirectory"
        },
        "returns": {
          "length": 0,
          "name": "getDirectory",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystemDirectoryEntry.getFile",
        "info": {
          "code": "FileSystemDirectoryEntry.prototype.getFile"
        },
        "returns": {
          "length": 0,
          "name": "getFile",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystemDirectoryReader",
        "info": {
          "code": "self.FileSystemDirectoryReader"
        },
        "returns": {
          "length": 0,
          "name": "FileSystemDirectoryReader",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystemDirectoryReader.readEntries",
        "info": {
          "code": "FileSystemDirectoryReader.prototype.readEntries"
        },
        "returns": {
          "length": 1,
          "name": "readEntries",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystemEntry",
        "info": {
          "code": "self.FileSystemEntry"
        },
        "returns": {
          "length": 0,
          "name": "FileSystemEntry",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystemEntry.filesystem",
        "info": {
          "code": "'filesystem' in FileSystemEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileSystemEntry.fullPath",
        "info": {
          "code": "'fullPath' in FileSystemEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileSystemEntry.getParent",
        "info": {
          "code": "FileSystemEntry.prototype.getParent"
        },
        "returns": {
          "length": 0,
          "name": "getParent",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystemEntry.isDirectory",
        "info": {
          "code": "'isDirectory' in FileSystemEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileSystemEntry.isFile",
        "info": {
          "code": "'isFile' in FileSystemEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileSystemEntry.name",
        "info": {
          "code": "'name' in FileSystemEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FileSystemFileEntry",
        "info": {
          "code": "self.FileSystemFileEntry"
        },
        "returns": {
          "length": 0,
          "name": "FileSystemFileEntry",
          "type": "function"
        }
      },
      {
        "context": "api.FileSystemFileEntry.file",
        "info": {
          "code": "FileSystemFileEntry.prototype.file"
        },
        "returns": {
          "length": 1,
          "name": "file",
          "type": "function"
        }
      },
      {
        "context": "api.FocusEvent",
        "info": {
          "code": "self.FocusEvent"
        },
        "returns": {
          "length": 1,
          "name": "FocusEvent",
          "type": "function"
        }
      },
      {
        "context": "api.FocusEvent.relatedTarget",
        "info": {
          "code": "'relatedTarget' in FocusEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Font",
        "info": {
          "code": "self.Font"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Font.glyphsRendered",
        "info": {
          "code": "'glyphsRendered' in Font.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Font.name",
        "info": {
          "code": "'name' in Font.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontFace",
        "info": {
          "code": "self.FontFace"
        },
        "returns": {
          "length": 2,
          "name": "FontFace",
          "type": "function"
        }
      },
      {
        "context": "api.FontFace.display",
        "info": {
          "code": "'display' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.family",
        "info": {
          "code": "'family' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.featureSettings",
        "info": {
          "code": "'featureSettings' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.load",
        "info": {
          "code": "FontFace.prototype.load"
        },
        "returns": {
          "length": 0,
          "name": "load",
          "type": "function"
        }
      },
      {
        "context": "api.FontFace.loaded",
        "info": {
          "code": "'loaded' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.status",
        "info": {
          "code": "'status' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.stretch",
        "info": {
          "code": "'stretch' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.style",
        "info": {
          "code": "'style' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.unicodeRange",
        "info": {
          "code": "'unicodeRange' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.variant",
        "info": {
          "code": "'variant' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.variationSettings",
        "info": {
          "code": "'variationSettings' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFace.weight",
        "info": {
          "code": "'weight' in FontFace.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFaceSet",
        "info": {
          "code": "self.FontFaceSet"
        },
        "returns": {
          "length": 0,
          "name": "FontFaceSet",
          "type": "function"
        }
      },
      {
        "context": "api.FontFaceSet.add",
        "info": {
          "code": "FontFaceSet.prototype.add"
        },
        "returns": {
          "length": 1,
          "name": "add",
          "type": "function"
        }
      },
      {
        "context": "api.FontFaceSet.check",
        "info": {
          "code": "FontFaceSet.prototype.check"
        },
        "returns": {
          "length": 1,
          "name": "check",
          "type": "function"
        }
      },
      {
        "context": "api.FontFaceSet.clear",
        "info": {
          "code": "FontFaceSet.prototype.clear"
        },
        "returns": {
          "length": 0,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.FontFaceSet.delete",
        "info": {
          "code": "FontFaceSet.prototype.delete"
        },
        "returns": {
          "length": 1,
          "name": "delete",
          "type": "function"
        }
      },
      {
        "context": "api.FontFaceSet.load",
        "info": {
          "code": "FontFaceSet.prototype.load"
        },
        "returns": {
          "length": 1,
          "name": "load",
          "type": "function"
        }
      },
      {
        "context": "api.FontFaceSet.onloading",
        "info": {
          "code": "'onloading' in FontFaceSet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFaceSet.onloadingdone",
        "info": {
          "code": "'onloadingdone' in FontFaceSet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFaceSet.onloadingerror",
        "info": {
          "code": "'onloadingerror' in FontFaceSet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFaceSet.ready",
        "info": {
          "code": "'ready' in FontFaceSet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFaceSet.status",
        "info": {
          "code": "'status' in FontFaceSet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontFaceSetLoadEvent",
        "info": {
          "code": "self.FontFaceSetLoadEvent"
        },
        "returns": {
          "length": 1,
          "name": "FontFaceSetLoadEvent",
          "type": "function"
        }
      },
      {
        "context": "api.FontFaceSetLoadEvent.fontfaces",
        "info": {
          "code": "'fontfaces' in FontFaceSetLoadEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.FontMetrics",
        "info": {
          "code": "self.FontMetrics"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.FontMetrics.advances",
        "info": {
          "code": "'advances' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.baselines",
        "info": {
          "code": "'baselines' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.boundingBoxAscent",
        "info": {
          "code": "'boundingBoxAscent' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.boundingBoxDescent",
        "info": {
          "code": "'boundingBoxDescent' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.boundingBoxLeft",
        "info": {
          "code": "'boundingBoxLeft' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.boundingBoxRight",
        "info": {
          "code": "'boundingBoxRight' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.dominantBaseline",
        "info": {
          "code": "'dominantBaseline' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.emHeightAscent",
        "info": {
          "code": "'emHeightAscent' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.emHeightDescent",
        "info": {
          "code": "'emHeightDescent' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.fontBoundingBoxAscent",
        "info": {
          "code": "'fontBoundingBoxAscent' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.fontBoundingBoxDescent",
        "info": {
          "code": "'fontBoundingBoxDescent' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.fonts",
        "info": {
          "code": "'fonts' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.height",
        "info": {
          "code": "'height' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FontMetrics.width",
        "info": {
          "code": "'width' in FontMetrics.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FormData",
        "info": {
          "code": "self.FormData"
        },
        "returns": {
          "length": 0,
          "name": "FormData",
          "type": "function"
        }
      },
      {
        "context": "api.FormData.append",
        "info": {
          "code": "FormData.prototype.append"
        },
        "returns": {
          "length": 2,
          "name": "append",
          "type": "function"
        }
      },
      {
        "context": "api.FormData.append",
        "info": {
          "code": "FormData.prototype.append"
        },
        "returns": {
          "length": 2,
          "name": "append",
          "type": "function"
        }
      },
      {
        "context": "api.FormData.delete",
        "info": {
          "code": "FormData.prototype.delete"
        },
        "returns": {
          "length": 1,
          "name": "delete",
          "type": "function"
        }
      },
      {
        "context": "api.FormData.get",
        "info": {
          "code": "FormData.prototype.get"
        },
        "returns": {
          "length": 1,
          "name": "get",
          "type": "function"
        }
      },
      {
        "context": "api.FormData.getAll",
        "info": {
          "code": "FormData.prototype.getAll"
        },
        "returns": {
          "length": 1,
          "name": "getAll",
          "type": "function"
        }
      },
      {
        "context": "api.FormData.has",
        "info": {
          "code": "FormData.prototype.has"
        },
        "returns": {
          "length": 1,
          "name": "has",
          "type": "function"
        }
      },
      {
        "context": "api.FormData.set",
        "info": {
          "code": "FormData.prototype.set"
        },
        "returns": {
          "length": 2,
          "name": "set",
          "type": "function"
        }
      },
      {
        "context": "api.FormData.set",
        "info": {
          "code": "FormData.prototype.set"
        },
        "returns": {
          "length": 2,
          "name": "set",
          "type": "function"
        }
      },
      {
        "context": "api.FormDataEvent",
        "info": {
          "code": "self.FormDataEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.FormDataEvent.formData",
        "info": {
          "code": "'formData' in FormDataEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FragmentResult",
        "info": {
          "code": "self.FragmentResult"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.FragmentResult.blockSize",
        "info": {
          "code": "'blockSize' in FragmentResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.FragmentResult.inlineSize",
        "info": {
          "code": "'inlineSize' in FragmentResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GainNode",
        "info": {
          "code": "self.GainNode"
        },
        "returns": {
          "length": 1,
          "name": "GainNode",
          "type": "function"
        }
      },
      {
        "context": "api.GainNode.gain",
        "info": {
          "code": "'gain' in GainNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Gamepad",
        "info": {
          "code": "self.Gamepad"
        },
        "returns": {
          "length": 0,
          "name": "Gamepad",
          "type": "function"
        }
      },
      {
        "context": "api.Gamepad.axes",
        "info": {
          "code": "'axes' in Gamepad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Gamepad.buttons",
        "info": {
          "code": "'buttons' in Gamepad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Gamepad.connected",
        "info": {
          "code": "'connected' in Gamepad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Gamepad.id",
        "info": {
          "code": "'id' in Gamepad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Gamepad.index",
        "info": {
          "code": "'index' in Gamepad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Gamepad.mapping",
        "info": {
          "code": "'mapping' in Gamepad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Gamepad.timestamp",
        "info": {
          "code": "'timestamp' in Gamepad.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.GamepadButton",
        "info": {
          "code": "self.GamepadButton"
        },
        "returns": {
          "length": 0,
          "name": "GamepadButton",
          "type": "function"
        }
      },
      {
        "context": "api.GamepadButton.pressed",
        "info": {
          "code": "'pressed' in GamepadButton.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.GamepadButton.touched",
        "info": {
          "code": "'touched' in GamepadButton.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.GamepadButton.value",
        "info": {
          "code": "'value' in GamepadButton.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.GamepadEvent",
        "info": {
          "code": "self.GamepadEvent"
        },
        "returns": {
          "length": 1,
          "name": "GamepadEvent",
          "type": "function"
        }
      },
      {
        "context": "api.GamepadEvent.gamepad",
        "info": {
          "code": "'gamepad' in GamepadEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Geolocation",
        "info": {
          "code": "self.Geolocation"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Geolocation.clearWatch",
        "info": {
          "code": "Geolocation.prototype.clearWatch"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Geolocation.getCurrentPosition",
        "info": {
          "code": "Geolocation.prototype.getCurrentPosition"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Geolocation.watchPosition",
        "info": {
          "code": "Geolocation.prototype.watchPosition"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GeolocationSensor",
        "info": {
          "code": "self.GeolocationSensor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.GeolocationSensor.accuracy",
        "info": {
          "code": "'accuracy' in GeolocationSensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GeolocationSensor.altitude",
        "info": {
          "code": "'altitude' in GeolocationSensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GeolocationSensor.altitudeAccuracy",
        "info": {
          "code": "'altitudeAccuracy' in GeolocationSensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GeolocationSensor.heading",
        "info": {
          "code": "'heading' in GeolocationSensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GeolocationSensor.latitude",
        "info": {
          "code": "'latitude' in GeolocationSensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GeolocationSensor.longitude",
        "info": {
          "code": "'longitude' in GeolocationSensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GeolocationSensor.read",
        "info": {
          "code": "GeolocationSensor.read"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GeolocationSensor.speed",
        "info": {
          "code": "'speed' in GeolocationSensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Global",
        "info": {
          "code": "self.Global"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Global.value",
        "info": {
          "code": "'value' in Global.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Global.valueOf",
        "info": {
          "code": "Global.prototype.valueOf"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.GravitySensor",
        "info": {
          "code": "self.GravitySensor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Gyroscope",
        "info": {
          "code": "self.Gyroscope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Gyroscope.x",
        "info": {
          "code": "'x' in Gyroscope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Gyroscope.y",
        "info": {
          "code": "'y' in Gyroscope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Gyroscope.z",
        "info": {
          "code": "'z' in Gyroscope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.HashChangeEvent",
        "info": {
          "code": "self.HashChangeEvent"
        },
        "returns": {
          "length": 1,
          "name": "HashChangeEvent",
          "type": "function"
        }
      },
      {
        "context": "api.HashChangeEvent.newURL",
        "info": {
          "code": "'newURL' in HashChangeEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HashChangeEvent.oldURL",
        "info": {
          "code": "'oldURL' in HashChangeEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Headers",
        "info": {
          "code": "self.Headers"
        },
        "returns": {
          "length": 0,
          "name": "Headers",
          "type": "function"
        }
      },
      {
        "context": "api.Headers.append",
        "info": {
          "code": "Headers.prototype.append"
        },
        "returns": {
          "length": 2,
          "name": "append",
          "type": "function"
        }
      },
      {
        "context": "api.Headers.delete",
        "info": {
          "code": "Headers.prototype.delete"
        },
        "returns": {
          "length": 1,
          "name": "delete",
          "type": "function"
        }
      },
      {
        "context": "api.Headers.get",
        "info": {
          "code": "Headers.prototype.get"
        },
        "returns": {
          "length": 1,
          "name": "get",
          "type": "function"
        }
      },
      {
        "context": "api.Headers.has",
        "info": {
          "code": "Headers.prototype.has"
        },
        "returns": {
          "length": 1,
          "name": "has",
          "type": "function"
        }
      },
      {
        "context": "api.Headers.set",
        "info": {
          "code": "Headers.prototype.set"
        },
        "returns": {
          "length": 2,
          "name": "set",
          "type": "function"
        }
      },
      {
        "context": "api.History",
        "info": {
          "code": "self.History"
        },
        "returns": {
          "length": 0,
          "name": "History",
          "type": "function"
        }
      },
      {
        "context": "api.History.back",
        "info": {
          "code": "History.prototype.back"
        },
        "returns": {
          "length": 0,
          "name": "back",
          "type": "function"
        }
      },
      {
        "context": "api.History.forward",
        "info": {
          "code": "History.prototype.forward"
        },
        "returns": {
          "length": 0,
          "name": "forward",
          "type": "function"
        }
      },
      {
        "context": "api.History.go",
        "info": {
          "code": "History.prototype.go"
        },
        "returns": {
          "length": 0,
          "name": "go",
          "type": "function"
        }
      },
      {
        "context": "api.History.length",
        "info": {
          "code": "'length' in History.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.History.pushState",
        "info": {
          "code": "History.prototype.pushState"
        },
        "returns": {
          "length": 2,
          "name": "pushState",
          "type": "function"
        }
      },
      {
        "context": "api.History.replaceState",
        "info": {
          "code": "History.prototype.replaceState"
        },
        "returns": {
          "length": 2,
          "name": "replaceState",
          "type": "function"
        }
      },
      {
        "context": "api.History.scrollRestoration",
        "info": {
          "code": "'scrollRestoration' in History.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.History.state",
        "info": {
          "code": "'state' in History.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAllCollection",
        "info": {
          "code": "self.HTMLAllCollection"
        },
        "returns": {
          "length": 0,
          "name": "HTMLAllCollection",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLAllCollection.item",
        "info": {
          "code": "HTMLAllCollection.prototype.item"
        },
        "returns": {
          "length": 0,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLAllCollection.length",
        "info": {
          "code": "'length' in HTMLAllCollection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAllCollection.namedItem",
        "info": {
          "code": "HTMLAllCollection.prototype.namedItem"
        },
        "returns": {
          "length": 1,
          "name": "namedItem",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLAnchorElement",
        "info": {
          "code": "self.HTMLAnchorElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLAnchorElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLAnchorElement.charset",
        "info": {
          "code": "'charset' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.coords",
        "info": {
          "code": "'coords' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.download",
        "info": {
          "code": "'download' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.hash",
        "info": {
          "code": "'hash' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.host",
        "info": {
          "code": "'host' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.hostname",
        "info": {
          "code": "'hostname' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.href",
        "info": {
          "code": "'href' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.hreflang",
        "info": {
          "code": "'hreflang' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.name",
        "info": {
          "code": "'name' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.origin",
        "info": {
          "code": "'origin' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.password",
        "info": {
          "code": "'password' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.pathname",
        "info": {
          "code": "'pathname' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.ping",
        "info": {
          "code": "'ping' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.port",
        "info": {
          "code": "'port' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.protocol",
        "info": {
          "code": "'protocol' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.referrerPolicy",
        "info": {
          "code": "'referrerPolicy' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.rel",
        "info": {
          "code": "'rel' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.relList",
        "info": {
          "code": "'relList' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.rev",
        "info": {
          "code": "'rev' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.search",
        "info": {
          "code": "'search' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.shape",
        "info": {
          "code": "'shape' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.target",
        "info": {
          "code": "'target' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.text",
        "info": {
          "code": "'text' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.type",
        "info": {
          "code": "'type' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAnchorElement.username",
        "info": {
          "code": "'username' in HTMLAnchorElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement",
        "info": {
          "code": "self.HTMLAreaElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLAreaElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLAreaElement.alt",
        "info": {
          "code": "'alt' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.coords",
        "info": {
          "code": "'coords' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.download",
        "info": {
          "code": "'download' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.hash",
        "info": {
          "code": "'hash' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.host",
        "info": {
          "code": "'host' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.hostname",
        "info": {
          "code": "'hostname' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.href",
        "info": {
          "code": "'href' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.noHref",
        "info": {
          "code": "'noHref' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.origin",
        "info": {
          "code": "'origin' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.password",
        "info": {
          "code": "'password' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.pathname",
        "info": {
          "code": "'pathname' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.ping",
        "info": {
          "code": "'ping' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.port",
        "info": {
          "code": "'port' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.protocol",
        "info": {
          "code": "'protocol' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.referrerPolicy",
        "info": {
          "code": "'referrerPolicy' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.rel",
        "info": {
          "code": "'rel' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.relList",
        "info": {
          "code": "'relList' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.search",
        "info": {
          "code": "'search' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.shape",
        "info": {
          "code": "'shape' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.target",
        "info": {
          "code": "'target' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAreaElement.username",
        "info": {
          "code": "'username' in HTMLAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLAudioElement",
        "info": {
          "code": "self.HTMLAudioElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLAudioElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLBaseElement",
        "info": {
          "code": "self.HTMLBaseElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLBaseElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLBaseElement.href",
        "info": {
          "code": "'href' in HTMLBaseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBaseElement.target",
        "info": {
          "code": "'target' in HTMLBaseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement",
        "info": {
          "code": "self.HTMLBodyElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLBodyElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLBodyElement.aLink",
        "info": {
          "code": "'aLink' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.background",
        "info": {
          "code": "'background' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.bgColor",
        "info": {
          "code": "'bgColor' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.link",
        "info": {
          "code": "'link' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onafterprint",
        "info": {
          "code": "'onafterprint' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onbeforeprint",
        "info": {
          "code": "'onbeforeprint' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onbeforeunload",
        "info": {
          "code": "'onbeforeunload' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onhashchange",
        "info": {
          "code": "'onhashchange' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onlanguagechange",
        "info": {
          "code": "'onlanguagechange' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onmessage",
        "info": {
          "code": "'onmessage' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onmessageerror",
        "info": {
          "code": "'onmessageerror' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onoffline",
        "info": {
          "code": "'onoffline' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.ononline",
        "info": {
          "code": "'ononline' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onorientationchange",
        "info": {
          "code": "'onorientationchange' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLBodyElement.onpagehide",
        "info": {
          "code": "'onpagehide' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onpageshow",
        "info": {
          "code": "'onpageshow' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onpopstate",
        "info": {
          "code": "'onpopstate' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onrejectionhandled",
        "info": {
          "code": "'onrejectionhandled' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLBodyElement.onstorage",
        "info": {
          "code": "'onstorage' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.onunhandledrejection",
        "info": {
          "code": "'onunhandledrejection' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLBodyElement.onunload",
        "info": {
          "code": "'onunload' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.text",
        "info": {
          "code": "'text' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBodyElement.vLink",
        "info": {
          "code": "'vLink' in HTMLBodyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLBRElement",
        "info": {
          "code": "self.HTMLBRElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLBRElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLBRElement.clear",
        "info": {
          "code": "'clear' in HTMLBRElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement",
        "info": {
          "code": "self.HTMLButtonElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLButtonElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLButtonElement.autofocus",
        "info": {
          "code": "'autofocus' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.checkValidity",
        "info": {
          "code": "HTMLButtonElement.prototype.checkValidity"
        },
        "returns": {
          "length": 0,
          "name": "checkValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLButtonElement.disabled",
        "info": {
          "code": "'disabled' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.form",
        "info": {
          "code": "'form' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.formAction",
        "info": {
          "code": "'formAction' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.formEnctype",
        "info": {
          "code": "'formEnctype' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.formMethod",
        "info": {
          "code": "'formMethod' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.formNoValidate",
        "info": {
          "code": "'formNoValidate' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.formTarget",
        "info": {
          "code": "'formTarget' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.labels",
        "info": {
          "code": "'labels' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.name",
        "info": {
          "code": "'name' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.reportValidity",
        "info": {
          "code": "HTMLButtonElement.prototype.reportValidity"
        },
        "returns": {
          "length": 0,
          "name": "reportValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLButtonElement.setCustomValidity",
        "info": {
          "code": "HTMLButtonElement.prototype.setCustomValidity"
        },
        "returns": {
          "length": 1,
          "name": "setCustomValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLButtonElement.type",
        "info": {
          "code": "'type' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.validationMessage",
        "info": {
          "code": "'validationMessage' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.validity",
        "info": {
          "code": "'validity' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.value",
        "info": {
          "code": "'value' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLButtonElement.willValidate",
        "info": {
          "code": "'willValidate' in HTMLButtonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLCanvasElement",
        "info": {
          "code": "self.HTMLCanvasElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLCanvasElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLCanvasElement.captureStream",
        "info": {
          "code": "HTMLCanvasElement.prototype.captureStream"
        },
        "returns": {
          "length": 0,
          "name": "captureStream",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLCanvasElement.getContext",
        "info": {
          "code": "HTMLCanvasElement.prototype.getContext"
        },
        "returns": {
          "length": 1,
          "name": "getContext",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLCanvasElement.height",
        "info": {
          "code": "'height' in HTMLCanvasElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLCanvasElement.toBlob",
        "info": {
          "code": "HTMLCanvasElement.prototype.toBlob"
        },
        "returns": {
          "length": 1,
          "name": "toBlob",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLCanvasElement.toDataURL",
        "info": {
          "code": "HTMLCanvasElement.prototype.toDataURL"
        },
        "returns": {
          "length": 0,
          "name": "toDataURL",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLCanvasElement.transferControlToOffscreen",
        "info": {
          "code": "HTMLCanvasElement.prototype.transferControlToOffscreen"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.HTMLCanvasElement.width",
        "info": {
          "code": "'width' in HTMLCanvasElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLCollection",
        "info": {
          "code": "self.HTMLCollection"
        },
        "returns": {
          "length": 0,
          "name": "HTMLCollection",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLCollection.item",
        "info": {
          "code": "HTMLCollection.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLCollection.length",
        "info": {
          "code": "'length' in HTMLCollection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLCollection.namedItem",
        "info": {
          "code": "HTMLCollection.prototype.namedItem"
        },
        "returns": {
          "length": 1,
          "name": "namedItem",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLDataElement",
        "info": {
          "code": "self.HTMLDataElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLDataElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLDataElement.value",
        "info": {
          "code": "'value' in HTMLDataElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLDataListElement",
        "info": {
          "code": "self.HTMLDataListElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLDataListElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLDataListElement.options",
        "info": {
          "code": "'options' in HTMLDataListElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLDetailsElement",
        "info": {
          "code": "self.HTMLDetailsElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLDetailsElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLDetailsElement.open",
        "info": {
          "code": "'open' in HTMLDetailsElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLDialogElement",
        "info": {
          "code": "self.HTMLDialogElement"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.HTMLDialogElement.close",
        "info": {
          "code": "HTMLDialogElement.prototype.close"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.HTMLDialogElement.open",
        "info": {
          "code": "'open' in HTMLDialogElement.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.HTMLDialogElement.returnValue",
        "info": {
          "code": "'returnValue' in HTMLDialogElement.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.HTMLDialogElement.show",
        "info": {
          "code": "HTMLDialogElement.prototype.show"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.HTMLDialogElement.showModal",
        "info": {
          "code": "HTMLDialogElement.prototype.showModal"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.HTMLDirectoryElement",
        "info": {
          "code": "self.HTMLDirectoryElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLDirectoryElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLDirectoryElement.compact",
        "info": {
          "code": "'compact' in HTMLDirectoryElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLDivElement",
        "info": {
          "code": "self.HTMLDivElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLDivElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLDivElement.align",
        "info": {
          "code": "'align' in HTMLDivElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLDListElement",
        "info": {
          "code": "self.HTMLDListElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLDListElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLDListElement.compact",
        "info": {
          "code": "'compact' in HTMLDListElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement",
        "info": {
          "code": "self.HTMLElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLElement.accessKey",
        "info": {
          "code": "'accessKey' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.accessKeyLabel",
        "info": {
          "code": "'accessKeyLabel' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.attributeStyleMap",
        "info": {
          "code": "'attributeStyleMap' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.autocapitalize",
        "info": {
          "code": "'autocapitalize' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.blur",
        "info": {
          "code": "HTMLElement.prototype.blur"
        },
        "returns": {
          "length": 0,
          "name": "blur",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLElement.click",
        "info": {
          "code": "HTMLElement.prototype.click"
        },
        "returns": {
          "length": 0,
          "name": "click",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLElement.contentEditable",
        "info": {
          "code": "'contentEditable' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.dataset",
        "info": {
          "code": "'dataset' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.dir",
        "info": {
          "code": "'dir' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.draggable",
        "info": {
          "code": "'draggable' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.enterKeyHint",
        "info": {
          "code": "'enterKeyHint' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.focus",
        "info": {
          "code": "HTMLElement.prototype.focus"
        },
        "returns": {
          "length": 0,
          "name": "focus",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLElement.hidden",
        "info": {
          "code": "'hidden' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.innerText",
        "info": {
          "code": "'innerText' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.inputMode",
        "info": {
          "code": "'inputMode' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.isContentEditable",
        "info": {
          "code": "'isContentEditable' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.lang",
        "info": {
          "code": "'lang' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.nonce",
        "info": {
          "code": "'nonce' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.offsetHeight",
        "info": {
          "code": "'offsetHeight' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.offsetLeft",
        "info": {
          "code": "'offsetLeft' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.offsetParent",
        "info": {
          "code": "'offsetParent' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.offsetTop",
        "info": {
          "code": "'offsetTop' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.offsetWidth",
        "info": {
          "code": "'offsetWidth' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onabort",
        "info": {
          "code": "'onabort' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onanimationcancel",
        "info": {
          "code": "'onanimationcancel' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onanimationend",
        "info": {
          "code": "'onanimationend' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onanimationiteration",
        "info": {
          "code": "'onanimationiteration' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onanimationstart",
        "info": {
          "code": "'onanimationstart' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onauxclick",
        "info": {
          "code": "'onauxclick' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onblur",
        "info": {
          "code": "'onblur' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.oncancel",
        "info": {
          "code": "'oncancel' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.oncanplay",
        "info": {
          "code": "'oncanplay' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.oncanplaythrough",
        "info": {
          "code": "'oncanplaythrough' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onchange",
        "info": {
          "code": "'onchange' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onclick",
        "info": {
          "code": "'onclick' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onclose",
        "info": {
          "code": "'onclose' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.oncontextmenu",
        "info": {
          "code": "'oncontextmenu' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.oncopy",
        "info": {
          "code": "'oncopy' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.oncuechange",
        "info": {
          "code": "'oncuechange' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.oncut",
        "info": {
          "code": "'oncut' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondblclick",
        "info": {
          "code": "'ondblclick' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondrag",
        "info": {
          "code": "'ondrag' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondragend",
        "info": {
          "code": "'ondragend' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondragenter",
        "info": {
          "code": "'ondragenter' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondragexit",
        "info": {
          "code": "'ondragexit' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondragleave",
        "info": {
          "code": "'ondragleave' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondragover",
        "info": {
          "code": "'ondragover' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondragstart",
        "info": {
          "code": "'ondragstart' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondrop",
        "info": {
          "code": "'ondrop' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ondurationchange",
        "info": {
          "code": "'ondurationchange' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onemptied",
        "info": {
          "code": "'onemptied' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onended",
        "info": {
          "code": "'onended' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onerror",
        "info": {
          "code": "'onerror' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onfocus",
        "info": {
          "code": "'onfocus' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onformdata",
        "info": {
          "code": "'onformdata' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.ongotpointercapture",
        "info": {
          "code": "'ongotpointercapture' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.oninput",
        "info": {
          "code": "'oninput' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.oninvalid",
        "info": {
          "code": "'oninvalid' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onkeydown",
        "info": {
          "code": "'onkeydown' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onkeypress",
        "info": {
          "code": "'onkeypress' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onkeyup",
        "info": {
          "code": "'onkeyup' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onload",
        "info": {
          "code": "'onload' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onloadeddata",
        "info": {
          "code": "'onloadeddata' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onloadedmetadata",
        "info": {
          "code": "'onloadedmetadata' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onloadend",
        "info": {
          "code": "'onloadend' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onloadstart",
        "info": {
          "code": "'onloadstart' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onlostpointercapture",
        "info": {
          "code": "'onlostpointercapture' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onmousedown",
        "info": {
          "code": "'onmousedown' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onmouseenter",
        "info": {
          "code": "'onmouseenter' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onmouseleave",
        "info": {
          "code": "'onmouseleave' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onmousemove",
        "info": {
          "code": "'onmousemove' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onmouseout",
        "info": {
          "code": "'onmouseout' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onmouseover",
        "info": {
          "code": "'onmouseover' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onmouseup",
        "info": {
          "code": "'onmouseup' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onpaste",
        "info": {
          "code": "'onpaste' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onpause",
        "info": {
          "code": "'onpause' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onplay",
        "info": {
          "code": "'onplay' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onplaying",
        "info": {
          "code": "'onplaying' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onpointercancel",
        "info": {
          "code": "'onpointercancel' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onpointerdown",
        "info": {
          "code": "'onpointerdown' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onpointerenter",
        "info": {
          "code": "'onpointerenter' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onpointerleave",
        "info": {
          "code": "'onpointerleave' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onpointermove",
        "info": {
          "code": "'onpointermove' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onpointerout",
        "info": {
          "code": "'onpointerout' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onpointerover",
        "info": {
          "code": "'onpointerover' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onpointerup",
        "info": {
          "code": "'onpointerup' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onprogress",
        "info": {
          "code": "'onprogress' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onratechange",
        "info": {
          "code": "'onratechange' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onreset",
        "info": {
          "code": "'onreset' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onresize",
        "info": {
          "code": "'onresize' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onscroll",
        "info": {
          "code": "'onscroll' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onsecuritypolicyviolation",
        "info": {
          "code": "'onsecuritypolicyviolation' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onseeked",
        "info": {
          "code": "'onseeked' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onseeking",
        "info": {
          "code": "'onseeking' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onselect",
        "info": {
          "code": "'onselect' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onselectionchange",
        "info": {
          "code": "'onselectionchange' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLElement.onselectstart",
        "info": {
          "code": "'onselectstart' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onstalled",
        "info": {
          "code": "'onstalled' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onsubmit",
        "info": {
          "code": "'onsubmit' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onsuspend",
        "info": {
          "code": "'onsuspend' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontimeupdate",
        "info": {
          "code": "'ontimeupdate' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontoggle",
        "info": {
          "code": "'ontoggle' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontouchcancel",
        "info": {
          "code": "'ontouchcancel' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontouchend",
        "info": {
          "code": "'ontouchend' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontouchmove",
        "info": {
          "code": "'ontouchmove' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontouchstart",
        "info": {
          "code": "'ontouchstart' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontransitioncancel",
        "info": {
          "code": "'ontransitioncancel' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontransitionend",
        "info": {
          "code": "'ontransitionend' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontransitionrun",
        "info": {
          "code": "'ontransitionrun' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.ontransitionstart",
        "info": {
          "code": "'ontransitionstart' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onvolumechange",
        "info": {
          "code": "'onvolumechange' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onwaiting",
        "info": {
          "code": "'onwaiting' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.onwheel",
        "info": {
          "code": "'onwheel' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.spellcheck",
        "info": {
          "code": "'spellcheck' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.style",
        "info": {
          "code": "'style' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.tabIndex",
        "info": {
          "code": "'tabIndex' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.title",
        "info": {
          "code": "'title' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLElement.translate",
        "info": {
          "code": "'translate' in HTMLElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLEmbedElement",
        "info": {
          "code": "self.HTMLEmbedElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLEmbedElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLEmbedElement.align",
        "info": {
          "code": "'align' in HTMLEmbedElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLEmbedElement.getSVGDocument",
        "info": {
          "code": "HTMLEmbedElement.prototype.getSVGDocument"
        },
        "returns": {
          "length": 0,
          "name": "getSVGDocument",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLEmbedElement.height",
        "info": {
          "code": "'height' in HTMLEmbedElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLEmbedElement.name",
        "info": {
          "code": "'name' in HTMLEmbedElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLEmbedElement.src",
        "info": {
          "code": "'src' in HTMLEmbedElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLEmbedElement.type",
        "info": {
          "code": "'type' in HTMLEmbedElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLEmbedElement.width",
        "info": {
          "code": "'width' in HTMLEmbedElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFieldSetElement",
        "info": {
          "code": "self.HTMLFieldSetElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLFieldSetElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFieldSetElement.checkValidity",
        "info": {
          "code": "HTMLFieldSetElement.prototype.checkValidity"
        },
        "returns": {
          "length": 0,
          "name": "checkValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFieldSetElement.disabled",
        "info": {
          "code": "'disabled' in HTMLFieldSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFieldSetElement.elements",
        "info": {
          "code": "'elements' in HTMLFieldSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFieldSetElement.form",
        "info": {
          "code": "'form' in HTMLFieldSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFieldSetElement.name",
        "info": {
          "code": "'name' in HTMLFieldSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFieldSetElement.reportValidity",
        "info": {
          "code": "HTMLFieldSetElement.prototype.reportValidity"
        },
        "returns": {
          "length": 0,
          "name": "reportValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFieldSetElement.setCustomValidity",
        "info": {
          "code": "HTMLFieldSetElement.prototype.setCustomValidity"
        },
        "returns": {
          "length": 1,
          "name": "setCustomValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFieldSetElement.type",
        "info": {
          "code": "'type' in HTMLFieldSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFieldSetElement.validationMessage",
        "info": {
          "code": "'validationMessage' in HTMLFieldSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFieldSetElement.validity",
        "info": {
          "code": "'validity' in HTMLFieldSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFieldSetElement.willValidate",
        "info": {
          "code": "'willValidate' in HTMLFieldSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFontElement",
        "info": {
          "code": "self.HTMLFontElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLFontElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFontElement.color",
        "info": {
          "code": "'color' in HTMLFontElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFontElement.face",
        "info": {
          "code": "'face' in HTMLFontElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFontElement.size",
        "info": {
          "code": "'size' in HTMLFontElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormControlsCollection",
        "info": {
          "code": "self.HTMLFormControlsCollection"
        },
        "returns": {
          "length": 0,
          "name": "HTMLFormControlsCollection",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFormControlsCollection.namedItem",
        "info": {
          "code": "HTMLFormControlsCollection.prototype.namedItem"
        },
        "returns": {
          "length": 1,
          "name": "namedItem",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFormElement",
        "info": {
          "code": "self.HTMLFormElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLFormElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFormElement.acceptCharset",
        "info": {
          "code": "'acceptCharset' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.action",
        "info": {
          "code": "'action' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.autocomplete",
        "info": {
          "code": "'autocomplete' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.checkValidity",
        "info": {
          "code": "HTMLFormElement.prototype.checkValidity"
        },
        "returns": {
          "length": 0,
          "name": "checkValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFormElement.elements",
        "info": {
          "code": "'elements' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.encoding",
        "info": {
          "code": "'encoding' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.enctype",
        "info": {
          "code": "'enctype' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.length",
        "info": {
          "code": "'length' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.method",
        "info": {
          "code": "'method' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.name",
        "info": {
          "code": "'name' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.noValidate",
        "info": {
          "code": "'noValidate' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFormElement.rel",
        "info": {
          "code": "'rel' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLFormElement.relList",
        "info": {
          "code": "'relList' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLFormElement.reportValidity",
        "info": {
          "code": "HTMLFormElement.prototype.reportValidity"
        },
        "returns": {
          "length": 0,
          "name": "reportValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFormElement.reset",
        "info": {
          "code": "HTMLFormElement.prototype.reset"
        },
        "returns": {
          "length": 0,
          "name": "reset",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFormElement.submit",
        "info": {
          "code": "HTMLFormElement.prototype.submit"
        },
        "returns": {
          "length": 0,
          "name": "submit",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFormElement.target",
        "info": {
          "code": "'target' in HTMLFormElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement",
        "info": {
          "code": "self.HTMLFrameElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLFrameElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFrameElement.contentDocument",
        "info": {
          "code": "'contentDocument' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement.contentWindow",
        "info": {
          "code": "'contentWindow' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement.frameBorder",
        "info": {
          "code": "'frameBorder' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement.longDesc",
        "info": {
          "code": "'longDesc' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement.marginHeight",
        "info": {
          "code": "'marginHeight' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement.marginWidth",
        "info": {
          "code": "'marginWidth' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement.name",
        "info": {
          "code": "'name' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement.noResize",
        "info": {
          "code": "'noResize' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement.scrolling",
        "info": {
          "code": "'scrolling' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameElement.src",
        "info": {
          "code": "'src' in HTMLFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement",
        "info": {
          "code": "self.HTMLFrameSetElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLFrameSetElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLFrameSetElement.cols",
        "info": {
          "code": "'cols' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onafterprint",
        "info": {
          "code": "'onafterprint' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onbeforeprint",
        "info": {
          "code": "'onbeforeprint' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onbeforeunload",
        "info": {
          "code": "'onbeforeunload' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onhashchange",
        "info": {
          "code": "'onhashchange' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onlanguagechange",
        "info": {
          "code": "'onlanguagechange' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onmessage",
        "info": {
          "code": "'onmessage' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onmessageerror",
        "info": {
          "code": "'onmessageerror' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onoffline",
        "info": {
          "code": "'onoffline' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.ononline",
        "info": {
          "code": "'ononline' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onpagehide",
        "info": {
          "code": "'onpagehide' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onpageshow",
        "info": {
          "code": "'onpageshow' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onpopstate",
        "info": {
          "code": "'onpopstate' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onrejectionhandled",
        "info": {
          "code": "'onrejectionhandled' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onstorage",
        "info": {
          "code": "'onstorage' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onunhandledrejection",
        "info": {
          "code": "'onunhandledrejection' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLFrameSetElement.onunload",
        "info": {
          "code": "'onunload' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLFrameSetElement.rows",
        "info": {
          "code": "'rows' in HTMLFrameSetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLHeadElement",
        "info": {
          "code": "self.HTMLHeadElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLHeadElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLHeadingElement",
        "info": {
          "code": "self.HTMLHeadingElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLHeadingElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLHeadingElement.align",
        "info": {
          "code": "'align' in HTMLHeadingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLHRElement",
        "info": {
          "code": "self.HTMLHRElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLHRElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLHRElement.align",
        "info": {
          "code": "'align' in HTMLHRElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLHRElement.color",
        "info": {
          "code": "'color' in HTMLHRElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLHRElement.noShade",
        "info": {
          "code": "'noShade' in HTMLHRElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLHRElement.size",
        "info": {
          "code": "'size' in HTMLHRElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLHRElement.width",
        "info": {
          "code": "'width' in HTMLHRElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLHtmlElement",
        "info": {
          "code": "self.HTMLHtmlElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLHtmlElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLHtmlElement.version",
        "info": {
          "code": "'version' in HTMLHtmlElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement",
        "info": {
          "code": "self.HTMLIFrameElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLIFrameElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLIFrameElement.align",
        "info": {
          "code": "'align' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.allow",
        "info": {
          "code": "'allow' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLIFrameElement.allowFullscreen",
        "info": {
          "code": "'allowFullscreen' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.allowPaymentRequest",
        "info": {
          "code": "'allowPaymentRequest' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.contentDocument",
        "info": {
          "code": "'contentDocument' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.contentWindow",
        "info": {
          "code": "'contentWindow' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.csp",
        "info": {
          "code": "'csp' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLIFrameElement.featurePolicy",
        "info": {
          "code": "'featurePolicy' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLIFrameElement.frameBorder",
        "info": {
          "code": "'frameBorder' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.getSVGDocument",
        "info": {
          "code": "HTMLIFrameElement.prototype.getSVGDocument"
        },
        "returns": {
          "length": 0,
          "name": "getSVGDocument",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLIFrameElement.height",
        "info": {
          "code": "'height' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.longDesc",
        "info": {
          "code": "'longDesc' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.marginHeight",
        "info": {
          "code": "'marginHeight' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.marginWidth",
        "info": {
          "code": "'marginWidth' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.name",
        "info": {
          "code": "'name' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.referrerPolicy",
        "info": {
          "code": "'referrerPolicy' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.sandbox",
        "info": {
          "code": "'sandbox' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.scrolling",
        "info": {
          "code": "'scrolling' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.src",
        "info": {
          "code": "'src' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.srcdoc",
        "info": {
          "code": "'srcdoc' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLIFrameElement.width",
        "info": {
          "code": "'width' in HTMLIFrameElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement",
        "info": {
          "code": "self.HTMLImageElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLImageElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLImageElement.align",
        "info": {
          "code": "'align' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.alt",
        "info": {
          "code": "'alt' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.border",
        "info": {
          "code": "'border' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.complete",
        "info": {
          "code": "'complete' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.crossOrigin",
        "info": {
          "code": "'crossOrigin' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.currentSrc",
        "info": {
          "code": "'currentSrc' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.decode",
        "info": {
          "code": "HTMLImageElement.prototype.decode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.HTMLImageElement.decoding",
        "info": {
          "code": "'decoding' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.height",
        "info": {
          "code": "'height' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.hspace",
        "info": {
          "code": "'hspace' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.isMap",
        "info": {
          "code": "'isMap' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.longDesc",
        "info": {
          "code": "'longDesc' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.lowsrc",
        "info": {
          "code": "'lowsrc' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.name",
        "info": {
          "code": "'name' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.naturalHeight",
        "info": {
          "code": "'naturalHeight' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.naturalWidth",
        "info": {
          "code": "'naturalWidth' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.referrerPolicy",
        "info": {
          "code": "'referrerPolicy' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.sizes",
        "info": {
          "code": "'sizes' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.src",
        "info": {
          "code": "'src' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.srcset",
        "info": {
          "code": "'srcset' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.useMap",
        "info": {
          "code": "'useMap' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.vspace",
        "info": {
          "code": "'vspace' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.width",
        "info": {
          "code": "'width' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.x",
        "info": {
          "code": "'x' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLImageElement.y",
        "info": {
          "code": "'y' in HTMLImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement",
        "info": {
          "code": "self.HTMLInputElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLInputElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.accept",
        "info": {
          "code": "'accept' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.align",
        "info": {
          "code": "'align' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.alt",
        "info": {
          "code": "'alt' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.autocomplete",
        "info": {
          "code": "'autocomplete' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.autofocus",
        "info": {
          "code": "'autofocus' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.capture",
        "info": {
          "code": "'capture' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLInputElement.checked",
        "info": {
          "code": "'checked' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.checkValidity",
        "info": {
          "code": "HTMLInputElement.prototype.checkValidity"
        },
        "returns": {
          "length": 0,
          "name": "checkValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.defaultChecked",
        "info": {
          "code": "'defaultChecked' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.defaultValue",
        "info": {
          "code": "'defaultValue' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.dirName",
        "info": {
          "code": "'dirName' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLInputElement.disabled",
        "info": {
          "code": "'disabled' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.files",
        "info": {
          "code": "'files' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.form",
        "info": {
          "code": "'form' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.formAction",
        "info": {
          "code": "'formAction' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.formEnctype",
        "info": {
          "code": "'formEnctype' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.formMethod",
        "info": {
          "code": "'formMethod' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.formNoValidate",
        "info": {
          "code": "'formNoValidate' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.formTarget",
        "info": {
          "code": "'formTarget' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.height",
        "info": {
          "code": "'height' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.indeterminate",
        "info": {
          "code": "'indeterminate' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.labels",
        "info": {
          "code": "'labels' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.list",
        "info": {
          "code": "'list' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.max",
        "info": {
          "code": "'max' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.maxLength",
        "info": {
          "code": "'maxLength' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.min",
        "info": {
          "code": "'min' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.minLength",
        "info": {
          "code": "'minLength' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.multiple",
        "info": {
          "code": "'multiple' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.name",
        "info": {
          "code": "'name' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.pattern",
        "info": {
          "code": "'pattern' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.placeholder",
        "info": {
          "code": "'placeholder' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.readOnly",
        "info": {
          "code": "'readOnly' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.reportValidity",
        "info": {
          "code": "HTMLInputElement.prototype.reportValidity"
        },
        "returns": {
          "length": 0,
          "name": "reportValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.required",
        "info": {
          "code": "'required' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.select",
        "info": {
          "code": "HTMLInputElement.prototype.select"
        },
        "returns": {
          "length": 0,
          "name": "select",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.selectionDirection",
        "info": {
          "code": "'selectionDirection' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.selectionEnd",
        "info": {
          "code": "'selectionEnd' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.selectionStart",
        "info": {
          "code": "'selectionStart' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.setCustomValidity",
        "info": {
          "code": "HTMLInputElement.prototype.setCustomValidity"
        },
        "returns": {
          "length": 1,
          "name": "setCustomValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.setRangeText",
        "info": {
          "code": "HTMLInputElement.prototype.setRangeText"
        },
        "returns": {
          "length": 1,
          "name": "setRangeText",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.setRangeText",
        "info": {
          "code": "HTMLInputElement.prototype.setRangeText"
        },
        "returns": {
          "length": 1,
          "name": "setRangeText",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.setSelectionRange",
        "info": {
          "code": "HTMLInputElement.prototype.setSelectionRange"
        },
        "returns": {
          "length": 2,
          "name": "setSelectionRange",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.size",
        "info": {
          "code": "'size' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.src",
        "info": {
          "code": "'src' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.step",
        "info": {
          "code": "'step' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.stepDown",
        "info": {
          "code": "HTMLInputElement.prototype.stepDown"
        },
        "returns": {
          "length": 0,
          "name": "stepDown",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.stepUp",
        "info": {
          "code": "HTMLInputElement.prototype.stepUp"
        },
        "returns": {
          "length": 0,
          "name": "stepUp",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLInputElement.type",
        "info": {
          "code": "'type' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.useMap",
        "info": {
          "code": "'useMap' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.validationMessage",
        "info": {
          "code": "'validationMessage' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.validity",
        "info": {
          "code": "'validity' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.value",
        "info": {
          "code": "'value' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.valueAsDate",
        "info": {
          "code": "'valueAsDate' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.valueAsNumber",
        "info": {
          "code": "'valueAsNumber' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.webkitdirectory",
        "info": {
          "code": "'webkitdirectory' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLInputElement.webkitEntries",
        "info": {
          "code": "'webkitEntries' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLInputElement.width",
        "info": {
          "code": "'width' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLInputElement.willValidate",
        "info": {
          "code": "'willValidate' in HTMLInputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLabelElement",
        "info": {
          "code": "self.HTMLLabelElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLLabelElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLLabelElement.control",
        "info": {
          "code": "'control' in HTMLLabelElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLabelElement.form",
        "info": {
          "code": "'form' in HTMLLabelElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLabelElement.htmlFor",
        "info": {
          "code": "'htmlFor' in HTMLLabelElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLegendElement",
        "info": {
          "code": "self.HTMLLegendElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLLegendElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLLegendElement.align",
        "info": {
          "code": "'align' in HTMLLegendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLegendElement.form",
        "info": {
          "code": "'form' in HTMLLegendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLIElement",
        "info": {
          "code": "self.HTMLLIElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLLIElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLLIElement.type",
        "info": {
          "code": "'type' in HTMLLIElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLIElement.value",
        "info": {
          "code": "'value' in HTMLLIElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement",
        "info": {
          "code": "self.HTMLLinkElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLLinkElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLLinkElement.as",
        "info": {
          "code": "'as' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.charset",
        "info": {
          "code": "'charset' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.crossOrigin",
        "info": {
          "code": "'crossOrigin' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.href",
        "info": {
          "code": "'href' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.hreflang",
        "info": {
          "code": "'hreflang' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.imageSizes",
        "info": {
          "code": "'imageSizes' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLLinkElement.imageSrcset",
        "info": {
          "code": "'imageSrcset' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLLinkElement.integrity",
        "info": {
          "code": "'integrity' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.integrity",
        "info": {
          "code": "'integrity' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.media",
        "info": {
          "code": "'media' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.referrerPolicy",
        "info": {
          "code": "'referrerPolicy' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.rel",
        "info": {
          "code": "'rel' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.relList",
        "info": {
          "code": "'relList' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.rev",
        "info": {
          "code": "'rev' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.sheet",
        "info": {
          "code": "'sheet' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.sizes",
        "info": {
          "code": "'sizes' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.target",
        "info": {
          "code": "'target' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLLinkElement.type",
        "info": {
          "code": "'type' in HTMLLinkElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMapElement",
        "info": {
          "code": "self.HTMLMapElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLMapElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMapElement.areas",
        "info": {
          "code": "'areas' in HTMLMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMapElement.name",
        "info": {
          "code": "'name' in HTMLMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement",
        "info": {
          "code": "self.HTMLMarqueeElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLMarqueeElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMarqueeElement.behavior",
        "info": {
          "code": "'behavior' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.bgColor",
        "info": {
          "code": "'bgColor' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.direction",
        "info": {
          "code": "'direction' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.height",
        "info": {
          "code": "'height' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.hspace",
        "info": {
          "code": "'hspace' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.loop",
        "info": {
          "code": "'loop' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.onbounce",
        "info": {
          "code": "'onbounce' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.onfinish",
        "info": {
          "code": "'onfinish' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.onstart",
        "info": {
          "code": "'onstart' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.scrollAmount",
        "info": {
          "code": "'scrollAmount' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.scrollDelay",
        "info": {
          "code": "'scrollDelay' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.start",
        "info": {
          "code": "HTMLMarqueeElement.prototype.start"
        },
        "returns": {
          "length": 0,
          "name": "start",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMarqueeElement.stop",
        "info": {
          "code": "HTMLMarqueeElement.prototype.stop"
        },
        "returns": {
          "length": 0,
          "name": "stop",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMarqueeElement.trueSpeed",
        "info": {
          "code": "'trueSpeed' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.vspace",
        "info": {
          "code": "'vspace' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMarqueeElement.width",
        "info": {
          "code": "'width' in HTMLMarqueeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement",
        "info": {
          "code": "self.HTMLMediaElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLMediaElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMediaElement.addTextTrack",
        "info": {
          "code": "HTMLMediaElement.prototype.addTextTrack"
        },
        "returns": {
          "length": 1,
          "name": "addTextTrack",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMediaElement.audioTracks",
        "info": {
          "code": "'audioTracks' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLMediaElement.autoplay",
        "info": {
          "code": "'autoplay' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.buffered",
        "info": {
          "code": "'buffered' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.canPlayType",
        "info": {
          "code": "HTMLMediaElement.prototype.canPlayType"
        },
        "returns": {
          "length": 1,
          "name": "canPlayType",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMediaElement.captureStream",
        "info": {
          "code": "HTMLMediaElement.prototype.captureStream"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.HTMLMediaElement.controls",
        "info": {
          "code": "'controls' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.crossOrigin",
        "info": {
          "code": "'crossOrigin' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.currentSrc",
        "info": {
          "code": "'currentSrc' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.currentTime",
        "info": {
          "code": "'currentTime' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.defaultMuted",
        "info": {
          "code": "'defaultMuted' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.defaultPlaybackRate",
        "info": {
          "code": "'defaultPlaybackRate' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.disableRemotePlayback",
        "info": {
          "code": "'disableRemotePlayback' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLMediaElement.duration",
        "info": {
          "code": "'duration' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.ended",
        "info": {
          "code": "'ended' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.error",
        "info": {
          "code": "'error' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.fastSeek",
        "info": {
          "code": "HTMLMediaElement.prototype.fastSeek"
        },
        "returns": {
          "length": 1,
          "name": "fastSeek",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMediaElement.getStartDate",
        "info": {
          "code": "HTMLMediaElement.prototype.getStartDate"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.HTMLMediaElement.HAVE_CURRENT_DATA",
        "info": {
          "code": "HTMLMediaElement.HAVE_CURRENT_DATA"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.HTMLMediaElement.HAVE_ENOUGH_DATA",
        "info": {
          "code": "HTMLMediaElement.HAVE_ENOUGH_DATA"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.HTMLMediaElement.HAVE_FUTURE_DATA",
        "info": {
          "code": "HTMLMediaElement.HAVE_FUTURE_DATA"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.HTMLMediaElement.HAVE_METADATA",
        "info": {
          "code": "HTMLMediaElement.HAVE_METADATA"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.HTMLMediaElement.HAVE_NOTHING",
        "info": {
          "code": "HTMLMediaElement.HAVE_NOTHING"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.HTMLMediaElement.load",
        "info": {
          "code": "HTMLMediaElement.prototype.load"
        },
        "returns": {
          "length": 0,
          "name": "load",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMediaElement.loop",
        "info": {
          "code": "'loop' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.mediaKeys",
        "info": {
          "code": "'mediaKeys' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.muted",
        "info": {
          "code": "'muted' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.NETWORK_EMPTY",
        "info": {
          "code": "HTMLMediaElement.NETWORK_EMPTY"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.HTMLMediaElement.NETWORK_IDLE",
        "info": {
          "code": "HTMLMediaElement.NETWORK_IDLE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.HTMLMediaElement.NETWORK_LOADING",
        "info": {
          "code": "HTMLMediaElement.NETWORK_LOADING"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.HTMLMediaElement.NETWORK_NO_SOURCE",
        "info": {
          "code": "HTMLMediaElement.NETWORK_NO_SOURCE"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.HTMLMediaElement.networkState",
        "info": {
          "code": "'networkState' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.onencrypted",
        "info": {
          "code": "'onencrypted' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.onwaitingforkey",
        "info": {
          "code": "'onwaitingforkey' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.pause",
        "info": {
          "code": "HTMLMediaElement.prototype.pause"
        },
        "returns": {
          "length": 0,
          "name": "pause",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMediaElement.paused",
        "info": {
          "code": "'paused' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.play",
        "info": {
          "code": "HTMLMediaElement.prototype.play"
        },
        "returns": {
          "length": 0,
          "name": "play",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMediaElement.playbackRate",
        "info": {
          "code": "'playbackRate' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.played",
        "info": {
          "code": "'played' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.preload",
        "info": {
          "code": "'preload' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.readyState",
        "info": {
          "code": "'readyState' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.remote",
        "info": {
          "code": "'remote' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLMediaElement.seekable",
        "info": {
          "code": "'seekable' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.seeking",
        "info": {
          "code": "'seeking' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.setMediaKeys",
        "info": {
          "code": "HTMLMediaElement.prototype.setMediaKeys"
        },
        "returns": {
          "length": 1,
          "name": "setMediaKeys",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMediaElement.setSinkId",
        "info": {
          "code": "HTMLMediaElement.prototype.setSinkId"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.HTMLMediaElement.sinkId",
        "info": {
          "code": "'sinkId' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLMediaElement.src",
        "info": {
          "code": "'src' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.srcObject",
        "info": {
          "code": "'srcObject' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.textTracks",
        "info": {
          "code": "'textTracks' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMediaElement.videoTracks",
        "info": {
          "code": "'videoTracks' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLMediaElement.volume",
        "info": {
          "code": "'volume' in HTMLMediaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMenuElement",
        "info": {
          "code": "self.HTMLMenuElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLMenuElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMenuElement.compact",
        "info": {
          "code": "'compact' in HTMLMenuElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMetaElement",
        "info": {
          "code": "self.HTMLMetaElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLMetaElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMetaElement.content",
        "info": {
          "code": "'content' in HTMLMetaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMetaElement.httpEquiv",
        "info": {
          "code": "'httpEquiv' in HTMLMetaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMetaElement.name",
        "info": {
          "code": "'name' in HTMLMetaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMetaElement.scheme",
        "info": {
          "code": "'scheme' in HTMLMetaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMeterElement",
        "info": {
          "code": "self.HTMLMeterElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLMeterElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLMeterElement.high",
        "info": {
          "code": "'high' in HTMLMeterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMeterElement.labels",
        "info": {
          "code": "'labels' in HTMLMeterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMeterElement.low",
        "info": {
          "code": "'low' in HTMLMeterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMeterElement.max",
        "info": {
          "code": "'max' in HTMLMeterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMeterElement.min",
        "info": {
          "code": "'min' in HTMLMeterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMeterElement.optimum",
        "info": {
          "code": "'optimum' in HTMLMeterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLMeterElement.value",
        "info": {
          "code": "'value' in HTMLMeterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLModElement",
        "info": {
          "code": "self.HTMLModElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLModElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLModElement.cite",
        "info": {
          "code": "'cite' in HTMLModElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLModElement.dateTime",
        "info": {
          "code": "'dateTime' in HTMLModElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement",
        "info": {
          "code": "self.HTMLObjectElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLObjectElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLObjectElement.align",
        "info": {
          "code": "'align' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.archive",
        "info": {
          "code": "'archive' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.border",
        "info": {
          "code": "'border' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.checkValidity",
        "info": {
          "code": "HTMLObjectElement.prototype.checkValidity"
        },
        "returns": {
          "length": 0,
          "name": "checkValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLObjectElement.code",
        "info": {
          "code": "'code' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.codeBase",
        "info": {
          "code": "'codeBase' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.codeType",
        "info": {
          "code": "'codeType' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.contentDocument",
        "info": {
          "code": "'contentDocument' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.contentWindow",
        "info": {
          "code": "'contentWindow' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.data",
        "info": {
          "code": "'data' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.declare",
        "info": {
          "code": "'declare' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.form",
        "info": {
          "code": "'form' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.getSVGDocument",
        "info": {
          "code": "HTMLObjectElement.prototype.getSVGDocument"
        },
        "returns": {
          "length": 0,
          "name": "getSVGDocument",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLObjectElement.height",
        "info": {
          "code": "'height' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.hspace",
        "info": {
          "code": "'hspace' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.name",
        "info": {
          "code": "'name' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.reportValidity",
        "info": {
          "code": "HTMLObjectElement.prototype.reportValidity"
        },
        "returns": {
          "length": 0,
          "name": "reportValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLObjectElement.setCustomValidity",
        "info": {
          "code": "HTMLObjectElement.prototype.setCustomValidity"
        },
        "returns": {
          "length": 1,
          "name": "setCustomValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLObjectElement.standby",
        "info": {
          "code": "'standby' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.type",
        "info": {
          "code": "'type' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.typeMustMatch",
        "info": {
          "code": "'typeMustMatch' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.useMap",
        "info": {
          "code": "'useMap' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.validationMessage",
        "info": {
          "code": "'validationMessage' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.validity",
        "info": {
          "code": "'validity' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.vspace",
        "info": {
          "code": "'vspace' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.width",
        "info": {
          "code": "'width' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLObjectElement.willValidate",
        "info": {
          "code": "'willValidate' in HTMLObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOListElement",
        "info": {
          "code": "self.HTMLOListElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLOListElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOListElement.compact",
        "info": {
          "code": "'compact' in HTMLOListElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOListElement.reversed",
        "info": {
          "code": "'reversed' in HTMLOListElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOListElement.start",
        "info": {
          "code": "'start' in HTMLOListElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOListElement.type",
        "info": {
          "code": "'type' in HTMLOListElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptGroupElement",
        "info": {
          "code": "self.HTMLOptGroupElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLOptGroupElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOptGroupElement.disabled",
        "info": {
          "code": "'disabled' in HTMLOptGroupElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptGroupElement.label",
        "info": {
          "code": "'label' in HTMLOptGroupElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionElement",
        "info": {
          "code": "self.HTMLOptionElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLOptionElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOptionElement.defaultSelected",
        "info": {
          "code": "'defaultSelected' in HTMLOptionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionElement.disabled",
        "info": {
          "code": "'disabled' in HTMLOptionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionElement.form",
        "info": {
          "code": "'form' in HTMLOptionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionElement.index",
        "info": {
          "code": "'index' in HTMLOptionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionElement.label",
        "info": {
          "code": "'label' in HTMLOptionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionElement.selected",
        "info": {
          "code": "'selected' in HTMLOptionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionElement.text",
        "info": {
          "code": "'text' in HTMLOptionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionElement.value",
        "info": {
          "code": "'value' in HTMLOptionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionsCollection",
        "info": {
          "code": "self.HTMLOptionsCollection"
        },
        "returns": {
          "length": 0,
          "name": "HTMLOptionsCollection",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOptionsCollection.add",
        "info": {
          "code": "HTMLOptionsCollection.prototype.add"
        },
        "returns": {
          "length": 1,
          "name": "add",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOptionsCollection.length",
        "info": {
          "code": "'length' in HTMLOptionsCollection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOptionsCollection.remove",
        "info": {
          "code": "HTMLOptionsCollection.prototype.remove"
        },
        "returns": {
          "length": 1,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOptionsCollection.selectedIndex",
        "info": {
          "code": "'selectedIndex' in HTMLOptionsCollection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement",
        "info": {
          "code": "self.HTMLOutputElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLOutputElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOutputElement.checkValidity",
        "info": {
          "code": "HTMLOutputElement.prototype.checkValidity"
        },
        "returns": {
          "length": 0,
          "name": "checkValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOutputElement.defaultValue",
        "info": {
          "code": "'defaultValue' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement.form",
        "info": {
          "code": "'form' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement.htmlFor",
        "info": {
          "code": "'htmlFor' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement.labels",
        "info": {
          "code": "'labels' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement.name",
        "info": {
          "code": "'name' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement.reportValidity",
        "info": {
          "code": "HTMLOutputElement.prototype.reportValidity"
        },
        "returns": {
          "length": 0,
          "name": "reportValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOutputElement.setCustomValidity",
        "info": {
          "code": "HTMLOutputElement.prototype.setCustomValidity"
        },
        "returns": {
          "length": 1,
          "name": "setCustomValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLOutputElement.type",
        "info": {
          "code": "'type' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement.validationMessage",
        "info": {
          "code": "'validationMessage' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement.validity",
        "info": {
          "code": "'validity' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement.value",
        "info": {
          "code": "'value' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLOutputElement.willValidate",
        "info": {
          "code": "'willValidate' in HTMLOutputElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLParagraphElement",
        "info": {
          "code": "self.HTMLParagraphElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLParagraphElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLParagraphElement.align",
        "info": {
          "code": "'align' in HTMLParagraphElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLParamElement",
        "info": {
          "code": "self.HTMLParamElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLParamElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLParamElement.name",
        "info": {
          "code": "'name' in HTMLParamElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLParamElement.type",
        "info": {
          "code": "'type' in HTMLParamElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLParamElement.value",
        "info": {
          "code": "'value' in HTMLParamElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLParamElement.valueType",
        "info": {
          "code": "'valueType' in HTMLParamElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLPictureElement",
        "info": {
          "code": "self.HTMLPictureElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLPictureElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLPreElement",
        "info": {
          "code": "self.HTMLPreElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLPreElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLPreElement.width",
        "info": {
          "code": "'width' in HTMLPreElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLProgressElement",
        "info": {
          "code": "self.HTMLProgressElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLProgressElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLProgressElement.labels",
        "info": {
          "code": "'labels' in HTMLProgressElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLProgressElement.max",
        "info": {
          "code": "'max' in HTMLProgressElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLProgressElement.position",
        "info": {
          "code": "'position' in HTMLProgressElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLProgressElement.value",
        "info": {
          "code": "'value' in HTMLProgressElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLQuoteElement",
        "info": {
          "code": "self.HTMLQuoteElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLQuoteElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLQuoteElement.cite",
        "info": {
          "code": "'cite' in HTMLQuoteElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement",
        "info": {
          "code": "self.HTMLScriptElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLScriptElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLScriptElement.async",
        "info": {
          "code": "'async' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.charset",
        "info": {
          "code": "'charset' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.crossOrigin",
        "info": {
          "code": "'crossOrigin' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.defer",
        "info": {
          "code": "'defer' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.event",
        "info": {
          "code": "'event' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.htmlFor",
        "info": {
          "code": "'htmlFor' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.integrity",
        "info": {
          "code": "'integrity' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.integrity",
        "info": {
          "code": "'integrity' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.noModule",
        "info": {
          "code": "'noModule' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.referrerPolicy",
        "info": {
          "code": "'referrerPolicy' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.src",
        "info": {
          "code": "'src' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.text",
        "info": {
          "code": "'text' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLScriptElement.type",
        "info": {
          "code": "'type' in HTMLScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement",
        "info": {
          "code": "self.HTMLSelectElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLSelectElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSelectElement.add",
        "info": {
          "code": "HTMLSelectElement.prototype.add"
        },
        "returns": {
          "length": 1,
          "name": "add",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSelectElement.autocomplete",
        "info": {
          "code": "'autocomplete' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.autofocus",
        "info": {
          "code": "'autofocus' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.checkValidity",
        "info": {
          "code": "HTMLSelectElement.prototype.checkValidity"
        },
        "returns": {
          "length": 0,
          "name": "checkValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSelectElement.disabled",
        "info": {
          "code": "'disabled' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.form",
        "info": {
          "code": "'form' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.item",
        "info": {
          "code": "HTMLSelectElement.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSelectElement.labels",
        "info": {
          "code": "'labels' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.length",
        "info": {
          "code": "'length' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.multiple",
        "info": {
          "code": "'multiple' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.name",
        "info": {
          "code": "'name' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.namedItem",
        "info": {
          "code": "HTMLSelectElement.prototype.namedItem"
        },
        "returns": {
          "length": 1,
          "name": "namedItem",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSelectElement.options",
        "info": {
          "code": "'options' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.remove",
        "info": {
          "code": "HTMLSelectElement.prototype.remove"
        },
        "returns": {
          "length": 0,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSelectElement.remove",
        "info": {
          "code": "HTMLSelectElement.prototype.remove"
        },
        "returns": {
          "length": 0,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSelectElement.reportValidity",
        "info": {
          "code": "HTMLSelectElement.prototype.reportValidity"
        },
        "returns": {
          "length": 0,
          "name": "reportValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSelectElement.required",
        "info": {
          "code": "'required' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.selectedIndex",
        "info": {
          "code": "'selectedIndex' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.selectedOptions",
        "info": {
          "code": "'selectedOptions' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.setCustomValidity",
        "info": {
          "code": "HTMLSelectElement.prototype.setCustomValidity"
        },
        "returns": {
          "length": 1,
          "name": "setCustomValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSelectElement.size",
        "info": {
          "code": "'size' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.type",
        "info": {
          "code": "'type' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.validationMessage",
        "info": {
          "code": "'validationMessage' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.validity",
        "info": {
          "code": "'validity' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.value",
        "info": {
          "code": "'value' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSelectElement.willValidate",
        "info": {
          "code": "'willValidate' in HTMLSelectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSlotElement",
        "info": {
          "code": "self.HTMLSlotElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLSlotElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSlotElement.assignedElements",
        "info": {
          "code": "HTMLSlotElement.prototype.assignedElements"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.HTMLSlotElement.assignedNodes",
        "info": {
          "code": "HTMLSlotElement.prototype.assignedNodes"
        },
        "returns": {
          "length": 0,
          "name": "assignedNodes",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSlotElement.name",
        "info": {
          "code": "'name' in HTMLSlotElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSourceElement",
        "info": {
          "code": "self.HTMLSourceElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLSourceElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLSourceElement.media",
        "info": {
          "code": "'media' in HTMLSourceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSourceElement.sizes",
        "info": {
          "code": "'sizes' in HTMLSourceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSourceElement.src",
        "info": {
          "code": "'src' in HTMLSourceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSourceElement.srcset",
        "info": {
          "code": "'srcset' in HTMLSourceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSourceElement.type",
        "info": {
          "code": "'type' in HTMLSourceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLSpanElement",
        "info": {
          "code": "self.HTMLSpanElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLSpanElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLStyleElement",
        "info": {
          "code": "self.HTMLStyleElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLStyleElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLStyleElement.media",
        "info": {
          "code": "'media' in HTMLStyleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLStyleElement.sheet",
        "info": {
          "code": "'sheet' in HTMLStyleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLStyleElement.type",
        "info": {
          "code": "'type' in HTMLStyleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCaptionElement",
        "info": {
          "code": "self.HTMLTableCaptionElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTableCaptionElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableCaptionElement.align",
        "info": {
          "code": "'align' in HTMLTableCaptionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement",
        "info": {
          "code": "self.HTMLTableCellElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTableCellElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableCellElement.abbr",
        "info": {
          "code": "'abbr' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.align",
        "info": {
          "code": "'align' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.axis",
        "info": {
          "code": "'axis' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.bgColor",
        "info": {
          "code": "'bgColor' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.cellIndex",
        "info": {
          "code": "'cellIndex' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.ch",
        "info": {
          "code": "'ch' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.chOff",
        "info": {
          "code": "'chOff' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.colSpan",
        "info": {
          "code": "'colSpan' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.headers",
        "info": {
          "code": "'headers' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.height",
        "info": {
          "code": "'height' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.noWrap",
        "info": {
          "code": "'noWrap' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.rowSpan",
        "info": {
          "code": "'rowSpan' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.scope",
        "info": {
          "code": "'scope' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.vAlign",
        "info": {
          "code": "'vAlign' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableCellElement.width",
        "info": {
          "code": "'width' in HTMLTableCellElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableColElement",
        "info": {
          "code": "self.HTMLTableColElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTableColElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableColElement.align",
        "info": {
          "code": "'align' in HTMLTableColElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableColElement.ch",
        "info": {
          "code": "'ch' in HTMLTableColElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableColElement.chOff",
        "info": {
          "code": "'chOff' in HTMLTableColElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableColElement.span",
        "info": {
          "code": "'span' in HTMLTableColElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableColElement.vAlign",
        "info": {
          "code": "'vAlign' in HTMLTableColElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableColElement.width",
        "info": {
          "code": "'width' in HTMLTableColElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement",
        "info": {
          "code": "self.HTMLTableElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTableElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.align",
        "info": {
          "code": "'align' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.bgColor",
        "info": {
          "code": "'bgColor' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.border",
        "info": {
          "code": "'border' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.caption",
        "info": {
          "code": "'caption' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.cellPadding",
        "info": {
          "code": "'cellPadding' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.cellSpacing",
        "info": {
          "code": "'cellSpacing' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.createCaption",
        "info": {
          "code": "HTMLTableElement.prototype.createCaption"
        },
        "returns": {
          "length": 0,
          "name": "createCaption",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.createTBody",
        "info": {
          "code": "HTMLTableElement.prototype.createTBody"
        },
        "returns": {
          "length": 0,
          "name": "createTBody",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.createTFoot",
        "info": {
          "code": "HTMLTableElement.prototype.createTFoot"
        },
        "returns": {
          "length": 0,
          "name": "createTFoot",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.createTHead",
        "info": {
          "code": "HTMLTableElement.prototype.createTHead"
        },
        "returns": {
          "length": 0,
          "name": "createTHead",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.deleteCaption",
        "info": {
          "code": "HTMLTableElement.prototype.deleteCaption"
        },
        "returns": {
          "length": 0,
          "name": "deleteCaption",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.deleteRow",
        "info": {
          "code": "HTMLTableElement.prototype.deleteRow"
        },
        "returns": {
          "length": 1,
          "name": "deleteRow",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.deleteTFoot",
        "info": {
          "code": "HTMLTableElement.prototype.deleteTFoot"
        },
        "returns": {
          "length": 0,
          "name": "deleteTFoot",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.deleteTHead",
        "info": {
          "code": "HTMLTableElement.prototype.deleteTHead"
        },
        "returns": {
          "length": 0,
          "name": "deleteTHead",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.frame",
        "info": {
          "code": "'frame' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.insertRow",
        "info": {
          "code": "HTMLTableElement.prototype.insertRow"
        },
        "returns": {
          "length": 0,
          "name": "insertRow",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableElement.rows",
        "info": {
          "code": "'rows' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.rules",
        "info": {
          "code": "'rules' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.summary",
        "info": {
          "code": "'summary' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.tBodies",
        "info": {
          "code": "'tBodies' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.tFoot",
        "info": {
          "code": "'tFoot' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.tHead",
        "info": {
          "code": "'tHead' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableElement.width",
        "info": {
          "code": "'width' in HTMLTableElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableRowElement",
        "info": {
          "code": "self.HTMLTableRowElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTableRowElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableRowElement.align",
        "info": {
          "code": "'align' in HTMLTableRowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableRowElement.bgColor",
        "info": {
          "code": "'bgColor' in HTMLTableRowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableRowElement.cells",
        "info": {
          "code": "'cells' in HTMLTableRowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableRowElement.ch",
        "info": {
          "code": "'ch' in HTMLTableRowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableRowElement.chOff",
        "info": {
          "code": "'chOff' in HTMLTableRowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableRowElement.deleteCell",
        "info": {
          "code": "HTMLTableRowElement.prototype.deleteCell"
        },
        "returns": {
          "length": 1,
          "name": "deleteCell",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableRowElement.insertCell",
        "info": {
          "code": "HTMLTableRowElement.prototype.insertCell"
        },
        "returns": {
          "length": 0,
          "name": "insertCell",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableRowElement.rowIndex",
        "info": {
          "code": "'rowIndex' in HTMLTableRowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableRowElement.sectionRowIndex",
        "info": {
          "code": "'sectionRowIndex' in HTMLTableRowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableRowElement.vAlign",
        "info": {
          "code": "'vAlign' in HTMLTableRowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableSectionElement",
        "info": {
          "code": "self.HTMLTableSectionElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTableSectionElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableSectionElement.align",
        "info": {
          "code": "'align' in HTMLTableSectionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableSectionElement.ch",
        "info": {
          "code": "'ch' in HTMLTableSectionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableSectionElement.chOff",
        "info": {
          "code": "'chOff' in HTMLTableSectionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableSectionElement.deleteRow",
        "info": {
          "code": "HTMLTableSectionElement.prototype.deleteRow"
        },
        "returns": {
          "length": 1,
          "name": "deleteRow",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableSectionElement.insertRow",
        "info": {
          "code": "HTMLTableSectionElement.prototype.insertRow"
        },
        "returns": {
          "length": 0,
          "name": "insertRow",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTableSectionElement.rows",
        "info": {
          "code": "'rows' in HTMLTableSectionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTableSectionElement.vAlign",
        "info": {
          "code": "'vAlign' in HTMLTableSectionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTemplateElement",
        "info": {
          "code": "self.HTMLTemplateElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTemplateElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTemplateElement.content",
        "info": {
          "code": "'content' in HTMLTemplateElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement",
        "info": {
          "code": "self.HTMLTextAreaElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTextAreaElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTextAreaElement.autocomplete",
        "info": {
          "code": "'autocomplete' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.autofocus",
        "info": {
          "code": "'autofocus' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.checkValidity",
        "info": {
          "code": "HTMLTextAreaElement.prototype.checkValidity"
        },
        "returns": {
          "length": 0,
          "name": "checkValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTextAreaElement.cols",
        "info": {
          "code": "'cols' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.defaultValue",
        "info": {
          "code": "'defaultValue' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.dirName",
        "info": {
          "code": "'dirName' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLTextAreaElement.disabled",
        "info": {
          "code": "'disabled' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.form",
        "info": {
          "code": "'form' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.labels",
        "info": {
          "code": "'labels' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.maxLength",
        "info": {
          "code": "'maxLength' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.minLength",
        "info": {
          "code": "'minLength' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.name",
        "info": {
          "code": "'name' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.placeholder",
        "info": {
          "code": "'placeholder' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.readOnly",
        "info": {
          "code": "'readOnly' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.reportValidity",
        "info": {
          "code": "HTMLTextAreaElement.prototype.reportValidity"
        },
        "returns": {
          "length": 0,
          "name": "reportValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTextAreaElement.required",
        "info": {
          "code": "'required' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.rows",
        "info": {
          "code": "'rows' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.select",
        "info": {
          "code": "HTMLTextAreaElement.prototype.select"
        },
        "returns": {
          "length": 0,
          "name": "select",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTextAreaElement.selectionDirection",
        "info": {
          "code": "'selectionDirection' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.selectionEnd",
        "info": {
          "code": "'selectionEnd' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.selectionStart",
        "info": {
          "code": "'selectionStart' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.setCustomValidity",
        "info": {
          "code": "HTMLTextAreaElement.prototype.setCustomValidity"
        },
        "returns": {
          "length": 1,
          "name": "setCustomValidity",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTextAreaElement.setRangeText",
        "info": {
          "code": "HTMLTextAreaElement.prototype.setRangeText"
        },
        "returns": {
          "length": 1,
          "name": "setRangeText",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTextAreaElement.setRangeText",
        "info": {
          "code": "HTMLTextAreaElement.prototype.setRangeText"
        },
        "returns": {
          "length": 1,
          "name": "setRangeText",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTextAreaElement.setSelectionRange",
        "info": {
          "code": "HTMLTextAreaElement.prototype.setSelectionRange"
        },
        "returns": {
          "length": 2,
          "name": "setSelectionRange",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTextAreaElement.textLength",
        "info": {
          "code": "'textLength' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.type",
        "info": {
          "code": "'type' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.validationMessage",
        "info": {
          "code": "'validationMessage' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.validity",
        "info": {
          "code": "'validity' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.value",
        "info": {
          "code": "'value' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.willValidate",
        "info": {
          "code": "'willValidate' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTextAreaElement.wrap",
        "info": {
          "code": "'wrap' in HTMLTextAreaElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTimeElement",
        "info": {
          "code": "self.HTMLTimeElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTimeElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTimeElement.dateTime",
        "info": {
          "code": "'dateTime' in HTMLTimeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTitleElement",
        "info": {
          "code": "self.HTMLTitleElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTitleElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTitleElement.text",
        "info": {
          "code": "'text' in HTMLTitleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTrackElement",
        "info": {
          "code": "self.HTMLTrackElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLTrackElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLTrackElement.default",
        "info": {
          "code": "'default' in HTMLTrackElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTrackElement.ERROR",
        "info": {
          "code": "HTMLTrackElement.ERROR"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.HTMLTrackElement.kind",
        "info": {
          "code": "'kind' in HTMLTrackElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTrackElement.label",
        "info": {
          "code": "'label' in HTMLTrackElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTrackElement.LOADED",
        "info": {
          "code": "HTMLTrackElement.LOADED"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.HTMLTrackElement.LOADING",
        "info": {
          "code": "HTMLTrackElement.LOADING"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.HTMLTrackElement.NONE",
        "info": {
          "code": "HTMLTrackElement.NONE"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.HTMLTrackElement.readyState",
        "info": {
          "code": "'readyState' in HTMLTrackElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTrackElement.src",
        "info": {
          "code": "'src' in HTMLTrackElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTrackElement.srclang",
        "info": {
          "code": "'srclang' in HTMLTrackElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLTrackElement.track",
        "info": {
          "code": "'track' in HTMLTrackElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLUListElement",
        "info": {
          "code": "self.HTMLUListElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLUListElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLUListElement.compact",
        "info": {
          "code": "'compact' in HTMLUListElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLUListElement.type",
        "info": {
          "code": "'type' in HTMLUListElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLUnknownElement",
        "info": {
          "code": "self.HTMLUnknownElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLUnknownElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLVideoElement",
        "info": {
          "code": "self.HTMLVideoElement"
        },
        "returns": {
          "length": 0,
          "name": "HTMLVideoElement",
          "type": "function"
        }
      },
      {
        "context": "api.HTMLVideoElement.autoPictureInPicture",
        "info": {
          "code": "'autoPictureInPicture' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLVideoElement.disablePictureInPicture",
        "info": {
          "code": "'disablePictureInPicture' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLVideoElement.height",
        "info": {
          "code": "'height' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLVideoElement.onenterpictureinpicture",
        "info": {
          "code": "'onenterpictureinpicture' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLVideoElement.onleavepictureinpicture",
        "info": {
          "code": "'onleavepictureinpicture' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLVideoElement.playsInline",
        "info": {
          "code": "'playsInline' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.HTMLVideoElement.poster",
        "info": {
          "code": "'poster' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLVideoElement.requestPictureInPicture",
        "info": {
          "code": "HTMLVideoElement.prototype.requestPictureInPicture"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.HTMLVideoElement.videoHeight",
        "info": {
          "code": "'videoHeight' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLVideoElement.videoWidth",
        "info": {
          "code": "'videoWidth' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.HTMLVideoElement.width",
        "info": {
          "code": "'width' in HTMLVideoElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBCursor",
        "info": {
          "code": "self.IDBCursor"
        },
        "returns": {
          "length": 0,
          "name": "IDBCursor",
          "type": "function"
        }
      },
      {
        "context": "api.IDBCursor.advance",
        "info": {
          "code": "IDBCursor.prototype.advance"
        },
        "returns": {
          "length": 1,
          "name": "advance",
          "type": "function"
        }
      },
      {
        "context": "api.IDBCursor.continue",
        "info": {
          "code": "IDBCursor.prototype.continue"
        },
        "returns": {
          "length": 0,
          "name": "continue",
          "type": "function"
        }
      },
      {
        "context": "api.IDBCursor.continuePrimaryKey",
        "info": {
          "code": "IDBCursor.prototype.continuePrimaryKey"
        },
        "returns": {
          "length": 2,
          "name": "continuePrimaryKey",
          "type": "function"
        }
      },
      {
        "context": "api.IDBCursor.delete",
        "info": {
          "code": "IDBCursor.prototype.delete"
        },
        "returns": {
          "length": 0,
          "name": "delete",
          "type": "function"
        }
      },
      {
        "context": "api.IDBCursor.direction",
        "info": {
          "code": "'direction' in IDBCursor.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBCursor.key",
        "info": {
          "code": "'key' in IDBCursor.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBCursor.primaryKey",
        "info": {
          "code": "'primaryKey' in IDBCursor.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBCursor.source",
        "info": {
          "code": "'source' in IDBCursor.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBCursor.update",
        "info": {
          "code": "IDBCursor.prototype.update"
        },
        "returns": {
          "length": 1,
          "name": "update",
          "type": "function"
        }
      },
      {
        "context": "api.IDBCursorWithValue",
        "info": {
          "code": "self.IDBCursorWithValue"
        },
        "returns": {
          "length": 0,
          "name": "IDBCursorWithValue",
          "type": "function"
        }
      },
      {
        "context": "api.IDBCursorWithValue.value",
        "info": {
          "code": "'value' in IDBCursorWithValue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBDatabase",
        "info": {
          "code": "self.IDBDatabase"
        },
        "returns": {
          "length": 0,
          "name": "IDBDatabase",
          "type": "function"
        }
      },
      {
        "context": "api.IDBDatabase.close",
        "info": {
          "code": "IDBDatabase.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.IDBDatabase.createObjectStore",
        "info": {
          "code": "IDBDatabase.prototype.createObjectStore"
        },
        "returns": {
          "length": 1,
          "name": "createObjectStore",
          "type": "function"
        }
      },
      {
        "context": "api.IDBDatabase.deleteObjectStore",
        "info": {
          "code": "IDBDatabase.prototype.deleteObjectStore"
        },
        "returns": {
          "length": 1,
          "name": "deleteObjectStore",
          "type": "function"
        }
      },
      {
        "context": "api.IDBDatabase.name",
        "info": {
          "code": "'name' in IDBDatabase.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBDatabase.objectStoreNames",
        "info": {
          "code": "'objectStoreNames' in IDBDatabase.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBDatabase.onabort",
        "info": {
          "code": "'onabort' in IDBDatabase.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBDatabase.onclose",
        "info": {
          "code": "'onclose' in IDBDatabase.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBDatabase.onerror",
        "info": {
          "code": "'onerror' in IDBDatabase.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBDatabase.onversionchange",
        "info": {
          "code": "'onversionchange' in IDBDatabase.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBDatabase.transaction",
        "info": {
          "code": "IDBDatabase.prototype.transaction"
        },
        "returns": {
          "length": 1,
          "name": "transaction",
          "type": "function"
        }
      },
      {
        "context": "api.IDBDatabase.version",
        "info": {
          "code": "'version' in IDBDatabase.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBFactory",
        "info": {
          "code": "self.IDBFactory"
        },
        "returns": {
          "length": 0,
          "name": "IDBFactory",
          "type": "function"
        }
      },
      {
        "context": "api.IDBFactory.cmp",
        "info": {
          "code": "IDBFactory.prototype.cmp"
        },
        "returns": {
          "length": 2,
          "name": "cmp",
          "type": "function"
        }
      },
      {
        "context": "api.IDBFactory.databases",
        "info": {
          "code": "IDBFactory.prototype.databases"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.IDBFactory.deleteDatabase",
        "info": {
          "code": "IDBFactory.prototype.deleteDatabase"
        },
        "returns": {
          "length": 1,
          "name": "deleteDatabase",
          "type": "function"
        }
      },
      {
        "context": "api.IDBFactory.open",
        "info": {
          "code": "IDBFactory.prototype.open"
        },
        "returns": {
          "length": 1,
          "name": "open",
          "type": "function"
        }
      },
      {
        "context": "api.IDBIndex",
        "info": {
          "code": "self.IDBIndex"
        },
        "returns": {
          "length": 0,
          "name": "IDBIndex",
          "type": "function"
        }
      },
      {
        "context": "api.IDBIndex.count",
        "info": {
          "code": "IDBIndex.prototype.count"
        },
        "returns": {
          "length": 0,
          "name": "count",
          "type": "function"
        }
      },
      {
        "context": "api.IDBIndex.get",
        "info": {
          "code": "IDBIndex.prototype.get"
        },
        "returns": {
          "length": 1,
          "name": "get",
          "type": "function"
        }
      },
      {
        "context": "api.IDBIndex.getAll",
        "info": {
          "code": "IDBIndex.prototype.getAll"
        },
        "returns": {
          "length": 0,
          "name": "getAll",
          "type": "function"
        }
      },
      {
        "context": "api.IDBIndex.getAllKeys",
        "info": {
          "code": "IDBIndex.prototype.getAllKeys"
        },
        "returns": {
          "length": 0,
          "name": "getAllKeys",
          "type": "function"
        }
      },
      {
        "context": "api.IDBIndex.getKey",
        "info": {
          "code": "IDBIndex.prototype.getKey"
        },
        "returns": {
          "length": 1,
          "name": "getKey",
          "type": "function"
        }
      },
      {
        "context": "api.IDBIndex.keyPath",
        "info": {
          "code": "'keyPath' in IDBIndex.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBIndex.multiEntry",
        "info": {
          "code": "'multiEntry' in IDBIndex.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBIndex.name",
        "info": {
          "code": "'name' in IDBIndex.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBIndex.objectStore",
        "info": {
          "code": "'objectStore' in IDBIndex.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBIndex.openCursor",
        "info": {
          "code": "IDBIndex.prototype.openCursor"
        },
        "returns": {
          "length": 0,
          "name": "openCursor",
          "type": "function"
        }
      },
      {
        "context": "api.IDBIndex.openKeyCursor",
        "info": {
          "code": "IDBIndex.prototype.openKeyCursor"
        },
        "returns": {
          "length": 0,
          "name": "openKeyCursor",
          "type": "function"
        }
      },
      {
        "context": "api.IDBIndex.unique",
        "info": {
          "code": "'unique' in IDBIndex.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBKeyRange",
        "info": {
          "code": "self.IDBKeyRange"
        },
        "returns": {
          "length": 0,
          "name": "IDBKeyRange",
          "type": "function"
        }
      },
      {
        "context": "api.IDBKeyRange.bound",
        "info": {
          "code": "IDBKeyRange.bound"
        },
        "returns": {
          "length": 2,
          "name": "bound",
          "type": "function"
        }
      },
      {
        "context": "api.IDBKeyRange.includes",
        "info": {
          "code": "IDBKeyRange.prototype.includes"
        },
        "returns": {
          "length": 1,
          "name": "includes",
          "type": "function"
        }
      },
      {
        "context": "api.IDBKeyRange.lower",
        "info": {
          "code": "'lower' in IDBKeyRange.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBKeyRange.lowerBound",
        "info": {
          "code": "IDBKeyRange.lowerBound"
        },
        "returns": {
          "length": 1,
          "name": "lowerBound",
          "type": "function"
        }
      },
      {
        "context": "api.IDBKeyRange.lowerOpen",
        "info": {
          "code": "'lowerOpen' in IDBKeyRange.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBKeyRange.only",
        "info": {
          "code": "IDBKeyRange.only"
        },
        "returns": {
          "length": 1,
          "name": "only",
          "type": "function"
        }
      },
      {
        "context": "api.IDBKeyRange.upper",
        "info": {
          "code": "'upper' in IDBKeyRange.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBKeyRange.upperBound",
        "info": {
          "code": "IDBKeyRange.upperBound"
        },
        "returns": {
          "length": 1,
          "name": "upperBound",
          "type": "function"
        }
      },
      {
        "context": "api.IDBKeyRange.upperOpen",
        "info": {
          "code": "'upperOpen' in IDBKeyRange.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBObjectStore",
        "info": {
          "code": "self.IDBObjectStore"
        },
        "returns": {
          "length": 0,
          "name": "IDBObjectStore",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.add",
        "info": {
          "code": "IDBObjectStore.prototype.add"
        },
        "returns": {
          "length": 1,
          "name": "add",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.autoIncrement",
        "info": {
          "code": "'autoIncrement' in IDBObjectStore.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBObjectStore.clear",
        "info": {
          "code": "IDBObjectStore.prototype.clear"
        },
        "returns": {
          "length": 0,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.count",
        "info": {
          "code": "IDBObjectStore.prototype.count"
        },
        "returns": {
          "length": 0,
          "name": "count",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.createIndex",
        "info": {
          "code": "IDBObjectStore.prototype.createIndex"
        },
        "returns": {
          "length": 2,
          "name": "createIndex",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.delete",
        "info": {
          "code": "IDBObjectStore.prototype.delete"
        },
        "returns": {
          "length": 1,
          "name": "delete",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.deleteIndex",
        "info": {
          "code": "IDBObjectStore.prototype.deleteIndex"
        },
        "returns": {
          "length": 1,
          "name": "deleteIndex",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.get",
        "info": {
          "code": "IDBObjectStore.prototype.get"
        },
        "returns": {
          "length": 1,
          "name": "get",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.getAll",
        "info": {
          "code": "IDBObjectStore.prototype.getAll"
        },
        "returns": {
          "length": 0,
          "name": "getAll",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.getAllKeys",
        "info": {
          "code": "IDBObjectStore.prototype.getAllKeys"
        },
        "returns": {
          "length": 0,
          "name": "getAllKeys",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.getKey",
        "info": {
          "code": "IDBObjectStore.prototype.getKey"
        },
        "returns": {
          "length": 1,
          "name": "getKey",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.index",
        "info": {
          "code": "IDBObjectStore.prototype.index"
        },
        "returns": {
          "length": 1,
          "name": "index",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.indexNames",
        "info": {
          "code": "'indexNames' in IDBObjectStore.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBObjectStore.keyPath",
        "info": {
          "code": "'keyPath' in IDBObjectStore.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBObjectStore.name",
        "info": {
          "code": "'name' in IDBObjectStore.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBObjectStore.openCursor",
        "info": {
          "code": "IDBObjectStore.prototype.openCursor"
        },
        "returns": {
          "length": 0,
          "name": "openCursor",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.openKeyCursor",
        "info": {
          "code": "IDBObjectStore.prototype.openKeyCursor"
        },
        "returns": {
          "length": 0,
          "name": "openKeyCursor",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.put",
        "info": {
          "code": "IDBObjectStore.prototype.put"
        },
        "returns": {
          "length": 1,
          "name": "put",
          "type": "function"
        }
      },
      {
        "context": "api.IDBObjectStore.transaction",
        "info": {
          "code": "'transaction' in IDBObjectStore.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBOpenDBRequest",
        "info": {
          "code": "self.IDBOpenDBRequest"
        },
        "returns": {
          "length": 0,
          "name": "IDBOpenDBRequest",
          "type": "function"
        }
      },
      {
        "context": "api.IDBOpenDBRequest.onblocked",
        "info": {
          "code": "'onblocked' in IDBOpenDBRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBOpenDBRequest.onupgradeneeded",
        "info": {
          "code": "'onupgradeneeded' in IDBOpenDBRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBRequest",
        "info": {
          "code": "self.IDBRequest"
        },
        "returns": {
          "length": 0,
          "name": "IDBRequest",
          "type": "function"
        }
      },
      {
        "context": "api.IDBRequest.error",
        "info": {
          "code": "'error' in IDBRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBRequest.onerror",
        "info": {
          "code": "'onerror' in IDBRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBRequest.onsuccess",
        "info": {
          "code": "'onsuccess' in IDBRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBRequest.readyState",
        "info": {
          "code": "'readyState' in IDBRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBRequest.result",
        "info": {
          "code": "'result' in IDBRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBRequest.source",
        "info": {
          "code": "'source' in IDBRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBRequest.transaction",
        "info": {
          "code": "'transaction' in IDBRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBTransaction",
        "info": {
          "code": "self.IDBTransaction"
        },
        "returns": {
          "length": 0,
          "name": "IDBTransaction",
          "type": "function"
        }
      },
      {
        "context": "api.IDBTransaction.abort",
        "info": {
          "code": "IDBTransaction.prototype.abort"
        },
        "returns": {
          "length": 0,
          "name": "abort",
          "type": "function"
        }
      },
      {
        "context": "api.IDBTransaction.commit",
        "info": {
          "code": "IDBTransaction.prototype.commit"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.IDBTransaction.db",
        "info": {
          "code": "'db' in IDBTransaction.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBTransaction.error",
        "info": {
          "code": "'error' in IDBTransaction.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBTransaction.mode",
        "info": {
          "code": "'mode' in IDBTransaction.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBTransaction.objectStore",
        "info": {
          "code": "IDBTransaction.prototype.objectStore"
        },
        "returns": {
          "length": 1,
          "name": "objectStore",
          "type": "function"
        }
      },
      {
        "context": "api.IDBTransaction.objectStoreNames",
        "info": {
          "code": "'objectStoreNames' in IDBTransaction.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBTransaction.onabort",
        "info": {
          "code": "'onabort' in IDBTransaction.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBTransaction.oncomplete",
        "info": {
          "code": "'oncomplete' in IDBTransaction.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBTransaction.onerror",
        "info": {
          "code": "'onerror' in IDBTransaction.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBVersionChangeEvent",
        "info": {
          "code": "self.IDBVersionChangeEvent"
        },
        "returns": {
          "length": 1,
          "name": "IDBVersionChangeEvent",
          "type": "function"
        }
      },
      {
        "context": "api.IDBVersionChangeEvent.newVersion",
        "info": {
          "code": "'newVersion' in IDBVersionChangeEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IDBVersionChangeEvent.oldVersion",
        "info": {
          "code": "'oldVersion' in IDBVersionChangeEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IdleDeadline",
        "info": {
          "code": "self.IdleDeadline"
        },
        "returns": {
          "length": 0,
          "name": "IdleDeadline",
          "type": "function"
        }
      },
      {
        "context": "api.IdleDeadline.didTimeout",
        "info": {
          "code": "'didTimeout' in IdleDeadline.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IdleDeadline.timeRemaining",
        "info": {
          "code": "IdleDeadline.prototype.timeRemaining"
        },
        "returns": {
          "length": 0,
          "name": "timeRemaining",
          "type": "function"
        }
      },
      {
        "context": "api.IIRFilterNode",
        "info": {
          "code": "self.IIRFilterNode"
        },
        "returns": {
          "length": 2,
          "name": "IIRFilterNode",
          "type": "function"
        }
      },
      {
        "context": "api.IIRFilterNode.getFrequencyResponse",
        "info": {
          "code": "IIRFilterNode.prototype.getFrequencyResponse"
        },
        "returns": {
          "length": 3,
          "name": "getFrequencyResponse",
          "type": "function"
        }
      },
      {
        "context": "api.ImageBitmap",
        "info": {
          "code": "self.ImageBitmap"
        },
        "returns": {
          "length": 0,
          "name": "ImageBitmap",
          "type": "function"
        }
      },
      {
        "context": "api.ImageBitmap.close",
        "info": {
          "code": "ImageBitmap.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.ImageBitmap.height",
        "info": {
          "code": "'height' in ImageBitmap.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ImageBitmap.width",
        "info": {
          "code": "'width' in ImageBitmap.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ImageBitmapRenderingContext",
        "info": {
          "code": "self.ImageBitmapRenderingContext"
        },
        "returns": {
          "length": 0,
          "name": "ImageBitmapRenderingContext",
          "type": "function"
        }
      },
      {
        "context": "api.ImageBitmapRenderingContext.canvas",
        "info": {
          "code": "'canvas' in ImageBitmapRenderingContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.ImageBitmapRenderingContext.transferFromImageBitmap",
        "info": {
          "code": "ImageBitmapRenderingContext.prototype.transferFromImageBitmap"
        },
        "returns": {
          "length": 1,
          "name": "transferFromImageBitmap",
          "type": "function"
        }
      },
      {
        "context": "api.ImageCapture",
        "info": {
          "code": "self.ImageCapture"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ImageCapture.getPhotoCapabilities",
        "info": {
          "code": "ImageCapture.prototype.getPhotoCapabilities"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ImageCapture.getPhotoSettings",
        "info": {
          "code": "ImageCapture.prototype.getPhotoSettings"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ImageCapture.grabFrame",
        "info": {
          "code": "ImageCapture.prototype.grabFrame"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ImageCapture.takePhoto",
        "info": {
          "code": "ImageCapture.prototype.takePhoto"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ImageCapture.track",
        "info": {
          "code": "'track' in ImageCapture.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ImageData",
        "info": {
          "code": "self.ImageData"
        },
        "returns": {
          "length": 2,
          "name": "ImageData",
          "type": "function"
        }
      },
      {
        "context": "api.ImageData.data",
        "info": {
          "code": "'data' in ImageData.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ImageData.height",
        "info": {
          "code": "'height' in ImageData.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ImageData.width",
        "info": {
          "code": "'width' in ImageData.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.InputDeviceCapabilities",
        "info": {
          "code": "self.InputDeviceCapabilities"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.InputDeviceCapabilities.firesTouchEvents",
        "info": {
          "code": "'firesTouchEvents' in InputDeviceCapabilities.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.InputDeviceCapabilities.pointerMovementScrolls",
        "info": {
          "code": "'pointerMovementScrolls' in InputDeviceCapabilities.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.InputDeviceInfo",
        "info": {
          "code": "self.InputDeviceInfo"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.InputDeviceInfo.getCapabilities",
        "info": {
          "code": "InputDeviceInfo.prototype.getCapabilities"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.InputEvent",
        "info": {
          "code": "self.InputEvent"
        },
        "returns": {
          "length": 1,
          "name": "InputEvent",
          "type": "function"
        }
      },
      {
        "context": "api.InputEvent.data",
        "info": {
          "code": "'data' in InputEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.InputEvent.dataTransfer",
        "info": {
          "code": "'dataTransfer' in InputEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.InputEvent.getTargetRanges",
        "info": {
          "code": "InputEvent.prototype.getTargetRanges"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.InputEvent.inputType",
        "info": {
          "code": "'inputType' in InputEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.InputEvent.isComposing",
        "info": {
          "code": "'isComposing' in InputEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Instance",
        "info": {
          "code": "self.Instance"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Instance.exports",
        "info": {
          "code": "'exports' in Instance.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.IntersectionObserver",
        "info": {
          "code": "self.IntersectionObserver"
        },
        "returns": {
          "length": 1,
          "name": "IntersectionObserver",
          "type": "function"
        }
      },
      {
        "context": "api.IntersectionObserver.disconnect",
        "info": {
          "code": "IntersectionObserver.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.IntersectionObserver.observe",
        "info": {
          "code": "IntersectionObserver.prototype.observe"
        },
        "returns": {
          "length": 1,
          "name": "observe",
          "type": "function"
        }
      },
      {
        "context": "api.IntersectionObserver.root",
        "info": {
          "code": "'root' in IntersectionObserver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IntersectionObserver.rootMargin",
        "info": {
          "code": "'rootMargin' in IntersectionObserver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IntersectionObserver.takeRecords",
        "info": {
          "code": "IntersectionObserver.prototype.takeRecords"
        },
        "returns": {
          "length": 0,
          "name": "takeRecords",
          "type": "function"
        }
      },
      {
        "context": "api.IntersectionObserver.thresholds",
        "info": {
          "code": "'thresholds' in IntersectionObserver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IntersectionObserver.unobserve",
        "info": {
          "code": "IntersectionObserver.prototype.unobserve"
        },
        "returns": {
          "length": 1,
          "name": "unobserve",
          "type": "function"
        }
      },
      {
        "context": "api.IntersectionObserverEntry",
        "info": {
          "code": "self.IntersectionObserverEntry"
        },
        "returns": {
          "length": 0,
          "name": "IntersectionObserverEntry",
          "type": "function"
        }
      },
      {
        "context": "api.IntersectionObserverEntry.boundingClientRect",
        "info": {
          "code": "'boundingClientRect' in IntersectionObserverEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IntersectionObserverEntry.intersectionRatio",
        "info": {
          "code": "'intersectionRatio' in IntersectionObserverEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IntersectionObserverEntry.intersectionRect",
        "info": {
          "code": "'intersectionRect' in IntersectionObserverEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IntersectionObserverEntry.isIntersecting",
        "info": {
          "code": "'isIntersecting' in IntersectionObserverEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IntersectionObserverEntry.rootBounds",
        "info": {
          "code": "'rootBounds' in IntersectionObserverEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IntersectionObserverEntry.target",
        "info": {
          "code": "'target' in IntersectionObserverEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.IntersectionObserverEntry.time",
        "info": {
          "code": "'time' in IntersectionObserverEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.InterventionReportBody",
        "info": {
          "code": "self.InterventionReportBody"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.InterventionReportBody.columnNumber",
        "info": {
          "code": "'columnNumber' in InterventionReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.InterventionReportBody.id",
        "info": {
          "code": "'id' in InterventionReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.InterventionReportBody.lineNumber",
        "info": {
          "code": "'lineNumber' in InterventionReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.InterventionReportBody.message",
        "info": {
          "code": "'message' in InterventionReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.InterventionReportBody.sourceFile",
        "info": {
          "code": "'sourceFile' in InterventionReportBody.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.IntrinsicSizes",
        "info": {
          "code": "self.IntrinsicSizes"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.IntrinsicSizes.maxContentSize",
        "info": {
          "code": "'maxContentSize' in IntrinsicSizes.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.IntrinsicSizes.minContentSize",
        "info": {
          "code": "'minContentSize' in IntrinsicSizes.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Keyboard",
        "info": {
          "code": "self.Keyboard"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Keyboard.getLayoutMap",
        "info": {
          "code": "Keyboard.prototype.getLayoutMap"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Keyboard.lock",
        "info": {
          "code": "Keyboard.prototype.lock"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Keyboard.unlock",
        "info": {
          "code": "Keyboard.prototype.unlock"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.KeyboardEvent",
        "info": {
          "code": "self.KeyboardEvent"
        },
        "returns": {
          "length": 1,
          "name": "KeyboardEvent",
          "type": "function"
        }
      },
      {
        "context": "api.KeyboardEvent.altKey",
        "info": {
          "code": "'altKey' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.charCode",
        "info": {
          "code": "'charCode' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.code",
        "info": {
          "code": "'code' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.ctrlKey",
        "info": {
          "code": "'ctrlKey' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.DOM_KEY_LOCATION_LEFT",
        "info": {
          "code": "KeyboardEvent.DOM_KEY_LOCATION_LEFT"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD",
        "info": {
          "code": "KeyboardEvent.DOM_KEY_LOCATION_NUMPAD"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.KeyboardEvent.DOM_KEY_LOCATION_RIGHT",
        "info": {
          "code": "KeyboardEvent.DOM_KEY_LOCATION_RIGHT"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.KeyboardEvent.DOM_KEY_LOCATION_STANDARD",
        "info": {
          "code": "KeyboardEvent.DOM_KEY_LOCATION_STANDARD"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.KeyboardEvent.getModifierState",
        "info": {
          "code": "KeyboardEvent.prototype.getModifierState"
        },
        "returns": {
          "length": 1,
          "name": "getModifierState",
          "type": "function"
        }
      },
      {
        "context": "api.KeyboardEvent.isComposing",
        "info": {
          "code": "'isComposing' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.key",
        "info": {
          "code": "'key' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.keyCode",
        "info": {
          "code": "'keyCode' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.location",
        "info": {
          "code": "'location' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.metaKey",
        "info": {
          "code": "'metaKey' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.repeat",
        "info": {
          "code": "'repeat' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardEvent.shiftKey",
        "info": {
          "code": "'shiftKey' in KeyboardEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.KeyboardLayoutMap",
        "info": {
          "code": "self.KeyboardLayoutMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.KeyframeEffect",
        "info": {
          "code": "self.KeyframeEffect"
        },
        "returns": {
          "length": 1,
          "name": "KeyframeEffect",
          "type": "function"
        }
      },
      {
        "context": "api.KeyframeEffect.composite",
        "info": {
          "code": "'composite' in KeyframeEffect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.KeyframeEffect.getKeyframes",
        "info": {
          "code": "KeyframeEffect.prototype.getKeyframes"
        },
        "returns": {
          "length": 0,
          "name": "getKeyframes",
          "type": "function"
        }
      },
      {
        "context": "api.KeyframeEffect.iterationComposite",
        "info": {
          "code": "'iterationComposite' in KeyframeEffect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.KeyframeEffect.setKeyframes",
        "info": {
          "code": "KeyframeEffect.prototype.setKeyframes"
        },
        "returns": {
          "length": 1,
          "name": "setKeyframes",
          "type": "function"
        }
      },
      {
        "context": "api.KeyframeEffect.target",
        "info": {
          "code": "'target' in KeyframeEffect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.LayoutChild",
        "info": {
          "code": "self.LayoutChild"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.LayoutChild.intrinsicSizes",
        "info": {
          "code": "LayoutChild.prototype.intrinsicSizes"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutChild.layoutNextFragment",
        "info": {
          "code": "LayoutChild.prototype.layoutNextFragment"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutChild.styleMap",
        "info": {
          "code": "'styleMap' in LayoutChild.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutConstraints",
        "info": {
          "code": "self.LayoutConstraints"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.LayoutConstraints.availableBlockSize",
        "info": {
          "code": "'availableBlockSize' in LayoutConstraints.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutConstraints.availableInlineSize",
        "info": {
          "code": "'availableInlineSize' in LayoutConstraints.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutConstraints.blockFragmentationOffset",
        "info": {
          "code": "'blockFragmentationOffset' in LayoutConstraints.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutConstraints.blockFragmentationType",
        "info": {
          "code": "'blockFragmentationType' in LayoutConstraints.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutConstraints.data",
        "info": {
          "code": "'data' in LayoutConstraints.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutConstraints.fixedBlockSize",
        "info": {
          "code": "'fixedBlockSize' in LayoutConstraints.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutConstraints.fixedInlineSize",
        "info": {
          "code": "'fixedInlineSize' in LayoutConstraints.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutConstraints.percentageBlockSize",
        "info": {
          "code": "'percentageBlockSize' in LayoutConstraints.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutConstraints.percentageInlineSize",
        "info": {
          "code": "'percentageInlineSize' in LayoutConstraints.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutEdges",
        "info": {
          "code": "self.LayoutEdges"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.LayoutEdges.block",
        "info": {
          "code": "'block' in LayoutEdges.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutEdges.blockEnd",
        "info": {
          "code": "'blockEnd' in LayoutEdges.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutEdges.blockStart",
        "info": {
          "code": "'blockStart' in LayoutEdges.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutEdges.inline",
        "info": {
          "code": "'inline' in LayoutEdges.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutEdges.inlineEnd",
        "info": {
          "code": "'inlineEnd' in LayoutEdges.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutEdges.inlineStart",
        "info": {
          "code": "'inlineStart' in LayoutEdges.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutFragment",
        "info": {
          "code": "self.LayoutFragment"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.LayoutFragment.blockOffset",
        "info": {
          "code": "'blockOffset' in LayoutFragment.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutFragment.blockSize",
        "info": {
          "code": "'blockSize' in LayoutFragment.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutFragment.breakToken",
        "info": {
          "code": "'breakToken' in LayoutFragment.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutFragment.data",
        "info": {
          "code": "'data' in LayoutFragment.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutFragment.inlineOffset",
        "info": {
          "code": "'inlineOffset' in LayoutFragment.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutFragment.inlineSize",
        "info": {
          "code": "'inlineSize' in LayoutFragment.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LayoutWorkletGlobalScope",
        "info": {
          "code": "self.LayoutWorkletGlobalScope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.LayoutWorkletGlobalScope.registerLayout",
        "info": {
          "code": "LayoutWorkletGlobalScope.prototype.registerLayout"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.LinearAccelerationSensor",
        "info": {
          "code": "self.LinearAccelerationSensor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.LinkError",
        "info": {
          "code": "self.LinkError"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Location",
        "info": {
          "code": "self.Location"
        },
        "returns": {
          "length": 0,
          "name": "Location",
          "type": "function"
        }
      },
      {
        "context": "api.Location.ancestorOrigins",
        "info": {
          "code": "'ancestorOrigins' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Location.assign",
        "info": {
          "code": "Location.prototype.assign"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Location.hash",
        "info": {
          "code": "'hash' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Location.host",
        "info": {
          "code": "'host' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Location.hostname",
        "info": {
          "code": "'hostname' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Location.href",
        "info": {
          "code": "'href' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Location.origin",
        "info": {
          "code": "'origin' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Location.pathname",
        "info": {
          "code": "'pathname' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Location.port",
        "info": {
          "code": "'port' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Location.protocol",
        "info": {
          "code": "'protocol' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Location.reload",
        "info": {
          "code": "Location.prototype.reload"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Location.replace",
        "info": {
          "code": "Location.prototype.replace"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Location.search",
        "info": {
          "code": "'search' in Location.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Magnetometer",
        "info": {
          "code": "self.Magnetometer"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Magnetometer.x",
        "info": {
          "code": "'x' in Magnetometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Magnetometer.y",
        "info": {
          "code": "'y' in Magnetometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Magnetometer.z",
        "info": {
          "code": "'z' in Magnetometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaCapabilities",
        "info": {
          "code": "self.MediaCapabilities"
        },
        "returns": {
          "length": 0,
          "name": "MediaCapabilities",
          "type": "function"
        }
      },
      {
        "context": "api.MediaCapabilities.decodingInfo",
        "info": {
          "code": "MediaCapabilities.prototype.decodingInfo"
        },
        "returns": {
          "length": 1,
          "name": "decodingInfo",
          "type": "function"
        }
      },
      {
        "context": "api.MediaCapabilities.encodingInfo",
        "info": {
          "code": "MediaCapabilities.prototype.encodingInfo"
        },
        "returns": {
          "length": 1,
          "name": "encodingInfo",
          "type": "function"
        }
      },
      {
        "context": "api.MediaDeviceInfo",
        "info": {
          "code": "self.MediaDeviceInfo"
        },
        "returns": {
          "length": 0,
          "name": "MediaDeviceInfo",
          "type": "function"
        }
      },
      {
        "context": "api.MediaDeviceInfo.deviceId",
        "info": {
          "code": "'deviceId' in MediaDeviceInfo.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaDeviceInfo.groupId",
        "info": {
          "code": "'groupId' in MediaDeviceInfo.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaDeviceInfo.kind",
        "info": {
          "code": "'kind' in MediaDeviceInfo.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaDeviceInfo.label",
        "info": {
          "code": "'label' in MediaDeviceInfo.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaDeviceInfo.toJSON",
        "info": {
          "code": "MediaDeviceInfo.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.MediaDevices",
        "info": {
          "code": "self.MediaDevices"
        },
        "returns": {
          "length": 0,
          "name": "MediaDevices",
          "type": "function"
        }
      },
      {
        "context": "api.MediaDevices.enumerateDevices",
        "info": {
          "code": "MediaDevices.prototype.enumerateDevices"
        },
        "returns": {
          "length": 0,
          "name": "enumerateDevices",
          "type": "function"
        }
      },
      {
        "context": "api.MediaDevices.getDisplayMedia",
        "info": {
          "code": "MediaDevices.prototype.getDisplayMedia"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MediaDevices.getSupportedConstraints",
        "info": {
          "code": "MediaDevices.prototype.getSupportedConstraints"
        },
        "returns": {
          "length": 0,
          "name": "getSupportedConstraints",
          "type": "function"
        }
      },
      {
        "context": "api.MediaDevices.getUserMedia",
        "info": {
          "code": "MediaDevices.prototype.getUserMedia"
        },
        "returns": {
          "length": 0,
          "name": "getUserMedia",
          "type": "function"
        }
      },
      {
        "context": "api.MediaDevices.ondevicechange",
        "info": {
          "code": "'ondevicechange' in MediaDevices.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaElementAudioSourceNode",
        "info": {
          "code": "self.MediaElementAudioSourceNode"
        },
        "returns": {
          "length": 2,
          "name": "MediaElementAudioSourceNode",
          "type": "function"
        }
      },
      {
        "context": "api.MediaElementAudioSourceNode.mediaElement",
        "info": {
          "code": "'mediaElement' in MediaElementAudioSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.MediaEncryptedEvent",
        "info": {
          "code": "self.MediaEncryptedEvent"
        },
        "returns": {
          "length": 1,
          "name": "MediaEncryptedEvent",
          "type": "function"
        }
      },
      {
        "context": "api.MediaEncryptedEvent.initData",
        "info": {
          "code": "'initData' in MediaEncryptedEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaEncryptedEvent.initDataType",
        "info": {
          "code": "'initDataType' in MediaEncryptedEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaError",
        "info": {
          "code": "self.MediaError"
        },
        "returns": {
          "length": 0,
          "name": "MediaError",
          "type": "function"
        }
      },
      {
        "context": "api.MediaError.code",
        "info": {
          "code": "'code' in MediaError.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaError.MEDIA_ERR_ABORTED",
        "info": {
          "code": "MediaError.MEDIA_ERR_ABORTED"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.MediaError.MEDIA_ERR_DECODE",
        "info": {
          "code": "MediaError.MEDIA_ERR_DECODE"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.MediaError.MEDIA_ERR_NETWORK",
        "info": {
          "code": "MediaError.MEDIA_ERR_NETWORK"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED",
        "info": {
          "code": "MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.MediaError.message",
        "info": {
          "code": "'message' in MediaError.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeyMessageEvent",
        "info": {
          "code": "self.MediaKeyMessageEvent"
        },
        "returns": {
          "length": 2,
          "name": "MediaKeyMessageEvent",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeyMessageEvent.message",
        "info": {
          "code": "'message' in MediaKeyMessageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeyMessageEvent.messageType",
        "info": {
          "code": "'messageType' in MediaKeyMessageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeys",
        "info": {
          "code": "self.MediaKeys"
        },
        "returns": {
          "length": 0,
          "name": "MediaKeys",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeys.createSession",
        "info": {
          "code": "MediaKeys.prototype.createSession"
        },
        "returns": {
          "length": 0,
          "name": "createSession",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeys.setServerCertificate",
        "info": {
          "code": "MediaKeys.prototype.setServerCertificate"
        },
        "returns": {
          "length": 1,
          "name": "setServerCertificate",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeySession",
        "info": {
          "code": "self.MediaKeySession"
        },
        "returns": {
          "length": 0,
          "name": "MediaKeySession",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeySession.close",
        "info": {
          "code": "MediaKeySession.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeySession.closed",
        "info": {
          "code": "'closed' in MediaKeySession.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeySession.expiration",
        "info": {
          "code": "'expiration' in MediaKeySession.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeySession.generateRequest",
        "info": {
          "code": "MediaKeySession.prototype.generateRequest"
        },
        "returns": {
          "length": 2,
          "name": "generateRequest",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeySession.keyStatuses",
        "info": {
          "code": "'keyStatuses' in MediaKeySession.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeySession.load",
        "info": {
          "code": "MediaKeySession.prototype.load"
        },
        "returns": {
          "length": 1,
          "name": "load",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeySession.onkeystatuseschange",
        "info": {
          "code": "'onkeystatuseschange' in MediaKeySession.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeySession.onmessage",
        "info": {
          "code": "'onmessage' in MediaKeySession.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeySession.remove",
        "info": {
          "code": "MediaKeySession.prototype.remove"
        },
        "returns": {
          "length": 0,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeySession.sessionId",
        "info": {
          "code": "'sessionId' in MediaKeySession.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeySession.update",
        "info": {
          "code": "MediaKeySession.prototype.update"
        },
        "returns": {
          "length": 1,
          "name": "update",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeyStatusMap",
        "info": {
          "code": "self.MediaKeyStatusMap"
        },
        "returns": {
          "length": 0,
          "name": "MediaKeyStatusMap",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeyStatusMap.get",
        "info": {
          "code": "MediaKeyStatusMap.prototype.get"
        },
        "returns": {
          "length": 1,
          "name": "get",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeyStatusMap.has",
        "info": {
          "code": "MediaKeyStatusMap.prototype.has"
        },
        "returns": {
          "length": 1,
          "name": "has",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeyStatusMap.size",
        "info": {
          "code": "'size' in MediaKeyStatusMap.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaKeySystemAccess",
        "info": {
          "code": "self.MediaKeySystemAccess"
        },
        "returns": {
          "length": 0,
          "name": "MediaKeySystemAccess",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeySystemAccess.createMediaKeys",
        "info": {
          "code": "MediaKeySystemAccess.prototype.createMediaKeys"
        },
        "returns": {
          "length": 0,
          "name": "createMediaKeys",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeySystemAccess.getConfiguration",
        "info": {
          "code": "MediaKeySystemAccess.prototype.getConfiguration"
        },
        "returns": {
          "length": 0,
          "name": "getConfiguration",
          "type": "function"
        }
      },
      {
        "context": "api.MediaKeySystemAccess.keySystem",
        "info": {
          "code": "'keySystem' in MediaKeySystemAccess.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaList",
        "info": {
          "code": "self.MediaList"
        },
        "returns": {
          "length": 0,
          "name": "MediaList",
          "type": "function"
        }
      },
      {
        "context": "api.MediaList.appendMedium",
        "info": {
          "code": "MediaList.prototype.appendMedium"
        },
        "returns": {
          "length": 1,
          "name": "appendMedium",
          "type": "function"
        }
      },
      {
        "context": "api.MediaList.deleteMedium",
        "info": {
          "code": "MediaList.prototype.deleteMedium"
        },
        "returns": {
          "length": 1,
          "name": "deleteMedium",
          "type": "function"
        }
      },
      {
        "context": "api.MediaList.item",
        "info": {
          "code": "MediaList.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.MediaList.length",
        "info": {
          "code": "'length' in MediaList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaList.mediaText",
        "info": {
          "code": "'mediaText' in MediaList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaMetadata",
        "info": {
          "code": "self.MediaMetadata"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MediaMetadata.album",
        "info": {
          "code": "'album' in MediaMetadata.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaMetadata.artist",
        "info": {
          "code": "'artist' in MediaMetadata.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaMetadata.artwork",
        "info": {
          "code": "'artwork' in MediaMetadata.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaMetadata.title",
        "info": {
          "code": "'title' in MediaMetadata.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaQueryList",
        "info": {
          "code": "self.MediaQueryList"
        },
        "returns": {
          "length": 0,
          "name": "MediaQueryList",
          "type": "function"
        }
      },
      {
        "context": "api.MediaQueryList.addListener",
        "info": {
          "code": "MediaQueryList.prototype.addListener"
        },
        "returns": {
          "length": 1,
          "name": "addListener",
          "type": "function"
        }
      },
      {
        "context": "api.MediaQueryList.matches",
        "info": {
          "code": "'matches' in MediaQueryList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaQueryList.media",
        "info": {
          "code": "'media' in MediaQueryList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaQueryList.onchange",
        "info": {
          "code": "'onchange' in MediaQueryList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaQueryList.removeListener",
        "info": {
          "code": "MediaQueryList.prototype.removeListener"
        },
        "returns": {
          "length": 1,
          "name": "removeListener",
          "type": "function"
        }
      },
      {
        "context": "api.MediaQueryListEvent",
        "info": {
          "code": "self.MediaQueryListEvent"
        },
        "returns": {
          "length": 1,
          "name": "MediaQueryListEvent",
          "type": "function"
        }
      },
      {
        "context": "api.MediaQueryListEvent.matches",
        "info": {
          "code": "'matches' in MediaQueryListEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaQueryListEvent.media",
        "info": {
          "code": "'media' in MediaQueryListEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder",
        "info": {
          "code": "self.MediaRecorder"
        },
        "returns": {
          "length": 1,
          "name": "MediaRecorder",
          "type": "function"
        }
      },
      {
        "context": "api.MediaRecorder.audioBitsPerSecond",
        "info": {
          "code": "'audioBitsPerSecond' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.MediaRecorder.isTypeSupported",
        "info": {
          "code": "MediaRecorder.isTypeSupported"
        },
        "returns": {
          "length": 1,
          "name": "isTypeSupported",
          "type": "function"
        }
      },
      {
        "context": "api.MediaRecorder.mimeType",
        "info": {
          "code": "'mimeType' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder.ondataavailable",
        "info": {
          "code": "'ondataavailable' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder.onerror",
        "info": {
          "code": "'onerror' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder.onpause",
        "info": {
          "code": "'onpause' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder.onresume",
        "info": {
          "code": "'onresume' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder.onstart",
        "info": {
          "code": "'onstart' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder.onstop",
        "info": {
          "code": "'onstop' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder.pause",
        "info": {
          "code": "MediaRecorder.prototype.pause"
        },
        "returns": {
          "length": 0,
          "name": "pause",
          "type": "function"
        }
      },
      {
        "context": "api.MediaRecorder.requestData",
        "info": {
          "code": "MediaRecorder.prototype.requestData"
        },
        "returns": {
          "length": 0,
          "name": "requestData",
          "type": "function"
        }
      },
      {
        "context": "api.MediaRecorder.resume",
        "info": {
          "code": "MediaRecorder.prototype.resume"
        },
        "returns": {
          "length": 0,
          "name": "resume",
          "type": "function"
        }
      },
      {
        "context": "api.MediaRecorder.start",
        "info": {
          "code": "MediaRecorder.prototype.start"
        },
        "returns": {
          "length": 0,
          "name": "start",
          "type": "function"
        }
      },
      {
        "context": "api.MediaRecorder.state",
        "info": {
          "code": "'state' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder.stop",
        "info": {
          "code": "MediaRecorder.prototype.stop"
        },
        "returns": {
          "length": 0,
          "name": "stop",
          "type": "function"
        }
      },
      {
        "context": "api.MediaRecorder.stream",
        "info": {
          "code": "'stream' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaRecorder.videoBitsPerSecond",
        "info": {
          "code": "'videoBitsPerSecond' in MediaRecorder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.MediaRecorderErrorEvent",
        "info": {
          "code": "self.MediaRecorderErrorEvent"
        },
        "returns": {
          "length": 2,
          "name": "MediaRecorderErrorEvent",
          "type": "function"
        }
      },
      {
        "context": "api.MediaRecorderErrorEvent.error",
        "info": {
          "code": "'error' in MediaRecorderErrorEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaSession",
        "info": {
          "code": "self.MediaSession"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MediaSession.metadata",
        "info": {
          "code": "'metadata' in MediaSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaSession.playbackState",
        "info": {
          "code": "'playbackState' in MediaSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaSession.setActionHandler",
        "info": {
          "code": "MediaSession.prototype.setActionHandler"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaSettingsRange",
        "info": {
          "code": "self.MediaSettingsRange"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MediaSettingsRange.max",
        "info": {
          "code": "'max' in MediaSettingsRange.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaSettingsRange.min",
        "info": {
          "code": "'min' in MediaSettingsRange.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaSettingsRange.step",
        "info": {
          "code": "'step' in MediaSettingsRange.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MediaSource",
        "info": {
          "code": "self.MediaSource"
        },
        "returns": {
          "length": 0,
          "name": "MediaSource",
          "type": "function"
        }
      },
      {
        "context": "api.MediaSource.activeSourceBuffers",
        "info": {
          "code": "'activeSourceBuffers' in MediaSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaSource.addSourceBuffer",
        "info": {
          "code": "MediaSource.prototype.addSourceBuffer"
        },
        "returns": {
          "length": 1,
          "name": "addSourceBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.MediaSource.clearLiveSeekableRange",
        "info": {
          "code": "MediaSource.prototype.clearLiveSeekableRange"
        },
        "returns": {
          "length": 0,
          "name": "clearLiveSeekableRange",
          "type": "function"
        }
      },
      {
        "context": "api.MediaSource.duration",
        "info": {
          "code": "'duration' in MediaSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaSource.endOfStream",
        "info": {
          "code": "MediaSource.prototype.endOfStream"
        },
        "returns": {
          "length": 0,
          "name": "endOfStream",
          "type": "function"
        }
      },
      {
        "context": "api.MediaSource.isTypeSupported",
        "info": {
          "code": "MediaSource.isTypeSupported"
        },
        "returns": {
          "length": 1,
          "name": "isTypeSupported",
          "type": "function"
        }
      },
      {
        "context": "api.MediaSource.onsourceclose",
        "info": {
          "code": "'onsourceclose' in MediaSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.MediaSource.onsourceended",
        "info": {
          "code": "'onsourceended' in MediaSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaSource.onsourceopen",
        "info": {
          "code": "'onsourceopen' in MediaSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaSource.readyState",
        "info": {
          "code": "'readyState' in MediaSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaSource.removeSourceBuffer",
        "info": {
          "code": "MediaSource.prototype.removeSourceBuffer"
        },
        "returns": {
          "length": 1,
          "name": "removeSourceBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.MediaSource.setLiveSeekableRange",
        "info": {
          "code": "MediaSource.prototype.setLiveSeekableRange"
        },
        "returns": {
          "length": 2,
          "name": "setLiveSeekableRange",
          "type": "function"
        }
      },
      {
        "context": "api.MediaSource.sourceBuffers",
        "info": {
          "code": "'sourceBuffers' in MediaSource.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStream",
        "info": {
          "code": "self.MediaStream"
        },
        "returns": {
          "length": 0,
          "name": "MediaStream",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStream.active",
        "info": {
          "code": "'active' in MediaStream.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStream.addTrack",
        "info": {
          "code": "MediaStream.prototype.addTrack"
        },
        "returns": {
          "length": 1,
          "name": "addTrack",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStream.clone",
        "info": {
          "code": "MediaStream.prototype.clone"
        },
        "returns": {
          "length": 0,
          "name": "clone",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStream.getAudioTracks",
        "info": {
          "code": "MediaStream.prototype.getAudioTracks"
        },
        "returns": {
          "length": 0,
          "name": "getAudioTracks",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStream.getTrackById",
        "info": {
          "code": "MediaStream.prototype.getTrackById"
        },
        "returns": {
          "length": 1,
          "name": "getTrackById",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStream.getTracks",
        "info": {
          "code": "MediaStream.prototype.getTracks"
        },
        "returns": {
          "length": 0,
          "name": "getTracks",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStream.getVideoTracks",
        "info": {
          "code": "MediaStream.prototype.getVideoTracks"
        },
        "returns": {
          "length": 0,
          "name": "getVideoTracks",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStream.id",
        "info": {
          "code": "'id' in MediaStream.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStream.onaddtrack",
        "info": {
          "code": "'onaddtrack' in MediaStream.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStream.onremovetrack",
        "info": {
          "code": "'onremovetrack' in MediaStream.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStream.removeTrack",
        "info": {
          "code": "MediaStream.prototype.removeTrack"
        },
        "returns": {
          "length": 1,
          "name": "removeTrack",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamAudioDestinationNode",
        "info": {
          "code": "self.MediaStreamAudioDestinationNode"
        },
        "returns": {
          "length": 1,
          "name": "MediaStreamAudioDestinationNode",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamAudioDestinationNode.stream",
        "info": {
          "code": "'stream' in MediaStreamAudioDestinationNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamAudioSourceNode",
        "info": {
          "code": "self.MediaStreamAudioSourceNode"
        },
        "returns": {
          "length": 2,
          "name": "MediaStreamAudioSourceNode",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamAudioSourceNode.mediaStream",
        "info": {
          "code": "'mediaStream' in MediaStreamAudioSourceNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.MediaStreamTrack",
        "info": {
          "code": "self.MediaStreamTrack"
        },
        "returns": {
          "length": 0,
          "name": "MediaStreamTrack",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamTrack.applyConstraints",
        "info": {
          "code": "MediaStreamTrack.prototype.applyConstraints"
        },
        "returns": {
          "length": 0,
          "name": "applyConstraints",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamTrack.clone",
        "info": {
          "code": "MediaStreamTrack.prototype.clone"
        },
        "returns": {
          "length": 0,
          "name": "clone",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamTrack.contentHint",
        "info": {
          "code": "'contentHint' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.MediaStreamTrack.enabled",
        "info": {
          "code": "'enabled' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamTrack.getCapabilities",
        "info": {
          "code": "MediaStreamTrack.prototype.getCapabilities"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MediaStreamTrack.getConstraints",
        "info": {
          "code": "MediaStreamTrack.prototype.getConstraints"
        },
        "returns": {
          "length": 0,
          "name": "getConstraints",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamTrack.getSettings",
        "info": {
          "code": "MediaStreamTrack.prototype.getSettings"
        },
        "returns": {
          "length": 0,
          "name": "getSettings",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamTrack.id",
        "info": {
          "code": "'id' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamTrack.kind",
        "info": {
          "code": "'kind' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamTrack.label",
        "info": {
          "code": "'label' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamTrack.muted",
        "info": {
          "code": "'muted' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamTrack.onended",
        "info": {
          "code": "'onended' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamTrack.onmute",
        "info": {
          "code": "'onmute' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamTrack.onoverconstrained",
        "info": {
          "code": "'onoverconstrained' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.MediaStreamTrack.onunmute",
        "info": {
          "code": "'onunmute' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamTrack.readyState",
        "info": {
          "code": "'readyState' in MediaStreamTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MediaStreamTrack.stop",
        "info": {
          "code": "MediaStreamTrack.prototype.stop"
        },
        "returns": {
          "length": 0,
          "name": "stop",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamTrackAudioSourceNode",
        "info": {
          "code": "self.MediaStreamTrackAudioSourceNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MediaStreamTrackEvent",
        "info": {
          "code": "self.MediaStreamTrackEvent"
        },
        "returns": {
          "length": 2,
          "name": "MediaStreamTrackEvent",
          "type": "function"
        }
      },
      {
        "context": "api.MediaStreamTrackEvent.track",
        "info": {
          "code": "'track' in MediaStreamTrackEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Memory",
        "info": {
          "code": "self.Memory"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Memory.buffer",
        "info": {
          "code": "'buffer' in Memory.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Memory.grow",
        "info": {
          "code": "Memory.prototype.grow"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MerchantValidationEvent",
        "info": {
          "code": "self.MerchantValidationEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MerchantValidationEvent.complete",
        "info": {
          "code": "MerchantValidationEvent.prototype.complete"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MerchantValidationEvent.methodName",
        "info": {
          "code": "'methodName' in MerchantValidationEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MerchantValidationEvent.validationURL",
        "info": {
          "code": "'validationURL' in MerchantValidationEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MessageChannel",
        "info": {
          "code": "self.MessageChannel"
        },
        "returns": {
          "length": 0,
          "name": "MessageChannel",
          "type": "function"
        }
      },
      {
        "context": "api.MessageChannel.port1",
        "info": {
          "code": "'port1' in MessageChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MessageChannel.port2",
        "info": {
          "code": "'port2' in MessageChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MessageEvent",
        "info": {
          "code": "self.MessageEvent"
        },
        "returns": {
          "length": 1,
          "name": "MessageEvent",
          "type": "function"
        }
      },
      {
        "context": "api.MessageEvent.data",
        "info": {
          "code": "'data' in MessageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MessageEvent.initMessageEvent",
        "info": {
          "code": "MessageEvent.prototype.initMessageEvent"
        },
        "returns": {
          "length": 1,
          "name": "initMessageEvent",
          "type": "function"
        }
      },
      {
        "context": "api.MessageEvent.lastEventId",
        "info": {
          "code": "'lastEventId' in MessageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MessageEvent.origin",
        "info": {
          "code": "'origin' in MessageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MessageEvent.ports",
        "info": {
          "code": "'ports' in MessageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MessageEvent.source",
        "info": {
          "code": "'source' in MessageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MessagePort",
        "info": {
          "code": "self.MessagePort"
        },
        "returns": {
          "length": 0,
          "name": "MessagePort",
          "type": "function"
        }
      },
      {
        "context": "api.MessagePort.close",
        "info": {
          "code": "MessagePort.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.MessagePort.onmessage",
        "info": {
          "code": "'onmessage' in MessagePort.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MessagePort.onmessageerror",
        "info": {
          "code": "'onmessageerror' in MessagePort.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MessagePort.postMessage",
        "info": {
          "code": "MessagePort.prototype.postMessage"
        },
        "returns": {
          "length": 1,
          "name": "postMessage",
          "type": "function"
        }
      },
      {
        "context": "api.MessagePort.postMessage",
        "info": {
          "code": "MessagePort.prototype.postMessage"
        },
        "returns": {
          "length": 1,
          "name": "postMessage",
          "type": "function"
        }
      },
      {
        "context": "api.MessagePort.start",
        "info": {
          "code": "MessagePort.prototype.start"
        },
        "returns": {
          "length": 0,
          "name": "start",
          "type": "function"
        }
      },
      {
        "context": "api.MIDIAccess",
        "info": {
          "code": "self.MIDIAccess"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MIDIAccess.inputs",
        "info": {
          "code": "'inputs' in MIDIAccess.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIAccess.onstatechange",
        "info": {
          "code": "'onstatechange' in MIDIAccess.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIAccess.outputs",
        "info": {
          "code": "'outputs' in MIDIAccess.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIAccess.sysexEnabled",
        "info": {
          "code": "'sysexEnabled' in MIDIAccess.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIConnectionEvent",
        "info": {
          "code": "self.MIDIConnectionEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MIDIConnectionEvent.port",
        "info": {
          "code": "'port' in MIDIConnectionEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIInput",
        "info": {
          "code": "self.MIDIInput"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MIDIInput.onmidimessage",
        "info": {
          "code": "'onmidimessage' in MIDIInput.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIInputMap",
        "info": {
          "code": "self.MIDIInputMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MIDIMessageEvent",
        "info": {
          "code": "self.MIDIMessageEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MIDIMessageEvent.data",
        "info": {
          "code": "'data' in MIDIMessageEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIOutput",
        "info": {
          "code": "self.MIDIOutput"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MIDIOutput.clear",
        "info": {
          "code": "MIDIOutput.prototype.clear"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIOutput.send",
        "info": {
          "code": "MIDIOutput.prototype.send"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIOutputMap",
        "info": {
          "code": "self.MIDIOutputMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MIDIPort",
        "info": {
          "code": "self.MIDIPort"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.MIDIPort.close",
        "info": {
          "code": "MIDIPort.prototype.close"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIPort.connection",
        "info": {
          "code": "'connection' in MIDIPort.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIPort.id",
        "info": {
          "code": "'id' in MIDIPort.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIPort.manufacturer",
        "info": {
          "code": "'manufacturer' in MIDIPort.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIPort.name",
        "info": {
          "code": "'name' in MIDIPort.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIPort.onstatechange",
        "info": {
          "code": "'onstatechange' in MIDIPort.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIPort.open",
        "info": {
          "code": "MIDIPort.prototype.open"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIPort.state",
        "info": {
          "code": "'state' in MIDIPort.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIPort.type",
        "info": {
          "code": "'type' in MIDIPort.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MIDIPort.version",
        "info": {
          "code": "'version' in MIDIPort.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MimeType",
        "info": {
          "code": "self.MimeType"
        },
        "returns": {
          "length": 0,
          "name": "MimeType",
          "type": "function"
        }
      },
      {
        "context": "api.MimeType.description",
        "info": {
          "code": "'description' in MimeType.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MimeType.enabledPlugin",
        "info": {
          "code": "'enabledPlugin' in MimeType.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MimeType.suffixes",
        "info": {
          "code": "'suffixes' in MimeType.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MimeType.type",
        "info": {
          "code": "'type' in MimeType.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MimeTypeArray",
        "info": {
          "code": "self.MimeTypeArray"
        },
        "returns": {
          "length": 0,
          "name": "MimeTypeArray",
          "type": "function"
        }
      },
      {
        "context": "api.MimeTypeArray.item",
        "info": {
          "code": "MimeTypeArray.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.MimeTypeArray.length",
        "info": {
          "code": "'length' in MimeTypeArray.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MimeTypeArray.namedItem",
        "info": {
          "code": "MimeTypeArray.prototype.namedItem"
        },
        "returns": {
          "length": 1,
          "name": "namedItem",
          "type": "function"
        }
      },
      {
        "context": "api.Module",
        "info": {
          "code": "self.Module"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Module.customSections",
        "info": {
          "code": "Module.customSections"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Module.exports",
        "info": {
          "code": "Module.exports"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Module.imports",
        "info": {
          "code": "Module.imports"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.MouseEvent",
        "info": {
          "code": "self.MouseEvent"
        },
        "returns": {
          "length": 1,
          "name": "MouseEvent",
          "type": "function"
        }
      },
      {
        "context": "api.MouseEvent.altKey",
        "info": {
          "code": "'altKey' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.button",
        "info": {
          "code": "'button' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.buttons",
        "info": {
          "code": "'buttons' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.clientX",
        "info": {
          "code": "'clientX' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.clientX",
        "info": {
          "code": "'clientX' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.clientY",
        "info": {
          "code": "'clientY' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.clientY",
        "info": {
          "code": "'clientY' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.ctrlKey",
        "info": {
          "code": "'ctrlKey' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.getModifierState",
        "info": {
          "code": "MouseEvent.prototype.getModifierState"
        },
        "returns": {
          "length": 1,
          "name": "getModifierState",
          "type": "function"
        }
      },
      {
        "context": "api.MouseEvent.metaKey",
        "info": {
          "code": "'metaKey' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.movementX",
        "info": {
          "code": "'movementX' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.movementY",
        "info": {
          "code": "'movementY' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.offsetX",
        "info": {
          "code": "'offsetX' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.offsetY",
        "info": {
          "code": "'offsetY' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.pageX",
        "info": {
          "code": "'pageX' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.pageY",
        "info": {
          "code": "'pageY' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.relatedTarget",
        "info": {
          "code": "'relatedTarget' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.screenX",
        "info": {
          "code": "'screenX' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.screenX",
        "info": {
          "code": "'screenX' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.screenY",
        "info": {
          "code": "'screenY' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.screenY",
        "info": {
          "code": "'screenY' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.shiftKey",
        "info": {
          "code": "'shiftKey' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.x",
        "info": {
          "code": "'x' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MouseEvent.y",
        "info": {
          "code": "'y' in MouseEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MutationObserver",
        "info": {
          "code": "self.MutationObserver"
        },
        "returns": {
          "length": 1,
          "name": "MutationObserver",
          "type": "function"
        }
      },
      {
        "context": "api.MutationObserver.disconnect",
        "info": {
          "code": "MutationObserver.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.MutationObserver.observe",
        "info": {
          "code": "MutationObserver.prototype.observe"
        },
        "returns": {
          "length": 1,
          "name": "observe",
          "type": "function"
        }
      },
      {
        "context": "api.MutationObserver.takeRecords",
        "info": {
          "code": "MutationObserver.prototype.takeRecords"
        },
        "returns": {
          "length": 0,
          "name": "takeRecords",
          "type": "function"
        }
      },
      {
        "context": "api.MutationRecord",
        "info": {
          "code": "self.MutationRecord"
        },
        "returns": {
          "length": 0,
          "name": "MutationRecord",
          "type": "function"
        }
      },
      {
        "context": "api.MutationRecord.addedNodes",
        "info": {
          "code": "'addedNodes' in MutationRecord.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MutationRecord.attributeName",
        "info": {
          "code": "'attributeName' in MutationRecord.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MutationRecord.attributeNamespace",
        "info": {
          "code": "'attributeNamespace' in MutationRecord.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MutationRecord.nextSibling",
        "info": {
          "code": "'nextSibling' in MutationRecord.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MutationRecord.oldValue",
        "info": {
          "code": "'oldValue' in MutationRecord.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MutationRecord.previousSibling",
        "info": {
          "code": "'previousSibling' in MutationRecord.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MutationRecord.removedNodes",
        "info": {
          "code": "'removedNodes' in MutationRecord.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MutationRecord.target",
        "info": {
          "code": "'target' in MutationRecord.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.MutationRecord.type",
        "info": {
          "code": "'type' in MutationRecord.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.NamedFlow",
        "info": {
          "code": "self.NamedFlow"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.NamedFlow.firstEmptyRegionIndex",
        "info": {
          "code": "'firstEmptyRegionIndex' in NamedFlow.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedFlow.getContent",
        "info": {
          "code": "NamedFlow.prototype.getContent"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedFlow.getRegions",
        "info": {
          "code": "NamedFlow.prototype.getRegions"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedFlow.getRegionsByContent",
        "info": {
          "code": "NamedFlow.prototype.getRegionsByContent"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedFlow.name",
        "info": {
          "code": "'name' in NamedFlow.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedFlow.overset",
        "info": {
          "code": "'overset' in NamedFlow.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedFlowMap",
        "info": {
          "code": "self.NamedFlowMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.NamedFlowMap.delete",
        "info": {
          "code": "NamedFlowMap.prototype.delete"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedFlowMap.get",
        "info": {
          "code": "NamedFlowMap.prototype.get"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedFlowMap.has",
        "info": {
          "code": "NamedFlowMap.prototype.has"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedFlowMap.set",
        "info": {
          "code": "NamedFlowMap.prototype.set"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NamedNodeMap",
        "info": {
          "code": "self.NamedNodeMap"
        },
        "returns": {
          "length": 0,
          "name": "NamedNodeMap",
          "type": "function"
        }
      },
      {
        "context": "api.NamedNodeMap.getNamedItem",
        "info": {
          "code": "NamedNodeMap.prototype.getNamedItem"
        },
        "returns": {
          "length": 1,
          "name": "getNamedItem",
          "type": "function"
        }
      },
      {
        "context": "api.NamedNodeMap.getNamedItemNS",
        "info": {
          "code": "NamedNodeMap.prototype.getNamedItemNS"
        },
        "returns": {
          "length": 2,
          "name": "getNamedItemNS",
          "type": "function"
        }
      },
      {
        "context": "api.NamedNodeMap.item",
        "info": {
          "code": "NamedNodeMap.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.NamedNodeMap.length",
        "info": {
          "code": "'length' in NamedNodeMap.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.NamedNodeMap.removeNamedItem",
        "info": {
          "code": "NamedNodeMap.prototype.removeNamedItem"
        },
        "returns": {
          "length": 1,
          "name": "removeNamedItem",
          "type": "function"
        }
      },
      {
        "context": "api.NamedNodeMap.removeNamedItemNS",
        "info": {
          "code": "NamedNodeMap.prototype.removeNamedItemNS"
        },
        "returns": {
          "length": 2,
          "name": "removeNamedItemNS",
          "type": "function"
        }
      },
      {
        "context": "api.NamedNodeMap.setNamedItem",
        "info": {
          "code": "NamedNodeMap.prototype.setNamedItem"
        },
        "returns": {
          "length": 1,
          "name": "setNamedItem",
          "type": "function"
        }
      },
      {
        "context": "api.NamedNodeMap.setNamedItemNS",
        "info": {
          "code": "NamedNodeMap.prototype.setNamedItemNS"
        },
        "returns": {
          "length": 1,
          "name": "setNamedItemNS",
          "type": "function"
        }
      },
      {
        "context": "api.Navigator",
        "info": {
          "code": "self.Navigator"
        },
        "returns": {
          "length": 0,
          "name": "Navigator",
          "type": "function"
        }
      },
      {
        "context": "api.Navigator.appCodeName",
        "info": {
          "code": "'appCodeName' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.appName",
        "info": {
          "code": "'appName' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.appVersion",
        "info": {
          "code": "'appVersion' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.bluetooth",
        "info": {
          "code": "'bluetooth' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.clipboard",
        "info": {
          "code": "'clipboard' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.connection",
        "info": {
          "code": "'connection' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.cookieEnabled",
        "info": {
          "code": "'cookieEnabled' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.credentials",
        "info": {
          "code": "'credentials' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.geolocation",
        "info": {
          "code": "'geolocation' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.getBattery",
        "info": {
          "code": "Navigator.prototype.getBattery"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Navigator.getGamepads",
        "info": {
          "code": "Navigator.prototype.getGamepads"
        },
        "returns": {
          "length": 0,
          "name": "getGamepads",
          "type": "function"
        }
      },
      {
        "context": "api.Navigator.getUserMedia",
        "info": {
          "code": "Navigator.prototype.getUserMedia"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Navigator.getWakeLock",
        "info": {
          "code": "Navigator.prototype.getWakeLock"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Navigator.hardwareConcurrency",
        "info": {
          "code": "'hardwareConcurrency' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.javaEnabled",
        "info": {
          "code": "Navigator.prototype.javaEnabled"
        },
        "returns": {
          "length": 0,
          "name": "javaEnabled",
          "type": "function"
        }
      },
      {
        "context": "api.Navigator.keyboard",
        "info": {
          "code": "'keyboard' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.keyboard",
        "info": {
          "code": "'keyboard' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.language",
        "info": {
          "code": "'language' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.languages",
        "info": {
          "code": "'languages' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.maxTouchPoints",
        "info": {
          "code": "'maxTouchPoints' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.mediaCapabilities",
        "info": {
          "code": "'mediaCapabilities' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.mediaDevices",
        "info": {
          "code": "'mediaDevices' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.mediaSession",
        "info": {
          "code": "'mediaSession' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.mimeTypes",
        "info": {
          "code": "'mimeTypes' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.onLine",
        "info": {
          "code": "'onLine' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.oscpu",
        "info": {
          "code": "'oscpu' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.permissions",
        "info": {
          "code": "'permissions' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.platform",
        "info": {
          "code": "'platform' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.plugins",
        "info": {
          "code": "'plugins' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.presentation",
        "info": {
          "code": "'presentation' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.product",
        "info": {
          "code": "'product' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.productSub",
        "info": {
          "code": "'productSub' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.registerProtocolHandler",
        "info": {
          "code": "Navigator.prototype.registerProtocolHandler"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Navigator.requestMediaKeySystemAccess",
        "info": {
          "code": "Navigator.prototype.requestMediaKeySystemAccess"
        },
        "returns": {
          "length": 2,
          "name": "requestMediaKeySystemAccess",
          "type": "function"
        }
      },
      {
        "context": "api.Navigator.requestMIDIAccess",
        "info": {
          "code": "Navigator.prototype.requestMIDIAccess"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Navigator.sendBeacon",
        "info": {
          "code": "Navigator.prototype.sendBeacon"
        },
        "returns": {
          "length": 1,
          "name": "sendBeacon",
          "type": "function"
        }
      },
      {
        "context": "api.Navigator.serviceWorker",
        "info": {
          "code": "'serviceWorker' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.share",
        "info": {
          "code": "Navigator.prototype.share"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Navigator.storage",
        "info": {
          "code": "'storage' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.taintEnabled",
        "info": {
          "code": "Navigator.prototype.taintEnabled"
        },
        "returns": {
          "length": 0,
          "name": "taintEnabled",
          "type": "function"
        }
      },
      {
        "context": "api.Navigator.unregisterProtocolHandler",
        "info": {
          "code": "Navigator.prototype.unregisterProtocolHandler"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Navigator.usb",
        "info": {
          "code": "'usb' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Navigator.userAgent",
        "info": {
          "code": "'userAgent' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.vendor",
        "info": {
          "code": "'vendor' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.vendorSub",
        "info": {
          "code": "'vendorSub' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.vibrate",
        "info": {
          "code": "Navigator.prototype.vibrate"
        },
        "returns": {
          "length": 1,
          "name": "vibrate",
          "type": "function"
        }
      },
      {
        "context": "api.Navigator.webdriver",
        "info": {
          "code": "'webdriver' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Navigator.xr",
        "info": {
          "code": "'xr' in Navigator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.NetworkInformation",
        "info": {
          "code": "self.NetworkInformation"
        },
        "returns": {
          "length": 0,
          "name": "NetworkInformation",
          "type": "function"
        }
      },
      {
        "context": "api.NetworkInformation.downlink",
        "info": {
          "code": "'downlink' in NetworkInformation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.NetworkInformation.downlinkMax",
        "info": {
          "code": "'downlinkMax' in NetworkInformation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.NetworkInformation.effectiveType",
        "info": {
          "code": "'effectiveType' in NetworkInformation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.NetworkInformation.onchange",
        "info": {
          "code": "'onchange' in NetworkInformation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.NetworkInformation.rtt",
        "info": {
          "code": "'rtt' in NetworkInformation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.NetworkInformation.saveData",
        "info": {
          "code": "'saveData' in NetworkInformation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.NetworkInformation.type",
        "info": {
          "code": "'type' in NetworkInformation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.NFCErrorEvent",
        "info": {
          "code": "self.NFCErrorEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.NFCErrorEvent.error",
        "info": {
          "code": "'error' in NFCErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NFCReader",
        "info": {
          "code": "self.NFCReader"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.NFCReader.onerror",
        "info": {
          "code": "'onerror' in NFCReader.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NFCReader.onreading",
        "info": {
          "code": "'onreading' in NFCReader.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NFCReader.start",
        "info": {
          "code": "NFCReader.prototype.start"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NFCReader.stop",
        "info": {
          "code": "NFCReader.prototype.stop"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NFCReadingEvent",
        "info": {
          "code": "self.NFCReadingEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.NFCReadingEvent.message",
        "info": {
          "code": "'message' in NFCReadingEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NFCWriter",
        "info": {
          "code": "self.NFCWriter"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.NFCWriter.push",
        "info": {
          "code": "NFCWriter.prototype.push"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Node",
        "info": {
          "code": "self.Node"
        },
        "returns": {
          "length": 0,
          "name": "Node",
          "type": "function"
        }
      },
      {
        "context": "api.Node.appendChild",
        "info": {
          "code": "Node.prototype.appendChild"
        },
        "returns": {
          "length": 1,
          "name": "appendChild",
          "type": "function"
        }
      },
      {
        "context": "api.Node.ATTRIBUTE_NODE",
        "info": {
          "code": "Node.ATTRIBUTE_NODE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.Node.baseURI",
        "info": {
          "code": "'baseURI' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.CDATA_SECTION_NODE",
        "info": {
          "code": "Node.CDATA_SECTION_NODE"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.Node.childNodes",
        "info": {
          "code": "'childNodes' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.cloneNode",
        "info": {
          "code": "Node.prototype.cloneNode"
        },
        "returns": {
          "length": 0,
          "name": "cloneNode",
          "type": "function"
        }
      },
      {
        "context": "api.Node.COMMENT_NODE",
        "info": {
          "code": "Node.COMMENT_NODE"
        },
        "returns": {
          "type": "number",
          "value": 8
        }
      },
      {
        "context": "api.Node.compareDocumentPosition",
        "info": {
          "code": "Node.prototype.compareDocumentPosition"
        },
        "returns": {
          "length": 1,
          "name": "compareDocumentPosition",
          "type": "function"
        }
      },
      {
        "context": "api.Node.contains",
        "info": {
          "code": "Node.prototype.contains"
        },
        "returns": {
          "length": 1,
          "name": "contains",
          "type": "function"
        }
      },
      {
        "context": "api.Node.DOCUMENT_FRAGMENT_NODE",
        "info": {
          "code": "Node.DOCUMENT_FRAGMENT_NODE"
        },
        "returns": {
          "type": "number",
          "value": 11
        }
      },
      {
        "context": "api.Node.DOCUMENT_NODE",
        "info": {
          "code": "Node.DOCUMENT_NODE"
        },
        "returns": {
          "type": "number",
          "value": 9
        }
      },
      {
        "context": "api.Node.DOCUMENT_POSITION_CONTAINED_BY",
        "info": {
          "code": "Node.DOCUMENT_POSITION_CONTAINED_BY"
        },
        "returns": {
          "type": "number",
          "value": 16
        }
      },
      {
        "context": "api.Node.DOCUMENT_POSITION_CONTAINS",
        "info": {
          "code": "Node.DOCUMENT_POSITION_CONTAINS"
        },
        "returns": {
          "type": "number",
          "value": 8
        }
      },
      {
        "context": "api.Node.DOCUMENT_POSITION_DISCONNECTED",
        "info": {
          "code": "Node.DOCUMENT_POSITION_DISCONNECTED"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.Node.DOCUMENT_POSITION_FOLLOWING",
        "info": {
          "code": "Node.DOCUMENT_POSITION_FOLLOWING"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "info": {
          "code": "Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"
        },
        "returns": {
          "type": "number",
          "value": 32
        }
      },
      {
        "context": "api.Node.DOCUMENT_POSITION_PRECEDING",
        "info": {
          "code": "Node.DOCUMENT_POSITION_PRECEDING"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.Node.DOCUMENT_TYPE_NODE",
        "info": {
          "code": "Node.DOCUMENT_TYPE_NODE"
        },
        "returns": {
          "type": "number",
          "value": 10
        }
      },
      {
        "context": "api.Node.ELEMENT_NODE",
        "info": {
          "code": "Node.ELEMENT_NODE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.Node.ENTITY_NODE",
        "info": {
          "code": "Node.ENTITY_NODE"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.Node.ENTITY_REFERENCE_NODE",
        "info": {
          "code": "Node.ENTITY_REFERENCE_NODE"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.Node.firstChild",
        "info": {
          "code": "'firstChild' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.getRootNode",
        "info": {
          "code": "Node.prototype.getRootNode"
        },
        "returns": {
          "length": 0,
          "name": "getRootNode",
          "type": "function"
        }
      },
      {
        "context": "api.Node.hasChildNodes",
        "info": {
          "code": "Node.prototype.hasChildNodes"
        },
        "returns": {
          "length": 0,
          "name": "hasChildNodes",
          "type": "function"
        }
      },
      {
        "context": "api.Node.insertBefore",
        "info": {
          "code": "Node.prototype.insertBefore"
        },
        "returns": {
          "length": 2,
          "name": "insertBefore",
          "type": "function"
        }
      },
      {
        "context": "api.Node.isConnected",
        "info": {
          "code": "'isConnected' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.isDefaultNamespace",
        "info": {
          "code": "Node.prototype.isDefaultNamespace"
        },
        "returns": {
          "length": 1,
          "name": "isDefaultNamespace",
          "type": "function"
        }
      },
      {
        "context": "api.Node.isEqualNode",
        "info": {
          "code": "Node.prototype.isEqualNode"
        },
        "returns": {
          "length": 1,
          "name": "isEqualNode",
          "type": "function"
        }
      },
      {
        "context": "api.Node.isSameNode",
        "info": {
          "code": "Node.prototype.isSameNode"
        },
        "returns": {
          "length": 1,
          "name": "isSameNode",
          "type": "function"
        }
      },
      {
        "context": "api.Node.lastChild",
        "info": {
          "code": "'lastChild' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.lookupNamespaceURI",
        "info": {
          "code": "Node.prototype.lookupNamespaceURI"
        },
        "returns": {
          "length": 1,
          "name": "lookupNamespaceURI",
          "type": "function"
        }
      },
      {
        "context": "api.Node.lookupPrefix",
        "info": {
          "code": "Node.prototype.lookupPrefix"
        },
        "returns": {
          "length": 1,
          "name": "lookupPrefix",
          "type": "function"
        }
      },
      {
        "context": "api.Node.nextSibling",
        "info": {
          "code": "'nextSibling' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.nodeName",
        "info": {
          "code": "'nodeName' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.nodeType",
        "info": {
          "code": "'nodeType' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.nodeValue",
        "info": {
          "code": "'nodeValue' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.normalize",
        "info": {
          "code": "Node.prototype.normalize"
        },
        "returns": {
          "length": 0,
          "name": "normalize",
          "type": "function"
        }
      },
      {
        "context": "api.Node.NOTATION_NODE",
        "info": {
          "code": "Node.NOTATION_NODE"
        },
        "returns": {
          "type": "number",
          "value": 12
        }
      },
      {
        "context": "api.Node.ownerDocument",
        "info": {
          "code": "'ownerDocument' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.parentElement",
        "info": {
          "code": "'parentElement' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.parentNode",
        "info": {
          "code": "'parentNode' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.previousSibling",
        "info": {
          "code": "'previousSibling' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Node.PROCESSING_INSTRUCTION_NODE",
        "info": {
          "code": "Node.PROCESSING_INSTRUCTION_NODE"
        },
        "returns": {
          "type": "number",
          "value": 7
        }
      },
      {
        "context": "api.Node.removeChild",
        "info": {
          "code": "Node.prototype.removeChild"
        },
        "returns": {
          "length": 1,
          "name": "removeChild",
          "type": "function"
        }
      },
      {
        "context": "api.Node.replaceChild",
        "info": {
          "code": "Node.prototype.replaceChild"
        },
        "returns": {
          "length": 2,
          "name": "replaceChild",
          "type": "function"
        }
      },
      {
        "context": "api.Node.TEXT_NODE",
        "info": {
          "code": "Node.TEXT_NODE"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.Node.textContent",
        "info": {
          "code": "'textContent' in Node.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.NodeIterator",
        "info": {
          "code": "self.NodeIterator"
        },
        "returns": {
          "length": 0,
          "name": "NodeIterator",
          "type": "function"
        }
      },
      {
        "context": "api.NodeIterator.detach",
        "info": {
          "code": "NodeIterator.prototype.detach"
        },
        "returns": {
          "length": 0,
          "name": "detach",
          "type": "function"
        }
      },
      {
        "context": "api.NodeIterator.filter",
        "info": {
          "code": "'filter' in NodeIterator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.NodeIterator.nextNode",
        "info": {
          "code": "NodeIterator.prototype.nextNode"
        },
        "returns": {
          "length": 0,
          "name": "nextNode",
          "type": "function"
        }
      },
      {
        "context": "api.NodeIterator.pointerBeforeReferenceNode",
        "info": {
          "code": "'pointerBeforeReferenceNode' in NodeIterator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.NodeIterator.previousNode",
        "info": {
          "code": "NodeIterator.prototype.previousNode"
        },
        "returns": {
          "length": 0,
          "name": "previousNode",
          "type": "function"
        }
      },
      {
        "context": "api.NodeIterator.referenceNode",
        "info": {
          "code": "'referenceNode' in NodeIterator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.NodeIterator.root",
        "info": {
          "code": "'root' in NodeIterator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.NodeIterator.whatToShow",
        "info": {
          "code": "'whatToShow' in NodeIterator.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.NodeList",
        "info": {
          "code": "self.NodeList"
        },
        "returns": {
          "length": 0,
          "name": "NodeList",
          "type": "function"
        }
      },
      {
        "context": "api.NodeList.item",
        "info": {
          "code": "NodeList.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.NodeList.length",
        "info": {
          "code": "'length' in NodeList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification",
        "info": {
          "code": "self.Notification"
        },
        "returns": {
          "length": 1,
          "name": "Notification",
          "type": "function"
        }
      },
      {
        "context": "api.Notification.actions",
        "info": {
          "code": "'actions' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Notification.badge",
        "info": {
          "code": "'badge' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Notification.body",
        "info": {
          "code": "'body' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.close",
        "info": {
          "code": "Notification.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.Notification.data",
        "info": {
          "code": "'data' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.dir",
        "info": {
          "code": "'dir' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.icon",
        "info": {
          "code": "'icon' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.image",
        "info": {
          "code": "'image' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Notification.lang",
        "info": {
          "code": "'lang' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.maxActions",
        "info": {
          "code": "Notification.maxActions"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Notification.onclick",
        "info": {
          "code": "'onclick' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.onclose",
        "info": {
          "code": "'onclose' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.onerror",
        "info": {
          "code": "'onerror' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.onshow",
        "info": {
          "code": "'onshow' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.permission",
        "info": {
          "code": "Notification.permission"
        },
        "returns": {
          "type": "string",
          "value": "default"
        }
      },
      {
        "context": "api.Notification.renotify",
        "info": {
          "code": "'renotify' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Notification.requestPermission",
        "info": {
          "code": "Notification.requestPermission"
        },
        "returns": {
          "length": 0,
          "name": "requestPermission",
          "type": "function"
        }
      },
      {
        "context": "api.Notification.requireInteraction",
        "info": {
          "code": "'requireInteraction' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Notification.silent",
        "info": {
          "code": "'silent' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Notification.tag",
        "info": {
          "code": "'tag' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.timestamp",
        "info": {
          "code": "'timestamp' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Notification.title",
        "info": {
          "code": "'title' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Notification.vibrate",
        "info": {
          "code": "'vibrate' in Notification.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.NotificationEvent",
        "info": {
          "code": "self.NotificationEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.NotificationEvent.action",
        "info": {
          "code": "'action' in NotificationEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.NotificationEvent.notification",
        "info": {
          "code": "'notification' in NotificationEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OfflineAudioCompletionEvent",
        "info": {
          "code": "self.OfflineAudioCompletionEvent"
        },
        "returns": {
          "length": 2,
          "name": "OfflineAudioCompletionEvent",
          "type": "function"
        }
      },
      {
        "context": "api.OfflineAudioCompletionEvent.renderedBuffer",
        "info": {
          "code": "'renderedBuffer' in OfflineAudioCompletionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.OfflineAudioContext",
        "info": {
          "code": "self.OfflineAudioContext"
        },
        "returns": {
          "length": 1,
          "name": "OfflineAudioContext",
          "type": "function"
        }
      },
      {
        "context": "api.OfflineAudioContext.length",
        "info": {
          "code": "'length' in OfflineAudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.OfflineAudioContext.oncomplete",
        "info": {
          "code": "'oncomplete' in OfflineAudioContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.OfflineAudioContext.resume",
        "info": {
          "code": "OfflineAudioContext.prototype.resume"
        },
        "returns": {
          "length": 0,
          "name": "resume",
          "type": "function"
        }
      },
      {
        "context": "api.OfflineAudioContext.startRendering",
        "info": {
          "code": "OfflineAudioContext.prototype.startRendering"
        },
        "returns": {
          "length": 0,
          "name": "startRendering",
          "type": "function"
        }
      },
      {
        "context": "api.OfflineAudioContext.suspend",
        "info": {
          "code": "OfflineAudioContext.prototype.suspend"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.OffscreenCanvas",
        "info": {
          "code": "self.OffscreenCanvas"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.OffscreenCanvas.convertToBlob",
        "info": {
          "code": "OffscreenCanvas.prototype.convertToBlob"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvas.getContext",
        "info": {
          "code": "OffscreenCanvas.prototype.getContext"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvas.height",
        "info": {
          "code": "'height' in OffscreenCanvas.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvas.transferToImageBitmap",
        "info": {
          "code": "OffscreenCanvas.prototype.transferToImageBitmap"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvas.width",
        "info": {
          "code": "'width' in OffscreenCanvas.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D",
        "info": {
          "code": "self.OffscreenCanvasRenderingContext2D"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.arc",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.arc"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.arcTo",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.arcTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.beginPath",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.beginPath"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.bezierCurveTo",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.bezierCurveTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.canvas",
        "info": {
          "code": "'canvas' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.clearRect",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.clearRect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.clip",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.clip"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.clip",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.clip"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.closePath",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.closePath"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.commit",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.commit"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.createImageData",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.createImageData"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.createImageData",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.createImageData"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.createLinearGradient",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.createLinearGradient"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.createPattern",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.createPattern"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.createRadialGradient",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.createRadialGradient"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.direction",
        "info": {
          "code": "'direction' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.drawImage",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.drawImage"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.drawImage",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.drawImage"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.drawImage",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.drawImage"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.ellipse",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.ellipse"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.fill",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.fill"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.fill",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.fill"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.fillRect",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.fillRect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.fillStyle",
        "info": {
          "code": "'fillStyle' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.fillText",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.fillText"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.filter",
        "info": {
          "code": "'filter' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.font",
        "info": {
          "code": "'font' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.getImageData",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.getImageData"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.getLineDash",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.getLineDash"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.getTransform",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.getTransform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.globalAlpha",
        "info": {
          "code": "'globalAlpha' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.globalCompositeOperation",
        "info": {
          "code": "'globalCompositeOperation' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.imageSmoothingEnabled",
        "info": {
          "code": "'imageSmoothingEnabled' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.imageSmoothingQuality",
        "info": {
          "code": "'imageSmoothingQuality' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.isPointInPath",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.isPointInPath"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.isPointInPath",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.isPointInPath"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.isPointInStroke",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.isPointInStroke"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.isPointInStroke",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.isPointInStroke"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.lineCap",
        "info": {
          "code": "'lineCap' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.lineDashOffset",
        "info": {
          "code": "'lineDashOffset' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.lineJoin",
        "info": {
          "code": "'lineJoin' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.lineTo",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.lineTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.lineWidth",
        "info": {
          "code": "'lineWidth' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.measureText",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.measureText"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.miterLimit",
        "info": {
          "code": "'miterLimit' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.moveTo",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.moveTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.putImageData",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.putImageData"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.putImageData",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.putImageData"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.quadraticCurveTo",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.quadraticCurveTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.rect",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.rect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.resetTransform",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.resetTransform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.restore",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.restore"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.rotate",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.rotate"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.save",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.save"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.scale",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.scale"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.setLineDash",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.setLineDash"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.setTransform",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.setTransform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.setTransform",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.setTransform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.shadowBlur",
        "info": {
          "code": "'shadowBlur' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.shadowColor",
        "info": {
          "code": "'shadowColor' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.shadowOffsetX",
        "info": {
          "code": "'shadowOffsetX' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.shadowOffsetY",
        "info": {
          "code": "'shadowOffsetY' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.stroke",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.stroke"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.stroke",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.stroke"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.strokeRect",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.strokeRect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.strokeStyle",
        "info": {
          "code": "'strokeStyle' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.strokeText",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.strokeText"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.textAlign",
        "info": {
          "code": "'textAlign' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.textBaseline",
        "info": {
          "code": "'textBaseline' in OffscreenCanvasRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.transform",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.transform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OffscreenCanvasRenderingContext2D.translate",
        "info": {
          "code": "OffscreenCanvasRenderingContext2D.prototype.translate"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OrientationSensor",
        "info": {
          "code": "self.OrientationSensor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.OrientationSensor.populateMatrix",
        "info": {
          "code": "OrientationSensor.prototype.populateMatrix"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OrientationSensor.quaternion",
        "info": {
          "code": "'quaternion' in OrientationSensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.OscillatorNode",
        "info": {
          "code": "self.OscillatorNode"
        },
        "returns": {
          "length": 1,
          "name": "OscillatorNode",
          "type": "function"
        }
      },
      {
        "context": "api.OscillatorNode.detune",
        "info": {
          "code": "'detune' in OscillatorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.OscillatorNode.frequency",
        "info": {
          "code": "'frequency' in OscillatorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.OscillatorNode.setPeriodicWave",
        "info": {
          "code": "OscillatorNode.prototype.setPeriodicWave"
        },
        "returns": {
          "length": 1,
          "name": "setPeriodicWave",
          "type": "function"
        }
      },
      {
        "context": "api.OscillatorNode.type",
        "info": {
          "code": "'type' in OscillatorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.OverconstrainedErrorEvent",
        "info": {
          "code": "self.OverconstrainedErrorEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.OverconstrainedErrorEvent.error",
        "info": {
          "code": "'error' in OverconstrainedErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PageTransitionEvent",
        "info": {
          "code": "self.PageTransitionEvent"
        },
        "returns": {
          "length": 1,
          "name": "PageTransitionEvent",
          "type": "function"
        }
      },
      {
        "context": "api.PageTransitionEvent.persisted",
        "info": {
          "code": "'persisted' in PageTransitionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PaintRenderingContext2D",
        "info": {
          "code": "self.PaintRenderingContext2D"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.arc",
        "info": {
          "code": "PaintRenderingContext2D.prototype.arc"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.arcTo",
        "info": {
          "code": "PaintRenderingContext2D.prototype.arcTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.beginPath",
        "info": {
          "code": "PaintRenderingContext2D.prototype.beginPath"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.bezierCurveTo",
        "info": {
          "code": "PaintRenderingContext2D.prototype.bezierCurveTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.clearRect",
        "info": {
          "code": "PaintRenderingContext2D.prototype.clearRect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.clip",
        "info": {
          "code": "PaintRenderingContext2D.prototype.clip"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.clip",
        "info": {
          "code": "PaintRenderingContext2D.prototype.clip"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.closePath",
        "info": {
          "code": "PaintRenderingContext2D.prototype.closePath"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.createLinearGradient",
        "info": {
          "code": "PaintRenderingContext2D.prototype.createLinearGradient"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.createPattern",
        "info": {
          "code": "PaintRenderingContext2D.prototype.createPattern"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.createRadialGradient",
        "info": {
          "code": "PaintRenderingContext2D.prototype.createRadialGradient"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.drawImage",
        "info": {
          "code": "PaintRenderingContext2D.prototype.drawImage"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.drawImage",
        "info": {
          "code": "PaintRenderingContext2D.prototype.drawImage"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.drawImage",
        "info": {
          "code": "PaintRenderingContext2D.prototype.drawImage"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.ellipse",
        "info": {
          "code": "PaintRenderingContext2D.prototype.ellipse"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.fill",
        "info": {
          "code": "PaintRenderingContext2D.prototype.fill"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.fill",
        "info": {
          "code": "PaintRenderingContext2D.prototype.fill"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.fillRect",
        "info": {
          "code": "PaintRenderingContext2D.prototype.fillRect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.fillStyle",
        "info": {
          "code": "'fillStyle' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.getLineDash",
        "info": {
          "code": "PaintRenderingContext2D.prototype.getLineDash"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.getTransform",
        "info": {
          "code": "PaintRenderingContext2D.prototype.getTransform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.globalAlpha",
        "info": {
          "code": "'globalAlpha' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.globalCompositeOperation",
        "info": {
          "code": "'globalCompositeOperation' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.imageSmoothingEnabled",
        "info": {
          "code": "'imageSmoothingEnabled' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.imageSmoothingQuality",
        "info": {
          "code": "'imageSmoothingQuality' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.isPointInPath",
        "info": {
          "code": "PaintRenderingContext2D.prototype.isPointInPath"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.isPointInPath",
        "info": {
          "code": "PaintRenderingContext2D.prototype.isPointInPath"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.isPointInStroke",
        "info": {
          "code": "PaintRenderingContext2D.prototype.isPointInStroke"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.isPointInStroke",
        "info": {
          "code": "PaintRenderingContext2D.prototype.isPointInStroke"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.lineCap",
        "info": {
          "code": "'lineCap' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.lineDashOffset",
        "info": {
          "code": "'lineDashOffset' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.lineJoin",
        "info": {
          "code": "'lineJoin' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.lineTo",
        "info": {
          "code": "PaintRenderingContext2D.prototype.lineTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.lineWidth",
        "info": {
          "code": "'lineWidth' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.miterLimit",
        "info": {
          "code": "'miterLimit' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.moveTo",
        "info": {
          "code": "PaintRenderingContext2D.prototype.moveTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.quadraticCurveTo",
        "info": {
          "code": "PaintRenderingContext2D.prototype.quadraticCurveTo"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.rect",
        "info": {
          "code": "PaintRenderingContext2D.prototype.rect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.resetTransform",
        "info": {
          "code": "PaintRenderingContext2D.prototype.resetTransform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.restore",
        "info": {
          "code": "PaintRenderingContext2D.prototype.restore"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.rotate",
        "info": {
          "code": "PaintRenderingContext2D.prototype.rotate"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.save",
        "info": {
          "code": "PaintRenderingContext2D.prototype.save"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.scale",
        "info": {
          "code": "PaintRenderingContext2D.prototype.scale"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.setLineDash",
        "info": {
          "code": "PaintRenderingContext2D.prototype.setLineDash"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.setTransform",
        "info": {
          "code": "PaintRenderingContext2D.prototype.setTransform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.setTransform",
        "info": {
          "code": "PaintRenderingContext2D.prototype.setTransform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.shadowBlur",
        "info": {
          "code": "'shadowBlur' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.shadowColor",
        "info": {
          "code": "'shadowColor' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.shadowOffsetX",
        "info": {
          "code": "'shadowOffsetX' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.shadowOffsetY",
        "info": {
          "code": "'shadowOffsetY' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.stroke",
        "info": {
          "code": "PaintRenderingContext2D.prototype.stroke"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.stroke",
        "info": {
          "code": "PaintRenderingContext2D.prototype.stroke"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.strokeRect",
        "info": {
          "code": "PaintRenderingContext2D.prototype.strokeRect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.strokeStyle",
        "info": {
          "code": "'strokeStyle' in PaintRenderingContext2D.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.transform",
        "info": {
          "code": "PaintRenderingContext2D.prototype.transform"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintRenderingContext2D.translate",
        "info": {
          "code": "PaintRenderingContext2D.prototype.translate"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintSize",
        "info": {
          "code": "self.PaintSize"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaintSize.height",
        "info": {
          "code": "'height' in PaintSize.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintSize.width",
        "info": {
          "code": "'width' in PaintSize.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintWorkletGlobalScope",
        "info": {
          "code": "self.PaintWorkletGlobalScope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaintWorkletGlobalScope.devicePixelRatio",
        "info": {
          "code": "'devicePixelRatio' in PaintWorkletGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaintWorkletGlobalScope.registerPaint",
        "info": {
          "code": "PaintWorkletGlobalScope.prototype.registerPaint"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PannerNode",
        "info": {
          "code": "self.PannerNode"
        },
        "returns": {
          "length": 1,
          "name": "PannerNode",
          "type": "function"
        }
      },
      {
        "context": "api.PannerNode.coneInnerAngle",
        "info": {
          "code": "'coneInnerAngle' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.coneOuterAngle",
        "info": {
          "code": "'coneOuterAngle' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.coneOuterGain",
        "info": {
          "code": "'coneOuterGain' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.distanceModel",
        "info": {
          "code": "'distanceModel' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.maxDistance",
        "info": {
          "code": "'maxDistance' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.orientationX",
        "info": {
          "code": "'orientationX' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.orientationY",
        "info": {
          "code": "'orientationY' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.orientationZ",
        "info": {
          "code": "'orientationZ' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.panningModel",
        "info": {
          "code": "'panningModel' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.positionX",
        "info": {
          "code": "'positionX' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.positionY",
        "info": {
          "code": "'positionY' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.positionZ",
        "info": {
          "code": "'positionZ' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.refDistance",
        "info": {
          "code": "'refDistance' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.rolloffFactor",
        "info": {
          "code": "'rolloffFactor' in PannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PannerNode.setOrientation",
        "info": {
          "code": "PannerNode.prototype.setOrientation"
        },
        "returns": {
          "length": 3,
          "name": "setOrientation",
          "type": "function"
        }
      },
      {
        "context": "api.PannerNode.setPosition",
        "info": {
          "code": "PannerNode.prototype.setPosition"
        },
        "returns": {
          "length": 3,
          "name": "setPosition",
          "type": "function"
        }
      },
      {
        "context": "api.PasswordCredential",
        "info": {
          "code": "self.PasswordCredential"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PasswordCredential.iconURL",
        "info": {
          "code": "'iconURL' in PasswordCredential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PasswordCredential.name",
        "info": {
          "code": "'name' in PasswordCredential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PasswordCredential.password",
        "info": {
          "code": "'password' in PasswordCredential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Path2D",
        "info": {
          "code": "self.Path2D"
        },
        "returns": {
          "length": 0,
          "name": "Path2D",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.addPath",
        "info": {
          "code": "Path2D.prototype.addPath"
        },
        "returns": {
          "length": 1,
          "name": "addPath",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.arc",
        "info": {
          "code": "Path2D.prototype.arc"
        },
        "returns": {
          "length": 5,
          "name": "arc",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.arcTo",
        "info": {
          "code": "Path2D.prototype.arcTo"
        },
        "returns": {
          "length": 5,
          "name": "arcTo",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.bezierCurveTo",
        "info": {
          "code": "Path2D.prototype.bezierCurveTo"
        },
        "returns": {
          "length": 6,
          "name": "bezierCurveTo",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.closePath",
        "info": {
          "code": "Path2D.prototype.closePath"
        },
        "returns": {
          "length": 0,
          "name": "closePath",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.ellipse",
        "info": {
          "code": "Path2D.prototype.ellipse"
        },
        "returns": {
          "length": 7,
          "name": "ellipse",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.lineTo",
        "info": {
          "code": "Path2D.prototype.lineTo"
        },
        "returns": {
          "length": 2,
          "name": "lineTo",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.moveTo",
        "info": {
          "code": "Path2D.prototype.moveTo"
        },
        "returns": {
          "length": 2,
          "name": "moveTo",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.quadraticCurveTo",
        "info": {
          "code": "Path2D.prototype.quadraticCurveTo"
        },
        "returns": {
          "length": 4,
          "name": "quadraticCurveTo",
          "type": "function"
        }
      },
      {
        "context": "api.Path2D.rect",
        "info": {
          "code": "Path2D.prototype.rect"
        },
        "returns": {
          "length": 4,
          "name": "rect",
          "type": "function"
        }
      },
      {
        "context": "api.PaymentAddress",
        "info": {
          "code": "self.PaymentAddress"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaymentAddress.addressLine",
        "info": {
          "code": "'addressLine' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.city",
        "info": {
          "code": "'city' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.country",
        "info": {
          "code": "'country' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.dependentLocality",
        "info": {
          "code": "'dependentLocality' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.organization",
        "info": {
          "code": "'organization' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.phone",
        "info": {
          "code": "'phone' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.postalCode",
        "info": {
          "code": "'postalCode' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.recipient",
        "info": {
          "code": "'recipient' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.region",
        "info": {
          "code": "'region' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.sortingCode",
        "info": {
          "code": "'sortingCode' in PaymentAddress.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentAddress.toJSON",
        "info": {
          "code": "PaymentAddress.prototype.toJSON"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentInstruments",
        "info": {
          "code": "self.PaymentInstruments"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaymentInstruments.clear",
        "info": {
          "code": "PaymentInstruments.prototype.clear"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentInstruments.delete",
        "info": {
          "code": "PaymentInstruments.prototype.delete"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentInstruments.get",
        "info": {
          "code": "PaymentInstruments.prototype.get"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentInstruments.has",
        "info": {
          "code": "PaymentInstruments.prototype.has"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentInstruments.keys",
        "info": {
          "code": "PaymentInstruments.prototype.keys"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentInstruments.set",
        "info": {
          "code": "PaymentInstruments.prototype.set"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentManager",
        "info": {
          "code": "self.PaymentManager"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaymentManager.instruments",
        "info": {
          "code": "'instruments' in PaymentManager.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentManager.userHint",
        "info": {
          "code": "'userHint' in PaymentManager.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentMethodChangeEvent",
        "info": {
          "code": "self.PaymentMethodChangeEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaymentMethodChangeEvent.methodDetails",
        "info": {
          "code": "'methodDetails' in PaymentMethodChangeEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentMethodChangeEvent.methodName",
        "info": {
          "code": "'methodName' in PaymentMethodChangeEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest",
        "info": {
          "code": "self.PaymentRequest"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaymentRequest.abort",
        "info": {
          "code": "PaymentRequest.prototype.abort"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.canMakePayment",
        "info": {
          "code": "PaymentRequest.prototype.canMakePayment"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.id",
        "info": {
          "code": "'id' in PaymentRequest.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.onmerchantvalidation",
        "info": {
          "code": "'onmerchantvalidation' in PaymentRequest.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.onpaymentmethodchange",
        "info": {
          "code": "'onpaymentmethodchange' in PaymentRequest.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.onshippingaddresschange",
        "info": {
          "code": "'onshippingaddresschange' in PaymentRequest.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.onshippingoptionchange",
        "info": {
          "code": "'onshippingoptionchange' in PaymentRequest.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.shippingAddress",
        "info": {
          "code": "'shippingAddress' in PaymentRequest.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.shippingOption",
        "info": {
          "code": "'shippingOption' in PaymentRequest.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.shippingType",
        "info": {
          "code": "'shippingType' in PaymentRequest.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequest.show",
        "info": {
          "code": "PaymentRequest.prototype.show"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent",
        "info": {
          "code": "self.PaymentRequestEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaymentRequestEvent.changePaymentMethod",
        "info": {
          "code": "PaymentRequestEvent.prototype.changePaymentMethod"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.instrumentKey",
        "info": {
          "code": "'instrumentKey' in PaymentRequestEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.methodData",
        "info": {
          "code": "'methodData' in PaymentRequestEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.modifiers",
        "info": {
          "code": "'modifiers' in PaymentRequestEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.openWindow",
        "info": {
          "code": "PaymentRequestEvent.prototype.openWindow"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.paymentRequestId",
        "info": {
          "code": "'paymentRequestId' in PaymentRequestEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.paymentRequestOrigin",
        "info": {
          "code": "'paymentRequestOrigin' in PaymentRequestEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.requestBillingAddress",
        "info": {
          "code": "'requestBillingAddress' in PaymentRequestEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.respondWith",
        "info": {
          "code": "PaymentRequestEvent.prototype.respondWith"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.topOrigin",
        "info": {
          "code": "'topOrigin' in PaymentRequestEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestEvent.total",
        "info": {
          "code": "'total' in PaymentRequestEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentRequestUpdateEvent",
        "info": {
          "code": "self.PaymentRequestUpdateEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaymentRequestUpdateEvent.updateWith",
        "info": {
          "code": "PaymentRequestUpdateEvent.prototype.updateWith"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse",
        "info": {
          "code": "self.PaymentResponse"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PaymentResponse.complete",
        "info": {
          "code": "PaymentResponse.prototype.complete"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.details",
        "info": {
          "code": "'details' in PaymentResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.methodName",
        "info": {
          "code": "'methodName' in PaymentResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.onpayerdetailchange",
        "info": {
          "code": "'onpayerdetailchange' in PaymentResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.payerEmail",
        "info": {
          "code": "'payerEmail' in PaymentResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.payerName",
        "info": {
          "code": "'payerName' in PaymentResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.payerPhone",
        "info": {
          "code": "'payerPhone' in PaymentResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.requestId",
        "info": {
          "code": "'requestId' in PaymentResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.retry",
        "info": {
          "code": "PaymentResponse.prototype.retry"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.shippingAddress",
        "info": {
          "code": "'shippingAddress' in PaymentResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.shippingOption",
        "info": {
          "code": "'shippingOption' in PaymentResponse.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PaymentResponse.toJSON",
        "info": {
          "code": "PaymentResponse.prototype.toJSON"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Performance",
        "info": {
          "code": "self.Performance"
        },
        "returns": {
          "length": 0,
          "name": "Performance",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.clearMarks",
        "info": {
          "code": "Performance.prototype.clearMarks"
        },
        "returns": {
          "length": 0,
          "name": "clearMarks",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.clearMeasures",
        "info": {
          "code": "Performance.prototype.clearMeasures"
        },
        "returns": {
          "length": 0,
          "name": "clearMeasures",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.clearResourceTimings",
        "info": {
          "code": "Performance.prototype.clearResourceTimings"
        },
        "returns": {
          "length": 0,
          "name": "clearResourceTimings",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.eventCounts",
        "info": {
          "code": "'eventCounts' in Performance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Performance.getEntries",
        "info": {
          "code": "Performance.prototype.getEntries"
        },
        "returns": {
          "length": 0,
          "name": "getEntries",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.getEntriesByName",
        "info": {
          "code": "Performance.prototype.getEntriesByName"
        },
        "returns": {
          "length": 1,
          "name": "getEntriesByName",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.getEntriesByType",
        "info": {
          "code": "Performance.prototype.getEntriesByType"
        },
        "returns": {
          "length": 1,
          "name": "getEntriesByType",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.mark",
        "info": {
          "code": "Performance.prototype.mark"
        },
        "returns": {
          "length": 1,
          "name": "mark",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.measure",
        "info": {
          "code": "Performance.prototype.measure"
        },
        "returns": {
          "length": 1,
          "name": "measure",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.navigation",
        "info": {
          "code": "'navigation' in Performance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Performance.now",
        "info": {
          "code": "Performance.prototype.now"
        },
        "returns": {
          "length": 0,
          "name": "now",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.onresourcetimingbufferfull",
        "info": {
          "code": "'onresourcetimingbufferfull' in Performance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Performance.setResourceTimingBufferSize",
        "info": {
          "code": "Performance.prototype.setResourceTimingBufferSize"
        },
        "returns": {
          "length": 1,
          "name": "setResourceTimingBufferSize",
          "type": "function"
        }
      },
      {
        "context": "api.Performance.timeOrigin",
        "info": {
          "code": "'timeOrigin' in Performance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Performance.timing",
        "info": {
          "code": "'timing' in Performance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Performance.toJSON",
        "info": {
          "code": "Performance.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceEntry",
        "info": {
          "code": "self.PerformanceEntry"
        },
        "returns": {
          "length": 0,
          "name": "PerformanceEntry",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceEntry.duration",
        "info": {
          "code": "'duration' in PerformanceEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceEntry.entryType",
        "info": {
          "code": "'entryType' in PerformanceEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceEntry.name",
        "info": {
          "code": "'name' in PerformanceEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceEntry.startTime",
        "info": {
          "code": "'startTime' in PerformanceEntry.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceEntry.toJSON",
        "info": {
          "code": "PerformanceEntry.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceEventTiming",
        "info": {
          "code": "self.PerformanceEventTiming"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PerformanceEventTiming.cancelable",
        "info": {
          "code": "'cancelable' in PerformanceEventTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PerformanceEventTiming.processingEnd",
        "info": {
          "code": "'processingEnd' in PerformanceEventTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PerformanceEventTiming.processingStart",
        "info": {
          "code": "'processingStart' in PerformanceEventTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PerformanceLongTaskTiming",
        "info": {
          "code": "self.PerformanceLongTaskTiming"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PerformanceLongTaskTiming.attribution",
        "info": {
          "code": "'attribution' in PerformanceLongTaskTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PerformanceMark",
        "info": {
          "code": "self.PerformanceMark"
        },
        "returns": {
          "length": 0,
          "name": "PerformanceMark",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceMark.detail",
        "info": {
          "code": "'detail' in PerformanceMark.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.PerformanceMeasure",
        "info": {
          "code": "self.PerformanceMeasure"
        },
        "returns": {
          "length": 0,
          "name": "PerformanceMeasure",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceMeasure.detail",
        "info": {
          "code": "'detail' in PerformanceMeasure.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.PerformanceNavigation",
        "info": {
          "code": "self.PerformanceNavigation"
        },
        "returns": {
          "length": 0,
          "name": "PerformanceNavigation",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceNavigation.redirectCount",
        "info": {
          "code": "'redirectCount' in PerformanceNavigation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigation.toJSON",
        "info": {
          "code": "PerformanceNavigation.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceNavigation.type",
        "info": {
          "code": "'type' in PerformanceNavigation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigation.TYPE_BACK_FORWARD",
        "info": {
          "code": "PerformanceNavigation.TYPE_BACK_FORWARD"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.PerformanceNavigation.TYPE_NAVIGATE",
        "info": {
          "code": "PerformanceNavigation.TYPE_NAVIGATE"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.PerformanceNavigation.TYPE_RELOAD",
        "info": {
          "code": "PerformanceNavigation.TYPE_RELOAD"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.PerformanceNavigation.TYPE_RESERVED",
        "info": {
          "code": "PerformanceNavigation.TYPE_RESERVED"
        },
        "returns": {
          "type": "number",
          "value": 255
        }
      },
      {
        "context": "api.PerformanceNavigationTiming",
        "info": {
          "code": "self.PerformanceNavigationTiming"
        },
        "returns": {
          "length": 0,
          "name": "PerformanceNavigationTiming",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.domComplete",
        "info": {
          "code": "'domComplete' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.domContentLoadedEventEnd",
        "info": {
          "code": "'domContentLoadedEventEnd' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.domContentLoadedEventStart",
        "info": {
          "code": "'domContentLoadedEventStart' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.domInteractive",
        "info": {
          "code": "'domInteractive' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.loadEventEnd",
        "info": {
          "code": "'loadEventEnd' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.loadEventStart",
        "info": {
          "code": "'loadEventStart' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.redirectCount",
        "info": {
          "code": "'redirectCount' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.toJSON",
        "info": {
          "code": "PerformanceNavigationTiming.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.type",
        "info": {
          "code": "'type' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.unloadEventEnd",
        "info": {
          "code": "'unloadEventEnd' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceNavigationTiming.unloadEventStart",
        "info": {
          "code": "'unloadEventStart' in PerformanceNavigationTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceObserver",
        "info": {
          "code": "self.PerformanceObserver"
        },
        "returns": {
          "length": 1,
          "name": "PerformanceObserver",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceObserver.disconnect",
        "info": {
          "code": "PerformanceObserver.prototype.disconnect"
        },
        "returns": {
          "length": 0,
          "name": "disconnect",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceObserver.observe",
        "info": {
          "code": "PerformanceObserver.prototype.observe"
        },
        "returns": {
          "length": 1,
          "name": "observe",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceObserver.supportedEntryTypes",
        "info": {
          "code": "PerformanceObserver.supportedEntryTypes"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PerformanceObserver.takeRecords",
        "info": {
          "code": "PerformanceObserver.prototype.takeRecords"
        },
        "returns": {
          "length": 0,
          "name": "takeRecords",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceObserverEntryList",
        "info": {
          "code": "self.PerformanceObserverEntryList"
        },
        "returns": {
          "length": 0,
          "name": "PerformanceObserverEntryList",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceObserverEntryList.getEntries",
        "info": {
          "code": "PerformanceObserverEntryList.prototype.getEntries"
        },
        "returns": {
          "length": 0,
          "name": "getEntries",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceObserverEntryList.getEntriesByName",
        "info": {
          "code": "PerformanceObserverEntryList.prototype.getEntriesByName"
        },
        "returns": {
          "length": 1,
          "name": "getEntriesByName",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceObserverEntryList.getEntriesByType",
        "info": {
          "code": "PerformanceObserverEntryList.prototype.getEntriesByType"
        },
        "returns": {
          "length": 1,
          "name": "getEntriesByType",
          "type": "function"
        }
      },
      {
        "context": "api.PerformancePaintTiming",
        "info": {
          "code": "self.PerformancePaintTiming"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PerformanceResourceTiming",
        "info": {
          "code": "self.PerformanceResourceTiming"
        },
        "returns": {
          "length": 0,
          "name": "PerformanceResourceTiming",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceResourceTiming.connectEnd",
        "info": {
          "code": "'connectEnd' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.connectStart",
        "info": {
          "code": "'connectStart' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.decodedBodySize",
        "info": {
          "code": "'decodedBodySize' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.domainLookupEnd",
        "info": {
          "code": "'domainLookupEnd' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.domainLookupStart",
        "info": {
          "code": "'domainLookupStart' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.encodedBodySize",
        "info": {
          "code": "'encodedBodySize' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.fetchStart",
        "info": {
          "code": "'fetchStart' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.initiatorType",
        "info": {
          "code": "'initiatorType' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.nextHopProtocol",
        "info": {
          "code": "'nextHopProtocol' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.redirectEnd",
        "info": {
          "code": "'redirectEnd' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.redirectStart",
        "info": {
          "code": "'redirectStart' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.requestStart",
        "info": {
          "code": "'requestStart' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.responseEnd",
        "info": {
          "code": "'responseEnd' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.responseStart",
        "info": {
          "code": "'responseStart' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.secureConnectionStart",
        "info": {
          "code": "'secureConnectionStart' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.serverTiming",
        "info": {
          "code": "'serverTiming' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.PerformanceResourceTiming.toJSON",
        "info": {
          "code": "PerformanceResourceTiming.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceResourceTiming.transferSize",
        "info": {
          "code": "'transferSize' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceResourceTiming.workerStart",
        "info": {
          "code": "'workerStart' in PerformanceResourceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceServerTiming",
        "info": {
          "code": "self.PerformanceServerTiming"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PerformanceServerTiming.description",
        "info": {
          "code": "'description' in PerformanceServerTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PerformanceServerTiming.duration",
        "info": {
          "code": "'duration' in PerformanceServerTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PerformanceServerTiming.name",
        "info": {
          "code": "'name' in PerformanceServerTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PerformanceServerTiming.toJSON",
        "info": {
          "code": "PerformanceServerTiming.prototype.toJSON"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PerformanceTiming",
        "info": {
          "code": "self.PerformanceTiming"
        },
        "returns": {
          "length": 0,
          "name": "PerformanceTiming",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceTiming.connectEnd",
        "info": {
          "code": "'connectEnd' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.connectStart",
        "info": {
          "code": "'connectStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.domainLookupEnd",
        "info": {
          "code": "'domainLookupEnd' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.domainLookupStart",
        "info": {
          "code": "'domainLookupStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.domComplete",
        "info": {
          "code": "'domComplete' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.domContentLoadedEventEnd",
        "info": {
          "code": "'domContentLoadedEventEnd' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.domContentLoadedEventStart",
        "info": {
          "code": "'domContentLoadedEventStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.domInteractive",
        "info": {
          "code": "'domInteractive' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.domLoading",
        "info": {
          "code": "'domLoading' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.fetchStart",
        "info": {
          "code": "'fetchStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.loadEventEnd",
        "info": {
          "code": "'loadEventEnd' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.loadEventStart",
        "info": {
          "code": "'loadEventStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.navigationStart",
        "info": {
          "code": "'navigationStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.redirectEnd",
        "info": {
          "code": "'redirectEnd' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.redirectStart",
        "info": {
          "code": "'redirectStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.requestStart",
        "info": {
          "code": "'requestStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.responseEnd",
        "info": {
          "code": "'responseEnd' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.responseStart",
        "info": {
          "code": "'responseStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.secureConnectionStart",
        "info": {
          "code": "'secureConnectionStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.toJSON",
        "info": {
          "code": "PerformanceTiming.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.PerformanceTiming.unloadEventEnd",
        "info": {
          "code": "'unloadEventEnd' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PerformanceTiming.unloadEventStart",
        "info": {
          "code": "'unloadEventStart' in PerformanceTiming.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PeriodicWave",
        "info": {
          "code": "self.PeriodicWave"
        },
        "returns": {
          "length": 1,
          "name": "PeriodicWave",
          "type": "function"
        }
      },
      {
        "context": "api.Permissions",
        "info": {
          "code": "self.Permissions"
        },
        "returns": {
          "length": 0,
          "name": "Permissions",
          "type": "function"
        }
      },
      {
        "context": "api.Permissions.query",
        "info": {
          "code": "Permissions.prototype.query"
        },
        "returns": {
          "length": 1,
          "name": "query",
          "type": "function"
        }
      },
      {
        "context": "api.PermissionStatus",
        "info": {
          "code": "self.PermissionStatus"
        },
        "returns": {
          "length": 0,
          "name": "PermissionStatus",
          "type": "function"
        }
      },
      {
        "context": "api.PermissionStatus.onchange",
        "info": {
          "code": "'onchange' in PermissionStatus.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PermissionStatus.state",
        "info": {
          "code": "'state' in PermissionStatus.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PhotoCapabilities",
        "info": {
          "code": "self.PhotoCapabilities"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PhotoCapabilities.fillLightMode",
        "info": {
          "code": "'fillLightMode' in PhotoCapabilities.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PhotoCapabilities.imageHeight",
        "info": {
          "code": "'imageHeight' in PhotoCapabilities.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PhotoCapabilities.imageWidth",
        "info": {
          "code": "'imageWidth' in PhotoCapabilities.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PhotoCapabilities.redEyeReduction",
        "info": {
          "code": "'redEyeReduction' in PhotoCapabilities.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PictureInPictureWindow",
        "info": {
          "code": "self.PictureInPictureWindow"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PictureInPictureWindow.height",
        "info": {
          "code": "'height' in PictureInPictureWindow.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PictureInPictureWindow.onresize",
        "info": {
          "code": "'onresize' in PictureInPictureWindow.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PictureInPictureWindow.width",
        "info": {
          "code": "'width' in PictureInPictureWindow.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Plugin",
        "info": {
          "code": "self.Plugin"
        },
        "returns": {
          "length": 0,
          "name": "Plugin",
          "type": "function"
        }
      },
      {
        "context": "api.Plugin.description",
        "info": {
          "code": "'description' in Plugin.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Plugin.filename",
        "info": {
          "code": "'filename' in Plugin.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Plugin.item",
        "info": {
          "code": "Plugin.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.Plugin.length",
        "info": {
          "code": "'length' in Plugin.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Plugin.name",
        "info": {
          "code": "'name' in Plugin.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Plugin.namedItem",
        "info": {
          "code": "Plugin.prototype.namedItem"
        },
        "returns": {
          "length": 1,
          "name": "namedItem",
          "type": "function"
        }
      },
      {
        "context": "api.PluginArray",
        "info": {
          "code": "self.PluginArray"
        },
        "returns": {
          "length": 0,
          "name": "PluginArray",
          "type": "function"
        }
      },
      {
        "context": "api.PluginArray.item",
        "info": {
          "code": "PluginArray.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.PluginArray.length",
        "info": {
          "code": "'length' in PluginArray.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PluginArray.namedItem",
        "info": {
          "code": "PluginArray.prototype.namedItem"
        },
        "returns": {
          "length": 1,
          "name": "namedItem",
          "type": "function"
        }
      },
      {
        "context": "api.PluginArray.refresh",
        "info": {
          "code": "PluginArray.prototype.refresh"
        },
        "returns": {
          "length": 0,
          "name": "refresh",
          "type": "function"
        }
      },
      {
        "context": "api.PointerEvent",
        "info": {
          "code": "self.PointerEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PointerEvent.getCoalescedEvents",
        "info": {
          "code": "PointerEvent.prototype.getCoalescedEvents"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.getPredictedEvents",
        "info": {
          "code": "PointerEvent.prototype.getPredictedEvents"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.height",
        "info": {
          "code": "'height' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.isPrimary",
        "info": {
          "code": "'isPrimary' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.pointerId",
        "info": {
          "code": "'pointerId' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.pointerType",
        "info": {
          "code": "'pointerType' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.pressure",
        "info": {
          "code": "'pressure' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.tangentialPressure",
        "info": {
          "code": "'tangentialPressure' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.tiltX",
        "info": {
          "code": "'tiltX' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.tiltY",
        "info": {
          "code": "'tiltY' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.twist",
        "info": {
          "code": "'twist' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PointerEvent.width",
        "info": {
          "code": "'width' in PointerEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PopStateEvent",
        "info": {
          "code": "self.PopStateEvent"
        },
        "returns": {
          "length": 1,
          "name": "PopStateEvent",
          "type": "function"
        }
      },
      {
        "context": "api.PopStateEvent.state",
        "info": {
          "code": "'state' in PopStateEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Position",
        "info": {
          "code": "self.Position"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Position.coords",
        "info": {
          "code": "'coords' in Position.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Position.timestamp",
        "info": {
          "code": "'timestamp' in Position.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PositionError",
        "info": {
          "code": "self.PositionError"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PositionError.code",
        "info": {
          "code": "'code' in PositionError.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PositionError.message",
        "info": {
          "code": "'message' in PositionError.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PositionError.PERMISSION_DENIED",
        "info": {
          "code": "PositionError.PERMISSION_DENIED"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PositionError.POSITION_UNAVAILABLE",
        "info": {
          "code": "PositionError.POSITION_UNAVAILABLE"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PositionError.TIMEOUT",
        "info": {
          "code": "PositionError.TIMEOUT"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Presentation",
        "info": {
          "code": "self.Presentation"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Presentation.defaultRequest",
        "info": {
          "code": "'defaultRequest' in Presentation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Presentation.receiver",
        "info": {
          "code": "'receiver' in Presentation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationAvailability",
        "info": {
          "code": "self.PresentationAvailability"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PresentationAvailability.onchange",
        "info": {
          "code": "'onchange' in PresentationAvailability.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationAvailability.value",
        "info": {
          "code": "'value' in PresentationAvailability.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection",
        "info": {
          "code": "self.PresentationConnection"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PresentationConnection.binaryType",
        "info": {
          "code": "'binaryType' in PresentationConnection.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.close",
        "info": {
          "code": "PresentationConnection.prototype.close"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.id",
        "info": {
          "code": "'id' in PresentationConnection.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.onclose",
        "info": {
          "code": "'onclose' in PresentationConnection.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.onconnect",
        "info": {
          "code": "'onconnect' in PresentationConnection.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.onmessage",
        "info": {
          "code": "'onmessage' in PresentationConnection.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.onterminate",
        "info": {
          "code": "'onterminate' in PresentationConnection.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.send",
        "info": {
          "code": "PresentationConnection.prototype.send"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.send",
        "info": {
          "code": "PresentationConnection.prototype.send"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.send",
        "info": {
          "code": "PresentationConnection.prototype.send"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.send",
        "info": {
          "code": "PresentationConnection.prototype.send"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.state",
        "info": {
          "code": "'state' in PresentationConnection.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.terminate",
        "info": {
          "code": "PresentationConnection.prototype.terminate"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnection.url",
        "info": {
          "code": "'url' in PresentationConnection.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnectionAvailableEvent",
        "info": {
          "code": "self.PresentationConnectionAvailableEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PresentationConnectionAvailableEvent.connection",
        "info": {
          "code": "'connection' in PresentationConnectionAvailableEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnectionCloseEvent",
        "info": {
          "code": "self.PresentationConnectionCloseEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PresentationConnectionCloseEvent.message",
        "info": {
          "code": "'message' in PresentationConnectionCloseEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnectionCloseEvent.reason",
        "info": {
          "code": "'reason' in PresentationConnectionCloseEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnectionList",
        "info": {
          "code": "self.PresentationConnectionList"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PresentationConnectionList.connections",
        "info": {
          "code": "'connections' in PresentationConnectionList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationConnectionList.onconnectionavailable",
        "info": {
          "code": "'onconnectionavailable' in PresentationConnectionList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationReceiver",
        "info": {
          "code": "self.PresentationReceiver"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PresentationReceiver.connectionList",
        "info": {
          "code": "'connectionList' in PresentationReceiver.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationRequest",
        "info": {
          "code": "self.PresentationRequest"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PresentationRequest.getAvailability",
        "info": {
          "code": "PresentationRequest.prototype.getAvailability"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationRequest.onconnectionavailable",
        "info": {
          "code": "'onconnectionavailable' in PresentationRequest.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationRequest.reconnect",
        "info": {
          "code": "PresentationRequest.prototype.reconnect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PresentationRequest.start",
        "info": {
          "code": "PresentationRequest.prototype.start"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ProcessingInstruction",
        "info": {
          "code": "self.ProcessingInstruction"
        },
        "returns": {
          "length": 0,
          "name": "ProcessingInstruction",
          "type": "function"
        }
      },
      {
        "context": "api.ProcessingInstruction.sheet",
        "info": {
          "code": "'sheet' in ProcessingInstruction.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ProcessingInstruction.target",
        "info": {
          "code": "'target' in ProcessingInstruction.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ProgressEvent",
        "info": {
          "code": "self.ProgressEvent"
        },
        "returns": {
          "length": 1,
          "name": "ProgressEvent",
          "type": "function"
        }
      },
      {
        "context": "api.ProgressEvent.lengthComputable",
        "info": {
          "code": "'lengthComputable' in ProgressEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ProgressEvent.loaded",
        "info": {
          "code": "'loaded' in ProgressEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ProgressEvent.total",
        "info": {
          "code": "'total' in ProgressEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PromiseRejectionEvent",
        "info": {
          "code": "self.PromiseRejectionEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PromiseRejectionEvent.promise",
        "info": {
          "code": "'promise' in PromiseRejectionEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PromiseRejectionEvent.reason",
        "info": {
          "code": "'reason' in PromiseRejectionEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ProximitySensor",
        "info": {
          "code": "self.ProximitySensor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ProximitySensor.distance",
        "info": {
          "code": "'distance' in ProximitySensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ProximitySensor.max",
        "info": {
          "code": "'max' in ProximitySensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ProximitySensor.near",
        "info": {
          "code": "'near' in ProximitySensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PublicKeyCredential",
        "info": {
          "code": "self.PublicKeyCredential"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PublicKeyCredential.getClientExtensionResults",
        "info": {
          "code": "PublicKeyCredential.prototype.getClientExtensionResults"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable",
        "info": {
          "code": "PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PublicKeyCredential.rawId",
        "info": {
          "code": "'rawId' in PublicKeyCredential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PublicKeyCredential.response",
        "info": {
          "code": "'response' in PublicKeyCredential.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PushEvent",
        "info": {
          "code": "self.PushEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PushEvent.data",
        "info": {
          "code": "'data' in PushEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PushManager",
        "info": {
          "code": "self.PushManager"
        },
        "returns": {
          "length": 1,
          "name": "PushManager",
          "type": "function"
        }
      },
      {
        "context": "api.PushManager.getSubscription",
        "info": {
          "code": "PushManager.prototype.getSubscription"
        },
        "returns": {
          "length": 0,
          "name": "getSubscription",
          "type": "function"
        }
      },
      {
        "context": "api.PushManager.permissionState",
        "info": {
          "code": "PushManager.prototype.permissionState"
        },
        "returns": {
          "length": 0,
          "name": "permissionState",
          "type": "function"
        }
      },
      {
        "context": "api.PushManager.subscribe",
        "info": {
          "code": "PushManager.prototype.subscribe"
        },
        "returns": {
          "length": 0,
          "name": "subscribe",
          "type": "function"
        }
      },
      {
        "context": "api.PushManager.supportedContentEncodings",
        "info": {
          "code": "PushManager.supportedContentEncodings"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PushMessageData",
        "info": {
          "code": "self.PushMessageData"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PushMessageData.arrayBuffer",
        "info": {
          "code": "PushMessageData.prototype.arrayBuffer"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PushMessageData.blob",
        "info": {
          "code": "PushMessageData.prototype.blob"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PushMessageData.json",
        "info": {
          "code": "PushMessageData.prototype.json"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PushMessageData.text",
        "info": {
          "code": "PushMessageData.prototype.text"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PushSubscription",
        "info": {
          "code": "self.PushSubscription"
        },
        "returns": {
          "length": 1,
          "name": "PushSubscription",
          "type": "function"
        }
      },
      {
        "context": "api.PushSubscription.endpoint",
        "info": {
          "code": "'endpoint' in PushSubscription.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PushSubscription.expirationTime",
        "info": {
          "code": "'expirationTime' in PushSubscription.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.PushSubscription.getKey",
        "info": {
          "code": "PushSubscription.prototype.getKey"
        },
        "returns": {
          "length": 1,
          "name": "getKey",
          "type": "function"
        }
      },
      {
        "context": "api.PushSubscription.options",
        "info": {
          "code": "'options' in PushSubscription.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PushSubscription.toJSON",
        "info": {
          "code": "PushSubscription.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.PushSubscription.unsubscribe",
        "info": {
          "code": "PushSubscription.prototype.unsubscribe"
        },
        "returns": {
          "length": 0,
          "name": "unsubscribe",
          "type": "function"
        }
      },
      {
        "context": "api.PushSubscriptionChangeEvent",
        "info": {
          "code": "self.PushSubscriptionChangeEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.PushSubscriptionChangeEvent.newSubscription",
        "info": {
          "code": "'newSubscription' in PushSubscriptionChangeEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PushSubscriptionChangeEvent.oldSubscription",
        "info": {
          "code": "'oldSubscription' in PushSubscriptionChangeEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.PushSubscriptionOptions",
        "info": {
          "code": "self.PushSubscriptionOptions"
        },
        "returns": {
          "length": 0,
          "name": "PushSubscriptionOptions",
          "type": "function"
        }
      },
      {
        "context": "api.PushSubscriptionOptions.applicationServerKey",
        "info": {
          "code": "'applicationServerKey' in PushSubscriptionOptions.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.PushSubscriptionOptions.userVisibleOnly",
        "info": {
          "code": "'userVisibleOnly' in PushSubscriptionOptions.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RadioNodeList",
        "info": {
          "code": "self.RadioNodeList"
        },
        "returns": {
          "length": 0,
          "name": "RadioNodeList",
          "type": "function"
        }
      },
      {
        "context": "api.RadioNodeList.value",
        "info": {
          "code": "'value' in RadioNodeList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Range",
        "info": {
          "code": "self.Range"
        },
        "returns": {
          "length": 0,
          "name": "Range",
          "type": "function"
        }
      },
      {
        "context": "api.Range.cloneContents",
        "info": {
          "code": "Range.prototype.cloneContents"
        },
        "returns": {
          "length": 0,
          "name": "cloneContents",
          "type": "function"
        }
      },
      {
        "context": "api.Range.cloneRange",
        "info": {
          "code": "Range.prototype.cloneRange"
        },
        "returns": {
          "length": 0,
          "name": "cloneRange",
          "type": "function"
        }
      },
      {
        "context": "api.Range.collapse",
        "info": {
          "code": "Range.prototype.collapse"
        },
        "returns": {
          "length": 0,
          "name": "collapse",
          "type": "function"
        }
      },
      {
        "context": "api.Range.commonAncestorContainer",
        "info": {
          "code": "'commonAncestorContainer' in Range.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Range.compareBoundaryPoints",
        "info": {
          "code": "Range.prototype.compareBoundaryPoints"
        },
        "returns": {
          "length": 2,
          "name": "compareBoundaryPoints",
          "type": "function"
        }
      },
      {
        "context": "api.Range.comparePoint",
        "info": {
          "code": "Range.prototype.comparePoint"
        },
        "returns": {
          "length": 2,
          "name": "comparePoint",
          "type": "function"
        }
      },
      {
        "context": "api.Range.createContextualFragment",
        "info": {
          "code": "Range.prototype.createContextualFragment"
        },
        "returns": {
          "length": 1,
          "name": "createContextualFragment",
          "type": "function"
        }
      },
      {
        "context": "api.Range.deleteContents",
        "info": {
          "code": "Range.prototype.deleteContents"
        },
        "returns": {
          "length": 0,
          "name": "deleteContents",
          "type": "function"
        }
      },
      {
        "context": "api.Range.detach",
        "info": {
          "code": "Range.prototype.detach"
        },
        "returns": {
          "length": 0,
          "name": "detach",
          "type": "function"
        }
      },
      {
        "context": "api.Range.END_TO_END",
        "info": {
          "code": "Range.END_TO_END"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.Range.END_TO_START",
        "info": {
          "code": "Range.END_TO_START"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.Range.extractContents",
        "info": {
          "code": "Range.prototype.extractContents"
        },
        "returns": {
          "length": 0,
          "name": "extractContents",
          "type": "function"
        }
      },
      {
        "context": "api.Range.getBoundingClientRect",
        "info": {
          "code": "Range.prototype.getBoundingClientRect"
        },
        "returns": {
          "length": 0,
          "name": "getBoundingClientRect",
          "type": "function"
        }
      },
      {
        "context": "api.Range.getClientRects",
        "info": {
          "code": "Range.prototype.getClientRects"
        },
        "returns": {
          "length": 0,
          "name": "getClientRects",
          "type": "function"
        }
      },
      {
        "context": "api.Range.insertNode",
        "info": {
          "code": "Range.prototype.insertNode"
        },
        "returns": {
          "length": 1,
          "name": "insertNode",
          "type": "function"
        }
      },
      {
        "context": "api.Range.intersectsNode",
        "info": {
          "code": "Range.prototype.intersectsNode"
        },
        "returns": {
          "length": 1,
          "name": "intersectsNode",
          "type": "function"
        }
      },
      {
        "context": "api.Range.isPointInRange",
        "info": {
          "code": "Range.prototype.isPointInRange"
        },
        "returns": {
          "length": 2,
          "name": "isPointInRange",
          "type": "function"
        }
      },
      {
        "context": "api.Range.selectNode",
        "info": {
          "code": "Range.prototype.selectNode"
        },
        "returns": {
          "length": 1,
          "name": "selectNode",
          "type": "function"
        }
      },
      {
        "context": "api.Range.selectNodeContents",
        "info": {
          "code": "Range.prototype.selectNodeContents"
        },
        "returns": {
          "length": 1,
          "name": "selectNodeContents",
          "type": "function"
        }
      },
      {
        "context": "api.Range.setEnd",
        "info": {
          "code": "Range.prototype.setEnd"
        },
        "returns": {
          "length": 2,
          "name": "setEnd",
          "type": "function"
        }
      },
      {
        "context": "api.Range.setEndAfter",
        "info": {
          "code": "Range.prototype.setEndAfter"
        },
        "returns": {
          "length": 1,
          "name": "setEndAfter",
          "type": "function"
        }
      },
      {
        "context": "api.Range.setEndBefore",
        "info": {
          "code": "Range.prototype.setEndBefore"
        },
        "returns": {
          "length": 1,
          "name": "setEndBefore",
          "type": "function"
        }
      },
      {
        "context": "api.Range.setStart",
        "info": {
          "code": "Range.prototype.setStart"
        },
        "returns": {
          "length": 2,
          "name": "setStart",
          "type": "function"
        }
      },
      {
        "context": "api.Range.setStartAfter",
        "info": {
          "code": "Range.prototype.setStartAfter"
        },
        "returns": {
          "length": 1,
          "name": "setStartAfter",
          "type": "function"
        }
      },
      {
        "context": "api.Range.setStartBefore",
        "info": {
          "code": "Range.prototype.setStartBefore"
        },
        "returns": {
          "length": 1,
          "name": "setStartBefore",
          "type": "function"
        }
      },
      {
        "context": "api.Range.START_TO_END",
        "info": {
          "code": "Range.START_TO_END"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.Range.START_TO_START",
        "info": {
          "code": "Range.START_TO_START"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.Range.surroundContents",
        "info": {
          "code": "Range.prototype.surroundContents"
        },
        "returns": {
          "length": 1,
          "name": "surroundContents",
          "type": "function"
        }
      },
      {
        "context": "api.RelativeOrientationSensor",
        "info": {
          "code": "self.RelativeOrientationSensor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RemotePlayback",
        "info": {
          "code": "self.RemotePlayback"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RemotePlayback.cancelWatchAvailability",
        "info": {
          "code": "RemotePlayback.prototype.cancelWatchAvailability"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RemotePlayback.onconnect",
        "info": {
          "code": "'onconnect' in RemotePlayback.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RemotePlayback.onconnecting",
        "info": {
          "code": "'onconnecting' in RemotePlayback.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RemotePlayback.ondisconnect",
        "info": {
          "code": "'ondisconnect' in RemotePlayback.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RemotePlayback.prompt",
        "info": {
          "code": "RemotePlayback.prototype.prompt"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RemotePlayback.state",
        "info": {
          "code": "'state' in RemotePlayback.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RemotePlayback.watchAvailability",
        "info": {
          "code": "RemotePlayback.prototype.watchAvailability"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Report",
        "info": {
          "code": "self.Report"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Report.body",
        "info": {
          "code": "'body' in Report.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Report.type",
        "info": {
          "code": "'type' in Report.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Report.url",
        "info": {
          "code": "'url' in Report.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ReportBody",
        "info": {
          "code": "self.ReportBody"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ReportingObserver",
        "info": {
          "code": "self.ReportingObserver"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ReportingObserver.disconnect",
        "info": {
          "code": "ReportingObserver.prototype.disconnect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ReportingObserver.observe",
        "info": {
          "code": "ReportingObserver.prototype.observe"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ReportingObserver.takeRecords",
        "info": {
          "code": "ReportingObserver.prototype.takeRecords"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Request",
        "info": {
          "code": "self.Request"
        },
        "returns": {
          "length": 1,
          "name": "Request",
          "type": "function"
        }
      },
      {
        "context": "api.Request.arrayBuffer",
        "info": {
          "code": "Request.prototype.arrayBuffer"
        },
        "returns": {
          "length": 0,
          "name": "arrayBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.Request.blob",
        "info": {
          "code": "Request.prototype.blob"
        },
        "returns": {
          "length": 0,
          "name": "blob",
          "type": "function"
        }
      },
      {
        "context": "api.Request.body",
        "info": {
          "code": "'body' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Request.bodyUsed",
        "info": {
          "code": "'bodyUsed' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.cache",
        "info": {
          "code": "'cache' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.clone",
        "info": {
          "code": "Request.prototype.clone"
        },
        "returns": {
          "length": 0,
          "name": "clone",
          "type": "function"
        }
      },
      {
        "context": "api.Request.credentials",
        "info": {
          "code": "'credentials' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.destination",
        "info": {
          "code": "'destination' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.formData",
        "info": {
          "code": "Request.prototype.formData"
        },
        "returns": {
          "length": 0,
          "name": "formData",
          "type": "function"
        }
      },
      {
        "context": "api.Request.headers",
        "info": {
          "code": "'headers' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.integrity",
        "info": {
          "code": "'integrity' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.isHistoryNavigation",
        "info": {
          "code": "'isHistoryNavigation' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Request.isReloadNavigation",
        "info": {
          "code": "'isReloadNavigation' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Request.json",
        "info": {
          "code": "Request.prototype.json"
        },
        "returns": {
          "length": 0,
          "name": "json",
          "type": "function"
        }
      },
      {
        "context": "api.Request.keepalive",
        "info": {
          "code": "'keepalive' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Request.method",
        "info": {
          "code": "'method' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.mode",
        "info": {
          "code": "'mode' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.redirect",
        "info": {
          "code": "'redirect' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.referrer",
        "info": {
          "code": "'referrer' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.referrerPolicy",
        "info": {
          "code": "'referrerPolicy' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.signal",
        "info": {
          "code": "'signal' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Request.text",
        "info": {
          "code": "Request.prototype.text"
        },
        "returns": {
          "length": 0,
          "name": "text",
          "type": "function"
        }
      },
      {
        "context": "api.Request.url",
        "info": {
          "code": "'url' in Request.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ResizeObservation",
        "info": {
          "code": "self.ResizeObservation"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ResizeObservation.broadcastHeight",
        "info": {
          "code": "'broadcastHeight' in ResizeObservation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ResizeObservation.broadcastWidth",
        "info": {
          "code": "'broadcastWidth' in ResizeObservation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ResizeObservation.isActive",
        "info": {
          "code": "ResizeObservation.prototype.isActive"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ResizeObservation.target",
        "info": {
          "code": "'target' in ResizeObservation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ResizeObserver",
        "info": {
          "code": "self.ResizeObserver"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ResizeObserver.disconnect",
        "info": {
          "code": "ResizeObserver.prototype.disconnect"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ResizeObserver.observe",
        "info": {
          "code": "ResizeObserver.prototype.observe"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ResizeObserver.unobserve",
        "info": {
          "code": "ResizeObserver.prototype.unobserve"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ResizeObserverEntry",
        "info": {
          "code": "self.ResizeObserverEntry"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ResizeObserverEntry.contentRect",
        "info": {
          "code": "'contentRect' in ResizeObserverEntry.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ResizeObserverEntry.target",
        "info": {
          "code": "'target' in ResizeObserverEntry.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Response",
        "info": {
          "code": "self.Response"
        },
        "returns": {
          "length": 0,
          "name": "Response",
          "type": "function"
        }
      },
      {
        "context": "api.Response.arrayBuffer",
        "info": {
          "code": "Response.prototype.arrayBuffer"
        },
        "returns": {
          "length": 0,
          "name": "arrayBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.Response.blob",
        "info": {
          "code": "Response.prototype.blob"
        },
        "returns": {
          "length": 0,
          "name": "blob",
          "type": "function"
        }
      },
      {
        "context": "api.Response.body",
        "info": {
          "code": "'body' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Response.bodyUsed",
        "info": {
          "code": "'bodyUsed' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Response.clone",
        "info": {
          "code": "Response.prototype.clone"
        },
        "returns": {
          "length": 0,
          "name": "clone",
          "type": "function"
        }
      },
      {
        "context": "api.Response.error",
        "info": {
          "code": "Response.error"
        },
        "returns": {
          "length": 0,
          "name": "error",
          "type": "function"
        }
      },
      {
        "context": "api.Response.formData",
        "info": {
          "code": "Response.prototype.formData"
        },
        "returns": {
          "length": 0,
          "name": "formData",
          "type": "function"
        }
      },
      {
        "context": "api.Response.headers",
        "info": {
          "code": "'headers' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Response.json",
        "info": {
          "code": "Response.prototype.json"
        },
        "returns": {
          "length": 0,
          "name": "json",
          "type": "function"
        }
      },
      {
        "context": "api.Response.ok",
        "info": {
          "code": "'ok' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Response.redirect",
        "info": {
          "code": "Response.redirect"
        },
        "returns": {
          "length": 1,
          "name": "redirect",
          "type": "function"
        }
      },
      {
        "context": "api.Response.redirected",
        "info": {
          "code": "'redirected' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Response.status",
        "info": {
          "code": "'status' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Response.statusText",
        "info": {
          "code": "'statusText' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Response.text",
        "info": {
          "code": "Response.prototype.text"
        },
        "returns": {
          "length": 0,
          "name": "text",
          "type": "function"
        }
      },
      {
        "context": "api.Response.trailer",
        "info": {
          "code": "'trailer' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Response.type",
        "info": {
          "code": "'type' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Response.url",
        "info": {
          "code": "'url' in Response.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCCertificate",
        "info": {
          "code": "self.RTCCertificate"
        },
        "returns": {
          "length": 0,
          "name": "RTCCertificate",
          "type": "function"
        }
      },
      {
        "context": "api.RTCCertificate.expires",
        "info": {
          "code": "'expires' in RTCCertificate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCCertificate.getFingerprints",
        "info": {
          "code": "RTCCertificate.prototype.getFingerprints"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCCertificate.getSupportedAlgorithms",
        "info": {
          "code": "RTCCertificate.getSupportedAlgorithms"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCDataChannel",
        "info": {
          "code": "self.RTCDataChannel"
        },
        "returns": {
          "length": 0,
          "name": "RTCDataChannel",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDataChannel.binaryType",
        "info": {
          "code": "'binaryType' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.bufferedAmount",
        "info": {
          "code": "'bufferedAmount' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.bufferedAmountLowThreshold",
        "info": {
          "code": "'bufferedAmountLowThreshold' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.close",
        "info": {
          "code": "RTCDataChannel.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDataChannel.id",
        "info": {
          "code": "'id' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.label",
        "info": {
          "code": "'label' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.maxPacketLifeTime",
        "info": {
          "code": "'maxPacketLifeTime' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.maxRetransmits",
        "info": {
          "code": "'maxRetransmits' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.negotiated",
        "info": {
          "code": "'negotiated' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCDataChannel.onbufferedamountlow",
        "info": {
          "code": "'onbufferedamountlow' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.onclose",
        "info": {
          "code": "'onclose' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.onerror",
        "info": {
          "code": "'onerror' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.onmessage",
        "info": {
          "code": "'onmessage' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.onopen",
        "info": {
          "code": "'onopen' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.ordered",
        "info": {
          "code": "'ordered' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.priority",
        "info": {
          "code": "'priority' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCDataChannel.protocol",
        "info": {
          "code": "'protocol' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.readyState",
        "info": {
          "code": "'readyState' in RTCDataChannel.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDataChannel.send",
        "info": {
          "code": "RTCDataChannel.prototype.send"
        },
        "returns": {
          "length": 1,
          "name": "send",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDataChannel.send",
        "info": {
          "code": "RTCDataChannel.prototype.send"
        },
        "returns": {
          "length": 1,
          "name": "send",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDataChannel.send",
        "info": {
          "code": "RTCDataChannel.prototype.send"
        },
        "returns": {
          "length": 1,
          "name": "send",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDataChannel.send",
        "info": {
          "code": "RTCDataChannel.prototype.send"
        },
        "returns": {
          "length": 1,
          "name": "send",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDataChannelEvent",
        "info": {
          "code": "self.RTCDataChannelEvent"
        },
        "returns": {
          "length": 2,
          "name": "RTCDataChannelEvent",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDataChannelEvent.channel",
        "info": {
          "code": "'channel' in RTCDataChannelEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDtlsTransport",
        "info": {
          "code": "self.RTCDtlsTransport"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCDtlsTransport.getRemoteCertificates",
        "info": {
          "code": "RTCDtlsTransport.prototype.getRemoteCertificates"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCDtlsTransport.iceTransport",
        "info": {
          "code": "'iceTransport' in RTCDtlsTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCDtlsTransport.onerror",
        "info": {
          "code": "'onerror' in RTCDtlsTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCDtlsTransport.onstatechange",
        "info": {
          "code": "'onstatechange' in RTCDtlsTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCDtlsTransport.state",
        "info": {
          "code": "'state' in RTCDtlsTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCDTMFSender",
        "info": {
          "code": "self.RTCDTMFSender"
        },
        "returns": {
          "length": 0,
          "name": "RTCDTMFSender",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDTMFSender.canInsertDTMF",
        "info": {
          "code": "'canInsertDTMF' in RTCDTMFSender.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCDTMFSender.insertDTMF",
        "info": {
          "code": "RTCDTMFSender.prototype.insertDTMF"
        },
        "returns": {
          "length": 1,
          "name": "insertDTMF",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDTMFSender.ontonechange",
        "info": {
          "code": "'ontonechange' in RTCDTMFSender.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDTMFSender.toneBuffer",
        "info": {
          "code": "'toneBuffer' in RTCDTMFSender.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCDTMFToneChangeEvent",
        "info": {
          "code": "self.RTCDTMFToneChangeEvent"
        },
        "returns": {
          "length": 1,
          "name": "RTCDTMFToneChangeEvent",
          "type": "function"
        }
      },
      {
        "context": "api.RTCDTMFToneChangeEvent.tone",
        "info": {
          "code": "'tone' in RTCDTMFToneChangeEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCErrorEvent",
        "info": {
          "code": "self.RTCErrorEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCErrorEvent.error",
        "info": {
          "code": "'error' in RTCErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceCandidate",
        "info": {
          "code": "self.RTCIceCandidate"
        },
        "returns": {
          "length": 1,
          "name": "RTCIceCandidate",
          "type": "function"
        }
      },
      {
        "context": "api.RTCIceCandidate.address",
        "info": {
          "code": "'address' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.candidate",
        "info": {
          "code": "'candidate' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCIceCandidate.component",
        "info": {
          "code": "'component' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.foundation",
        "info": {
          "code": "'foundation' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.port",
        "info": {
          "code": "'port' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.priority",
        "info": {
          "code": "'priority' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.protocol",
        "info": {
          "code": "'protocol' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.relatedAddress",
        "info": {
          "code": "'relatedAddress' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.relatedPort",
        "info": {
          "code": "'relatedPort' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.sdpMid",
        "info": {
          "code": "'sdpMid' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCIceCandidate.sdpMLineIndex",
        "info": {
          "code": "'sdpMLineIndex' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCIceCandidate.tcpType",
        "info": {
          "code": "'tcpType' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.toJSON",
        "info": {
          "code": "RTCIceCandidate.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.RTCIceCandidate.type",
        "info": {
          "code": "'type' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceCandidate.usernameFragment",
        "info": {
          "code": "'usernameFragment' in RTCIceCandidate.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCIceTransport",
        "info": {
          "code": "self.RTCIceTransport"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCIceTransport.component",
        "info": {
          "code": "'component' in RTCIceTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.gatheringState",
        "info": {
          "code": "'gatheringState' in RTCIceTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.getLocalCandidates",
        "info": {
          "code": "RTCIceTransport.prototype.getLocalCandidates"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.getLocalParameters",
        "info": {
          "code": "RTCIceTransport.prototype.getLocalParameters"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.getRemoteCandidates",
        "info": {
          "code": "RTCIceTransport.prototype.getRemoteCandidates"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.getRemoteParameters",
        "info": {
          "code": "RTCIceTransport.prototype.getRemoteParameters"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.getSelectedCandidatePair",
        "info": {
          "code": "RTCIceTransport.prototype.getSelectedCandidatePair"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.ongatheringstatechange",
        "info": {
          "code": "'ongatheringstatechange' in RTCIceTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.onselectedcandidatepairchange",
        "info": {
          "code": "'onselectedcandidatepairchange' in RTCIceTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.onstatechange",
        "info": {
          "code": "'onstatechange' in RTCIceTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.role",
        "info": {
          "code": "'role' in RTCIceTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCIceTransport.state",
        "info": {
          "code": "'state' in RTCIceTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCPeerConnection",
        "info": {
          "code": "self.RTCPeerConnection"
        },
        "returns": {
          "length": 0,
          "name": "RTCPeerConnection",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.addIceCandidate",
        "info": {
          "code": "RTCPeerConnection.prototype.addIceCandidate"
        },
        "returns": {
          "length": 1,
          "name": "addIceCandidate",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.addIceCandidate",
        "info": {
          "code": "RTCPeerConnection.prototype.addIceCandidate"
        },
        "returns": {
          "length": 1,
          "name": "addIceCandidate",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.addTrack",
        "info": {
          "code": "RTCPeerConnection.prototype.addTrack"
        },
        "returns": {
          "length": 2,
          "name": "addTrack",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.addTransceiver",
        "info": {
          "code": "RTCPeerConnection.prototype.addTransceiver"
        },
        "returns": {
          "length": 1,
          "name": "addTransceiver",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.canTrickleIceCandidates",
        "info": {
          "code": "'canTrickleIceCandidates' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.close",
        "info": {
          "code": "RTCPeerConnection.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.connectionState",
        "info": {
          "code": "'connectionState' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCPeerConnection.createAnswer",
        "info": {
          "code": "RTCPeerConnection.prototype.createAnswer"
        },
        "returns": {
          "length": 0,
          "name": "createAnswer",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.createAnswer",
        "info": {
          "code": "RTCPeerConnection.prototype.createAnswer"
        },
        "returns": {
          "length": 0,
          "name": "createAnswer",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.createDataChannel",
        "info": {
          "code": "RTCPeerConnection.prototype.createDataChannel"
        },
        "returns": {
          "length": 1,
          "name": "createDataChannel",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.createOffer",
        "info": {
          "code": "RTCPeerConnection.prototype.createOffer"
        },
        "returns": {
          "length": 0,
          "name": "createOffer",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.createOffer",
        "info": {
          "code": "RTCPeerConnection.prototype.createOffer"
        },
        "returns": {
          "length": 0,
          "name": "createOffer",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.currentLocalDescription",
        "info": {
          "code": "'currentLocalDescription' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.currentRemoteDescription",
        "info": {
          "code": "'currentRemoteDescription' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.generateCertificate",
        "info": {
          "code": "RTCPeerConnection.generateCertificate"
        },
        "returns": {
          "length": 1,
          "name": "generateCertificate",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.getConfiguration",
        "info": {
          "code": "RTCPeerConnection.prototype.getConfiguration"
        },
        "returns": {
          "length": 0,
          "name": "getConfiguration",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.getDefaultIceServers",
        "info": {
          "code": "RTCPeerConnection.getDefaultIceServers"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCPeerConnection.getReceivers",
        "info": {
          "code": "RTCPeerConnection.prototype.getReceivers"
        },
        "returns": {
          "length": 0,
          "name": "getReceivers",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.getSenders",
        "info": {
          "code": "RTCPeerConnection.prototype.getSenders"
        },
        "returns": {
          "length": 0,
          "name": "getSenders",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.getStats",
        "info": {
          "code": "RTCPeerConnection.prototype.getStats"
        },
        "returns": {
          "length": 0,
          "name": "getStats",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.getTransceivers",
        "info": {
          "code": "RTCPeerConnection.prototype.getTransceivers"
        },
        "returns": {
          "length": 0,
          "name": "getTransceivers",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.iceConnectionState",
        "info": {
          "code": "'iceConnectionState' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.iceGatheringState",
        "info": {
          "code": "'iceGatheringState' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.localDescription",
        "info": {
          "code": "'localDescription' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.onconnectionstatechange",
        "info": {
          "code": "'onconnectionstatechange' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCPeerConnection.ondatachannel",
        "info": {
          "code": "'ondatachannel' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.onicecandidate",
        "info": {
          "code": "'onicecandidate' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.onicecandidateerror",
        "info": {
          "code": "'onicecandidateerror' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCPeerConnection.oniceconnectionstatechange",
        "info": {
          "code": "'oniceconnectionstatechange' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.onicegatheringstatechange",
        "info": {
          "code": "'onicegatheringstatechange' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.onnegotiationneeded",
        "info": {
          "code": "'onnegotiationneeded' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.onsignalingstatechange",
        "info": {
          "code": "'onsignalingstatechange' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.onstatsended",
        "info": {
          "code": "'onstatsended' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCPeerConnection.ontrack",
        "info": {
          "code": "'ontrack' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.pendingLocalDescription",
        "info": {
          "code": "'pendingLocalDescription' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.pendingRemoteDescription",
        "info": {
          "code": "'pendingRemoteDescription' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.remoteDescription",
        "info": {
          "code": "'remoteDescription' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnection.removeTrack",
        "info": {
          "code": "RTCPeerConnection.prototype.removeTrack"
        },
        "returns": {
          "length": 1,
          "name": "removeTrack",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.sctp",
        "info": {
          "code": "'sctp' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCPeerConnection.setConfiguration",
        "info": {
          "code": "RTCPeerConnection.prototype.setConfiguration"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCPeerConnection.setLocalDescription",
        "info": {
          "code": "RTCPeerConnection.prototype.setLocalDescription"
        },
        "returns": {
          "length": 1,
          "name": "setLocalDescription",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.setLocalDescription",
        "info": {
          "code": "RTCPeerConnection.prototype.setLocalDescription"
        },
        "returns": {
          "length": 1,
          "name": "setLocalDescription",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.setRemoteDescription",
        "info": {
          "code": "RTCPeerConnection.prototype.setRemoteDescription"
        },
        "returns": {
          "length": 1,
          "name": "setRemoteDescription",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.setRemoteDescription",
        "info": {
          "code": "RTCPeerConnection.prototype.setRemoteDescription"
        },
        "returns": {
          "length": 1,
          "name": "setRemoteDescription",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnection.signalingState",
        "info": {
          "code": "'signalingState' in RTCPeerConnection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnectionIceErrorEvent",
        "info": {
          "code": "self.RTCPeerConnectionIceErrorEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCPeerConnectionIceErrorEvent.errorCode",
        "info": {
          "code": "'errorCode' in RTCPeerConnectionIceErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCPeerConnectionIceErrorEvent.errorText",
        "info": {
          "code": "'errorText' in RTCPeerConnectionIceErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCPeerConnectionIceErrorEvent.hostCandidate",
        "info": {
          "code": "'hostCandidate' in RTCPeerConnectionIceErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCPeerConnectionIceErrorEvent.url",
        "info": {
          "code": "'url' in RTCPeerConnectionIceErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCPeerConnectionIceEvent",
        "info": {
          "code": "self.RTCPeerConnectionIceEvent"
        },
        "returns": {
          "length": 1,
          "name": "RTCPeerConnectionIceEvent",
          "type": "function"
        }
      },
      {
        "context": "api.RTCPeerConnectionIceEvent.candidate",
        "info": {
          "code": "'candidate' in RTCPeerConnectionIceEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCPeerConnectionIceEvent.url",
        "info": {
          "code": "'url' in RTCPeerConnectionIceEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCRtpReceiver",
        "info": {
          "code": "self.RTCRtpReceiver"
        },
        "returns": {
          "length": 0,
          "name": "RTCRtpReceiver",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpReceiver.getCapabilities",
        "info": {
          "code": "RTCRtpReceiver.getCapabilities"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCRtpReceiver.getContributingSources",
        "info": {
          "code": "RTCRtpReceiver.prototype.getContributingSources"
        },
        "returns": {
          "length": 0,
          "name": "getContributingSources",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpReceiver.getParameters",
        "info": {
          "code": "RTCRtpReceiver.prototype.getParameters"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCRtpReceiver.getStats",
        "info": {
          "code": "RTCRtpReceiver.prototype.getStats"
        },
        "returns": {
          "length": 0,
          "name": "getStats",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpReceiver.getSynchronizationSources",
        "info": {
          "code": "RTCRtpReceiver.prototype.getSynchronizationSources"
        },
        "returns": {
          "length": 0,
          "name": "getSynchronizationSources",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpReceiver.rtcpTransport",
        "info": {
          "code": "'rtcpTransport' in RTCRtpReceiver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCRtpReceiver.track",
        "info": {
          "code": "'track' in RTCRtpReceiver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCRtpReceiver.transport",
        "info": {
          "code": "'transport' in RTCRtpReceiver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCRtpSender",
        "info": {
          "code": "self.RTCRtpSender"
        },
        "returns": {
          "length": 0,
          "name": "RTCRtpSender",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpSender.dtmf",
        "info": {
          "code": "'dtmf' in RTCRtpSender.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCRtpSender.getCapabilities",
        "info": {
          "code": "RTCRtpSender.getCapabilities"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCRtpSender.getParameters",
        "info": {
          "code": "RTCRtpSender.prototype.getParameters"
        },
        "returns": {
          "length": 0,
          "name": "getParameters",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpSender.getStats",
        "info": {
          "code": "RTCRtpSender.prototype.getStats"
        },
        "returns": {
          "length": 0,
          "name": "getStats",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpSender.replaceTrack",
        "info": {
          "code": "RTCRtpSender.prototype.replaceTrack"
        },
        "returns": {
          "length": 1,
          "name": "replaceTrack",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpSender.rtcpTransport",
        "info": {
          "code": "'rtcpTransport' in RTCRtpSender.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCRtpSender.setParameters",
        "info": {
          "code": "RTCRtpSender.prototype.setParameters"
        },
        "returns": {
          "length": 0,
          "name": "setParameters",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpSender.setStreams",
        "info": {
          "code": "RTCRtpSender.prototype.setStreams"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCRtpSender.track",
        "info": {
          "code": "'track' in RTCRtpSender.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCRtpSender.transport",
        "info": {
          "code": "'transport' in RTCRtpSender.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.RTCRtpTransceiver",
        "info": {
          "code": "self.RTCRtpTransceiver"
        },
        "returns": {
          "length": 0,
          "name": "RTCRtpTransceiver",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpTransceiver.currentDirection",
        "info": {
          "code": "'currentDirection' in RTCRtpTransceiver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCRtpTransceiver.direction",
        "info": {
          "code": "'direction' in RTCRtpTransceiver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCRtpTransceiver.mid",
        "info": {
          "code": "'mid' in RTCRtpTransceiver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCRtpTransceiver.receiver",
        "info": {
          "code": "'receiver' in RTCRtpTransceiver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCRtpTransceiver.sender",
        "info": {
          "code": "'sender' in RTCRtpTransceiver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCRtpTransceiver.setCodecPreferences",
        "info": {
          "code": "RTCRtpTransceiver.prototype.setCodecPreferences"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCRtpTransceiver.stop",
        "info": {
          "code": "RTCRtpTransceiver.prototype.stop"
        },
        "returns": {
          "length": 0,
          "name": "stop",
          "type": "function"
        }
      },
      {
        "context": "api.RTCRtpTransceiver.stopped",
        "info": {
          "code": "'stopped' in RTCRtpTransceiver.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCSctpTransport",
        "info": {
          "code": "self.RTCSctpTransport"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCSctpTransport.maxChannels",
        "info": {
          "code": "'maxChannels' in RTCSctpTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCSctpTransport.maxMessageSize",
        "info": {
          "code": "'maxMessageSize' in RTCSctpTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCSctpTransport.onstatechange",
        "info": {
          "code": "'onstatechange' in RTCSctpTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCSctpTransport.state",
        "info": {
          "code": "'state' in RTCSctpTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCSctpTransport.transport",
        "info": {
          "code": "'transport' in RTCSctpTransport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCSessionDescription",
        "info": {
          "code": "self.RTCSessionDescription"
        },
        "returns": {
          "length": 0,
          "name": "RTCSessionDescription",
          "type": "function"
        }
      },
      {
        "context": "api.RTCSessionDescription.sdp",
        "info": {
          "code": "'sdp' in RTCSessionDescription.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCSessionDescription.toJSON",
        "info": {
          "code": "RTCSessionDescription.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.RTCSessionDescription.type",
        "info": {
          "code": "'type' in RTCSessionDescription.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCStatsEvent",
        "info": {
          "code": "self.RTCStatsEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.RTCStatsEvent.report",
        "info": {
          "code": "'report' in RTCStatsEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.RTCStatsReport",
        "info": {
          "code": "self.RTCStatsReport"
        },
        "returns": {
          "length": 0,
          "name": "RTCStatsReport",
          "type": "function"
        }
      },
      {
        "context": "api.RTCTrackEvent",
        "info": {
          "code": "self.RTCTrackEvent"
        },
        "returns": {
          "length": 2,
          "name": "RTCTrackEvent",
          "type": "function"
        }
      },
      {
        "context": "api.RTCTrackEvent.receiver",
        "info": {
          "code": "'receiver' in RTCTrackEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCTrackEvent.streams",
        "info": {
          "code": "'streams' in RTCTrackEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCTrackEvent.track",
        "info": {
          "code": "'track' in RTCTrackEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RTCTrackEvent.transceiver",
        "info": {
          "code": "'transceiver' in RTCTrackEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.RuntimeError",
        "info": {
          "code": "self.RuntimeError"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Screen",
        "info": {
          "code": "self.Screen"
        },
        "returns": {
          "length": 0,
          "name": "Screen",
          "type": "function"
        }
      },
      {
        "context": "api.Screen.availHeight",
        "info": {
          "code": "'availHeight' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Screen.availWidth",
        "info": {
          "code": "'availWidth' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Screen.colorDepth",
        "info": {
          "code": "'colorDepth' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Screen.colorGamut",
        "info": {
          "code": "'colorGamut' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Screen.height",
        "info": {
          "code": "'height' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Screen.luminance",
        "info": {
          "code": "'luminance' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Screen.onchange",
        "info": {
          "code": "'onchange' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Screen.orientation",
        "info": {
          "code": "'orientation' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Screen.pixelDepth",
        "info": {
          "code": "'pixelDepth' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Screen.width",
        "info": {
          "code": "'width' in Screen.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ScreenLuminance",
        "info": {
          "code": "self.ScreenLuminance"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ScreenLuminance.max",
        "info": {
          "code": "'max' in ScreenLuminance.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ScreenLuminance.maxAverage",
        "info": {
          "code": "'maxAverage' in ScreenLuminance.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ScreenLuminance.min",
        "info": {
          "code": "'min' in ScreenLuminance.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ScreenOrientation",
        "info": {
          "code": "self.ScreenOrientation"
        },
        "returns": {
          "length": 0,
          "name": "ScreenOrientation",
          "type": "function"
        }
      },
      {
        "context": "api.ScreenOrientation.angle",
        "info": {
          "code": "'angle' in ScreenOrientation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ScreenOrientation.lock",
        "info": {
          "code": "ScreenOrientation.prototype.lock"
        },
        "returns": {
          "length": 1,
          "name": "lock",
          "type": "function"
        }
      },
      {
        "context": "api.ScreenOrientation.onchange",
        "info": {
          "code": "'onchange' in ScreenOrientation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ScreenOrientation.type",
        "info": {
          "code": "'type' in ScreenOrientation.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ScreenOrientation.unlock",
        "info": {
          "code": "ScreenOrientation.prototype.unlock"
        },
        "returns": {
          "length": 0,
          "name": "unlock",
          "type": "function"
        }
      },
      {
        "context": "api.ScriptProcessorNode",
        "info": {
          "code": "self.ScriptProcessorNode"
        },
        "returns": {
          "length": 0,
          "name": "ScriptProcessorNode",
          "type": "function"
        }
      },
      {
        "context": "api.ScriptProcessorNode.bufferSize",
        "info": {
          "code": "'bufferSize' in ScriptProcessorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ScriptProcessorNode.onaudioprocess",
        "info": {
          "code": "'onaudioprocess' in ScriptProcessorNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ScrollTimeline",
        "info": {
          "code": "self.ScrollTimeline"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ScrollTimeline.endScrollOffset",
        "info": {
          "code": "'endScrollOffset' in ScrollTimeline.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ScrollTimeline.fill",
        "info": {
          "code": "'fill' in ScrollTimeline.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ScrollTimeline.orientation",
        "info": {
          "code": "'orientation' in ScrollTimeline.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ScrollTimeline.scrollSource",
        "info": {
          "code": "'scrollSource' in ScrollTimeline.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ScrollTimeline.startScrollOffset",
        "info": {
          "code": "'startScrollOffset' in ScrollTimeline.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ScrollTimeline.timeRange",
        "info": {
          "code": "'timeRange' in ScrollTimeline.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent",
        "info": {
          "code": "self.SecurityPolicyViolationEvent"
        },
        "returns": {
          "length": 1,
          "name": "SecurityPolicyViolationEvent",
          "type": "function"
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.blockedURI",
        "info": {
          "code": "'blockedURI' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.blockedURL",
        "info": {
          "code": "'blockedURL' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.colno",
        "info": {
          "code": "'colno' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.columnNumber",
        "info": {
          "code": "'columnNumber' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.disposition",
        "info": {
          "code": "'disposition' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.documentURI",
        "info": {
          "code": "'documentURI' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.documentURL",
        "info": {
          "code": "'documentURL' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.effectiveDirective",
        "info": {
          "code": "'effectiveDirective' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.lineno",
        "info": {
          "code": "'lineno' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.lineNumber",
        "info": {
          "code": "'lineNumber' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.originalPolicy",
        "info": {
          "code": "'originalPolicy' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.referrer",
        "info": {
          "code": "'referrer' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.sample",
        "info": {
          "code": "'sample' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.sourceFile",
        "info": {
          "code": "'sourceFile' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.statusCode",
        "info": {
          "code": "'statusCode' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SecurityPolicyViolationEvent.violatedDirective",
        "info": {
          "code": "'violatedDirective' in SecurityPolicyViolationEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Selection",
        "info": {
          "code": "self.Selection"
        },
        "returns": {
          "length": 0,
          "name": "Selection",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.addRange",
        "info": {
          "code": "Selection.prototype.addRange"
        },
        "returns": {
          "length": 1,
          "name": "addRange",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.anchorNode",
        "info": {
          "code": "'anchorNode' in Selection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Selection.anchorOffset",
        "info": {
          "code": "'anchorOffset' in Selection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Selection.collapse",
        "info": {
          "code": "Selection.prototype.collapse"
        },
        "returns": {
          "length": 1,
          "name": "collapse",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.collapseToEnd",
        "info": {
          "code": "Selection.prototype.collapseToEnd"
        },
        "returns": {
          "length": 0,
          "name": "collapseToEnd",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.collapseToStart",
        "info": {
          "code": "Selection.prototype.collapseToStart"
        },
        "returns": {
          "length": 0,
          "name": "collapseToStart",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.containsNode",
        "info": {
          "code": "Selection.prototype.containsNode"
        },
        "returns": {
          "length": 1,
          "name": "containsNode",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.deleteFromDocument",
        "info": {
          "code": "Selection.prototype.deleteFromDocument"
        },
        "returns": {
          "length": 0,
          "name": "deleteFromDocument",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.empty",
        "info": {
          "code": "Selection.prototype.empty"
        },
        "returns": {
          "length": 0,
          "name": "empty",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.extend",
        "info": {
          "code": "Selection.prototype.extend"
        },
        "returns": {
          "length": 1,
          "name": "extend",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.focusNode",
        "info": {
          "code": "'focusNode' in Selection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Selection.focusOffset",
        "info": {
          "code": "'focusOffset' in Selection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Selection.getRangeAt",
        "info": {
          "code": "Selection.prototype.getRangeAt"
        },
        "returns": {
          "length": 1,
          "name": "getRangeAt",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.isCollapsed",
        "info": {
          "code": "'isCollapsed' in Selection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Selection.rangeCount",
        "info": {
          "code": "'rangeCount' in Selection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Selection.removeAllRanges",
        "info": {
          "code": "Selection.prototype.removeAllRanges"
        },
        "returns": {
          "length": 0,
          "name": "removeAllRanges",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.removeRange",
        "info": {
          "code": "Selection.prototype.removeRange"
        },
        "returns": {
          "length": 1,
          "name": "removeRange",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.selectAllChildren",
        "info": {
          "code": "Selection.prototype.selectAllChildren"
        },
        "returns": {
          "length": 1,
          "name": "selectAllChildren",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.setBaseAndExtent",
        "info": {
          "code": "Selection.prototype.setBaseAndExtent"
        },
        "returns": {
          "length": 4,
          "name": "setBaseAndExtent",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.setPosition",
        "info": {
          "code": "Selection.prototype.setPosition"
        },
        "returns": {
          "length": 1,
          "name": "setPosition",
          "type": "function"
        }
      },
      {
        "context": "api.Selection.type",
        "info": {
          "code": "'type' in Selection.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Sensor",
        "info": {
          "code": "self.Sensor"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Sensor.activated",
        "info": {
          "code": "'activated' in Sensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Sensor.hasReading",
        "info": {
          "code": "'hasReading' in Sensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Sensor.onactivate",
        "info": {
          "code": "'onactivate' in Sensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Sensor.onerror",
        "info": {
          "code": "'onerror' in Sensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Sensor.onreading",
        "info": {
          "code": "'onreading' in Sensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Sensor.start",
        "info": {
          "code": "Sensor.prototype.start"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Sensor.stop",
        "info": {
          "code": "Sensor.prototype.stop"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Sensor.timestamp",
        "info": {
          "code": "'timestamp' in Sensor.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SensorErrorEvent",
        "info": {
          "code": "self.SensorErrorEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SensorErrorEvent.error",
        "info": {
          "code": "'error' in SensorErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorker",
        "info": {
          "code": "self.ServiceWorker"
        },
        "returns": {
          "length": 0,
          "name": "ServiceWorker",
          "type": "function"
        }
      },
      {
        "context": "api.ServiceWorker.onerror",
        "info": {
          "code": "'onerror' in ServiceWorker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ServiceWorker.onstatechange",
        "info": {
          "code": "'onstatechange' in ServiceWorker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ServiceWorker.postMessage",
        "info": {
          "code": "ServiceWorker.prototype.postMessage"
        },
        "returns": {
          "length": 1,
          "name": "postMessage",
          "type": "function"
        }
      },
      {
        "context": "api.ServiceWorker.scriptURL",
        "info": {
          "code": "'scriptURL' in ServiceWorker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ServiceWorker.state",
        "info": {
          "code": "'state' in ServiceWorker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ServiceWorkerContainer",
        "info": {
          "code": "self.ServiceWorkerContainer"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ServiceWorkerContainer.controller",
        "info": {
          "code": "'controller' in ServiceWorkerContainer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerContainer.getRegistration",
        "info": {
          "code": "ServiceWorkerContainer.prototype.getRegistration"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerContainer.getRegistrations",
        "info": {
          "code": "ServiceWorkerContainer.prototype.getRegistrations"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerContainer.oncontrollerchange",
        "info": {
          "code": "'oncontrollerchange' in ServiceWorkerContainer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerContainer.onmessage",
        "info": {
          "code": "'onmessage' in ServiceWorkerContainer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerContainer.onmessageerror",
        "info": {
          "code": "'onmessageerror' in ServiceWorkerContainer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerContainer.ready",
        "info": {
          "code": "'ready' in ServiceWorkerContainer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerContainer.register",
        "info": {
          "code": "ServiceWorkerContainer.prototype.register"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerContainer.startMessages",
        "info": {
          "code": "ServiceWorkerContainer.prototype.startMessages"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope",
        "info": {
          "code": "self.ServiceWorkerGlobalScope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.clients",
        "info": {
          "code": "'clients' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.cookieStore",
        "info": {
          "code": "'cookieStore' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onactivate",
        "info": {
          "code": "'onactivate' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onbackgroundfetchabort",
        "info": {
          "code": "'onbackgroundfetchabort' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onbackgroundfetchclick",
        "info": {
          "code": "'onbackgroundfetchclick' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onbackgroundfetchfail",
        "info": {
          "code": "'onbackgroundfetchfail' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onbackgroundfetchsuccess",
        "info": {
          "code": "'onbackgroundfetchsuccess' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.oncanmakepayment",
        "info": {
          "code": "'oncanmakepayment' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.oncookiechange",
        "info": {
          "code": "'oncookiechange' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onfetch",
        "info": {
          "code": "'onfetch' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.oninstall",
        "info": {
          "code": "'oninstall' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onmessage",
        "info": {
          "code": "'onmessage' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onmessageerror",
        "info": {
          "code": "'onmessageerror' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onnotificationclick",
        "info": {
          "code": "'onnotificationclick' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onnotificationclose",
        "info": {
          "code": "'onnotificationclose' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onpaymentrequest",
        "info": {
          "code": "'onpaymentrequest' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onpush",
        "info": {
          "code": "'onpush' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onpushsubscriptionchange",
        "info": {
          "code": "'onpushsubscriptionchange' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.onsync",
        "info": {
          "code": "'onsync' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.registration",
        "info": {
          "code": "'registration' in ServiceWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerGlobalScope.skipWaiting",
        "info": {
          "code": "ServiceWorkerGlobalScope.prototype.skipWaiting"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ServiceWorkerRegistration",
        "info": {
          "code": "self.ServiceWorkerRegistration"
        },
        "returns": {
          "length": 0,
          "name": "ServiceWorkerRegistration",
          "type": "function"
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.active",
        "info": {
          "code": "'active' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.backgroundFetch",
        "info": {
          "code": "'backgroundFetch' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.getNotifications",
        "info": {
          "code": "ServiceWorkerRegistration.prototype.getNotifications"
        },
        "returns": {
          "length": 0,
          "name": "getNotifications",
          "type": "function"
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.installing",
        "info": {
          "code": "'installing' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.onupdatefound",
        "info": {
          "code": "'onupdatefound' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.paymentManager",
        "info": {
          "code": "'paymentManager' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.pushManager",
        "info": {
          "code": "'pushManager' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.scope",
        "info": {
          "code": "'scope' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.showNotification",
        "info": {
          "code": "ServiceWorkerRegistration.prototype.showNotification"
        },
        "returns": {
          "length": 1,
          "name": "showNotification",
          "type": "function"
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.sync",
        "info": {
          "code": "'sync' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.unregister",
        "info": {
          "code": "ServiceWorkerRegistration.prototype.unregister"
        },
        "returns": {
          "length": 0,
          "name": "unregister",
          "type": "function"
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.update",
        "info": {
          "code": "ServiceWorkerRegistration.prototype.update"
        },
        "returns": {
          "length": 0,
          "name": "update",
          "type": "function"
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.updateViaCache",
        "info": {
          "code": "'updateViaCache' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ServiceWorkerRegistration.waiting",
        "info": {
          "code": "'waiting' in ServiceWorkerRegistration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.ShadowAnimation",
        "info": {
          "code": "self.ShadowAnimation"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ShadowAnimation.sourceAnimation",
        "info": {
          "code": "'sourceAnimation' in ShadowAnimation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ShadowRoot",
        "info": {
          "code": "self.ShadowRoot"
        },
        "returns": {
          "length": 0,
          "name": "ShadowRoot",
          "type": "function"
        }
      },
      {
        "context": "api.ShadowRoot.fullscreenElement",
        "info": {
          "code": "'fullscreenElement' in ShadowRoot.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ShadowRoot.host",
        "info": {
          "code": "'host' in ShadowRoot.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ShadowRoot.mode",
        "info": {
          "code": "'mode' in ShadowRoot.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ShadowRoot.pictureInPictureElement",
        "info": {
          "code": "'pictureInPictureElement' in ShadowRoot.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.ShadowRoot.pointerLockElement",
        "info": {
          "code": "'pointerLockElement' in ShadowRoot.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ShadowRoot.styleSheets",
        "info": {
          "code": "'styleSheets' in ShadowRoot.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SharedWorker",
        "info": {
          "code": "self.SharedWorker"
        },
        "returns": {
          "length": 1,
          "name": "SharedWorker",
          "type": "function"
        }
      },
      {
        "context": "api.SharedWorker.onerror",
        "info": {
          "code": "'onerror' in SharedWorker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SharedWorker.port",
        "info": {
          "code": "'port' in SharedWorker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SharedWorkerGlobalScope",
        "info": {
          "code": "self.SharedWorkerGlobalScope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SharedWorkerGlobalScope.close",
        "info": {
          "code": "SharedWorkerGlobalScope.prototype.close"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SharedWorkerGlobalScope.name",
        "info": {
          "code": "'name' in SharedWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SharedWorkerGlobalScope.onconnect",
        "info": {
          "code": "'onconnect' in SharedWorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SourceBuffer",
        "info": {
          "code": "self.SourceBuffer"
        },
        "returns": {
          "length": 0,
          "name": "SourceBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.SourceBuffer.abort",
        "info": {
          "code": "SourceBuffer.prototype.abort"
        },
        "returns": {
          "length": 0,
          "name": "abort",
          "type": "function"
        }
      },
      {
        "context": "api.SourceBuffer.appendBuffer",
        "info": {
          "code": "SourceBuffer.prototype.appendBuffer"
        },
        "returns": {
          "length": 1,
          "name": "appendBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.SourceBuffer.appendWindowEnd",
        "info": {
          "code": "'appendWindowEnd' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.appendWindowStart",
        "info": {
          "code": "'appendWindowStart' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.audioTracks",
        "info": {
          "code": "'audioTracks' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SourceBuffer.buffered",
        "info": {
          "code": "'buffered' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.mode",
        "info": {
          "code": "'mode' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.onabort",
        "info": {
          "code": "'onabort' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.onerror",
        "info": {
          "code": "'onerror' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.onupdate",
        "info": {
          "code": "'onupdate' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.onupdateend",
        "info": {
          "code": "'onupdateend' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.onupdatestart",
        "info": {
          "code": "'onupdatestart' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.remove",
        "info": {
          "code": "SourceBuffer.prototype.remove"
        },
        "returns": {
          "length": 2,
          "name": "remove",
          "type": "function"
        }
      },
      {
        "context": "api.SourceBuffer.textTracks",
        "info": {
          "code": "'textTracks' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SourceBuffer.timestampOffset",
        "info": {
          "code": "'timestampOffset' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.updating",
        "info": {
          "code": "'updating' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBuffer.videoTracks",
        "info": {
          "code": "'videoTracks' in SourceBuffer.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SourceBufferList",
        "info": {
          "code": "self.SourceBufferList"
        },
        "returns": {
          "length": 0,
          "name": "SourceBufferList",
          "type": "function"
        }
      },
      {
        "context": "api.SourceBufferList.length",
        "info": {
          "code": "'length' in SourceBufferList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBufferList.onaddsourcebuffer",
        "info": {
          "code": "'onaddsourcebuffer' in SourceBufferList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SourceBufferList.onremovesourcebuffer",
        "info": {
          "code": "'onremovesourcebuffer' in SourceBufferList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechGrammar",
        "info": {
          "code": "self.SpeechGrammar"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SpeechGrammar.src",
        "info": {
          "code": "'src' in SpeechGrammar.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechGrammar.weight",
        "info": {
          "code": "'weight' in SpeechGrammar.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechGrammarList",
        "info": {
          "code": "self.SpeechGrammarList"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SpeechGrammarList.addFromString",
        "info": {
          "code": "SpeechGrammarList.prototype.addFromString"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechGrammarList.addFromURI",
        "info": {
          "code": "SpeechGrammarList.prototype.addFromURI"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechGrammarList.item",
        "info": {
          "code": "SpeechGrammarList.prototype.item"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechGrammarList.length",
        "info": {
          "code": "'length' in SpeechGrammarList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition",
        "info": {
          "code": "self.SpeechRecognition"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SpeechRecognition.abort",
        "info": {
          "code": "SpeechRecognition.prototype.abort"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.continuous",
        "info": {
          "code": "'continuous' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.grammars",
        "info": {
          "code": "'grammars' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.interimResults",
        "info": {
          "code": "'interimResults' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.lang",
        "info": {
          "code": "'lang' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.maxAlternatives",
        "info": {
          "code": "'maxAlternatives' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onaudioend",
        "info": {
          "code": "'onaudioend' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onaudiostart",
        "info": {
          "code": "'onaudiostart' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onend",
        "info": {
          "code": "'onend' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onerror",
        "info": {
          "code": "'onerror' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onnomatch",
        "info": {
          "code": "'onnomatch' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onresult",
        "info": {
          "code": "'onresult' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onsoundend",
        "info": {
          "code": "'onsoundend' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onsoundstart",
        "info": {
          "code": "'onsoundstart' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onspeechend",
        "info": {
          "code": "'onspeechend' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onspeechstart",
        "info": {
          "code": "'onspeechstart' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.onstart",
        "info": {
          "code": "'onstart' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.serviceURI",
        "info": {
          "code": "'serviceURI' in SpeechRecognition.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.start",
        "info": {
          "code": "SpeechRecognition.prototype.start"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognition.stop",
        "info": {
          "code": "SpeechRecognition.prototype.stop"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionAlternative",
        "info": {
          "code": "self.SpeechRecognitionAlternative"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SpeechRecognitionAlternative.confidence",
        "info": {
          "code": "'confidence' in SpeechRecognitionAlternative.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionAlternative.transcript",
        "info": {
          "code": "'transcript' in SpeechRecognitionAlternative.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionErrorEvent",
        "info": {
          "code": "self.SpeechRecognitionErrorEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SpeechRecognitionErrorEvent.error",
        "info": {
          "code": "'error' in SpeechRecognitionErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionErrorEvent.message",
        "info": {
          "code": "'message' in SpeechRecognitionErrorEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionEvent",
        "info": {
          "code": "self.SpeechRecognitionEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SpeechRecognitionEvent.emma",
        "info": {
          "code": "'emma' in SpeechRecognitionEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionEvent.interpretation",
        "info": {
          "code": "'interpretation' in SpeechRecognitionEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionEvent.resultIndex",
        "info": {
          "code": "'resultIndex' in SpeechRecognitionEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionEvent.results",
        "info": {
          "code": "'results' in SpeechRecognitionEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionResult",
        "info": {
          "code": "self.SpeechRecognitionResult"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SpeechRecognitionResult.isFinal",
        "info": {
          "code": "'isFinal' in SpeechRecognitionResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionResult.item",
        "info": {
          "code": "SpeechRecognitionResult.prototype.item"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionResult.length",
        "info": {
          "code": "'length' in SpeechRecognitionResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionResultList",
        "info": {
          "code": "self.SpeechRecognitionResultList"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SpeechRecognitionResultList.item",
        "info": {
          "code": "SpeechRecognitionResultList.prototype.item"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechRecognitionResultList.length",
        "info": {
          "code": "'length' in SpeechRecognitionResultList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SpeechSynthesis",
        "info": {
          "code": "self.SpeechSynthesis"
        },
        "returns": {
          "length": 0,
          "name": "SpeechSynthesis",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesis.cancel",
        "info": {
          "code": "SpeechSynthesis.prototype.cancel"
        },
        "returns": {
          "length": 0,
          "name": "cancel",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesis.getVoices",
        "info": {
          "code": "SpeechSynthesis.prototype.getVoices"
        },
        "returns": {
          "length": 0,
          "name": "getVoices",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesis.onvoiceschanged",
        "info": {
          "code": "'onvoiceschanged' in SpeechSynthesis.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesis.pause",
        "info": {
          "code": "SpeechSynthesis.prototype.pause"
        },
        "returns": {
          "length": 0,
          "name": "pause",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesis.paused",
        "info": {
          "code": "'paused' in SpeechSynthesis.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesis.pending",
        "info": {
          "code": "'pending' in SpeechSynthesis.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesis.resume",
        "info": {
          "code": "SpeechSynthesis.prototype.resume"
        },
        "returns": {
          "length": 0,
          "name": "resume",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesis.speak",
        "info": {
          "code": "SpeechSynthesis.prototype.speak"
        },
        "returns": {
          "length": 1,
          "name": "speak",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesis.speaking",
        "info": {
          "code": "'speaking' in SpeechSynthesis.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisErrorEvent",
        "info": {
          "code": "self.SpeechSynthesisErrorEvent"
        },
        "returns": {
          "length": 2,
          "name": "SpeechSynthesisErrorEvent",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesisErrorEvent.error",
        "info": {
          "code": "'error' in SpeechSynthesisErrorEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisEvent",
        "info": {
          "code": "self.SpeechSynthesisEvent"
        },
        "returns": {
          "length": 2,
          "name": "SpeechSynthesisEvent",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesisEvent.charIndex",
        "info": {
          "code": "'charIndex' in SpeechSynthesisEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisEvent.elapsedTime",
        "info": {
          "code": "'elapsedTime' in SpeechSynthesisEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisEvent.name",
        "info": {
          "code": "'name' in SpeechSynthesisEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisEvent.utterance",
        "info": {
          "code": "'utterance' in SpeechSynthesisEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance",
        "info": {
          "code": "self.SpeechSynthesisUtterance"
        },
        "returns": {
          "length": 0,
          "name": "SpeechSynthesisUtterance",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.lang",
        "info": {
          "code": "'lang' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.onboundary",
        "info": {
          "code": "'onboundary' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.onend",
        "info": {
          "code": "'onend' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.onerror",
        "info": {
          "code": "'onerror' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.onmark",
        "info": {
          "code": "'onmark' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.onpause",
        "info": {
          "code": "'onpause' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.onresume",
        "info": {
          "code": "'onresume' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.onstart",
        "info": {
          "code": "'onstart' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.pitch",
        "info": {
          "code": "'pitch' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.rate",
        "info": {
          "code": "'rate' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.text",
        "info": {
          "code": "'text' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.voice",
        "info": {
          "code": "'voice' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisUtterance.volume",
        "info": {
          "code": "'volume' in SpeechSynthesisUtterance.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisVoice",
        "info": {
          "code": "self.SpeechSynthesisVoice"
        },
        "returns": {
          "length": 0,
          "name": "SpeechSynthesisVoice",
          "type": "function"
        }
      },
      {
        "context": "api.SpeechSynthesisVoice.default",
        "info": {
          "code": "'default' in SpeechSynthesisVoice.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisVoice.lang",
        "info": {
          "code": "'lang' in SpeechSynthesisVoice.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisVoice.localService",
        "info": {
          "code": "'localService' in SpeechSynthesisVoice.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisVoice.name",
        "info": {
          "code": "'name' in SpeechSynthesisVoice.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SpeechSynthesisVoice.voiceURI",
        "info": {
          "code": "'voiceURI' in SpeechSynthesisVoice.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StaticRange",
        "info": {
          "code": "self.StaticRange"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.StereoPannerNode",
        "info": {
          "code": "self.StereoPannerNode"
        },
        "returns": {
          "length": 1,
          "name": "StereoPannerNode",
          "type": "function"
        }
      },
      {
        "context": "api.StereoPannerNode.pan",
        "info": {
          "code": "'pan' in StereoPannerNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Storage",
        "info": {
          "code": "self.Storage"
        },
        "returns": {
          "length": 0,
          "name": "Storage",
          "type": "function"
        }
      },
      {
        "context": "api.Storage.clear",
        "info": {
          "code": "Storage.prototype.clear"
        },
        "returns": {
          "length": 0,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.Storage.getItem",
        "info": {
          "code": "Storage.prototype.getItem"
        },
        "returns": {
          "length": 1,
          "name": "getItem",
          "type": "function"
        }
      },
      {
        "context": "api.Storage.key",
        "info": {
          "code": "Storage.prototype.key"
        },
        "returns": {
          "length": 1,
          "name": "key",
          "type": "function"
        }
      },
      {
        "context": "api.Storage.length",
        "info": {
          "code": "'length' in Storage.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Storage.removeItem",
        "info": {
          "code": "Storage.prototype.removeItem"
        },
        "returns": {
          "length": 1,
          "name": "removeItem",
          "type": "function"
        }
      },
      {
        "context": "api.Storage.setItem",
        "info": {
          "code": "Storage.prototype.setItem"
        },
        "returns": {
          "length": 2,
          "name": "setItem",
          "type": "function"
        }
      },
      {
        "context": "api.StorageEvent",
        "info": {
          "code": "self.StorageEvent"
        },
        "returns": {
          "length": 1,
          "name": "StorageEvent",
          "type": "function"
        }
      },
      {
        "context": "api.StorageEvent.initStorageEvent",
        "info": {
          "code": "StorageEvent.prototype.initStorageEvent"
        },
        "returns": {
          "length": 1,
          "name": "initStorageEvent",
          "type": "function"
        }
      },
      {
        "context": "api.StorageEvent.key",
        "info": {
          "code": "'key' in StorageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StorageEvent.newValue",
        "info": {
          "code": "'newValue' in StorageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StorageEvent.oldValue",
        "info": {
          "code": "'oldValue' in StorageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StorageEvent.storageArea",
        "info": {
          "code": "'storageArea' in StorageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StorageEvent.url",
        "info": {
          "code": "'url' in StorageEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StorageManager",
        "info": {
          "code": "self.StorageManager"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.StorageManager.estimate",
        "info": {
          "code": "StorageManager.prototype.estimate"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StorageManager.persist",
        "info": {
          "code": "StorageManager.prototype.persist"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StorageManager.persisted",
        "info": {
          "code": "StorageManager.prototype.persisted"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StylePropertyMap",
        "info": {
          "code": "self.StylePropertyMap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.StylePropertyMap.append",
        "info": {
          "code": "StylePropertyMap.prototype.append"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StylePropertyMap.clear",
        "info": {
          "code": "StylePropertyMap.prototype.clear"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StylePropertyMap.delete",
        "info": {
          "code": "StylePropertyMap.prototype.delete"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StylePropertyMap.set",
        "info": {
          "code": "StylePropertyMap.prototype.set"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StylePropertyMapReadOnly",
        "info": {
          "code": "self.StylePropertyMapReadOnly"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.StylePropertyMapReadOnly.get",
        "info": {
          "code": "StylePropertyMapReadOnly.prototype.get"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StylePropertyMapReadOnly.getAll",
        "info": {
          "code": "StylePropertyMapReadOnly.prototype.getAll"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StylePropertyMapReadOnly.has",
        "info": {
          "code": "StylePropertyMapReadOnly.prototype.has"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StylePropertyMapReadOnly.size",
        "info": {
          "code": "'size' in StylePropertyMapReadOnly.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.StyleSheet",
        "info": {
          "code": "self.StyleSheet"
        },
        "returns": {
          "length": 0,
          "name": "StyleSheet",
          "type": "function"
        }
      },
      {
        "context": "api.StyleSheet.disabled",
        "info": {
          "code": "'disabled' in StyleSheet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StyleSheet.href",
        "info": {
          "code": "'href' in StyleSheet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StyleSheet.media",
        "info": {
          "code": "'media' in StyleSheet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StyleSheet.ownerNode",
        "info": {
          "code": "'ownerNode' in StyleSheet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StyleSheet.parentStyleSheet",
        "info": {
          "code": "'parentStyleSheet' in StyleSheet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StyleSheet.title",
        "info": {
          "code": "'title' in StyleSheet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StyleSheet.type",
        "info": {
          "code": "'type' in StyleSheet.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.StyleSheetList",
        "info": {
          "code": "self.StyleSheetList"
        },
        "returns": {
          "length": 0,
          "name": "StyleSheetList",
          "type": "function"
        }
      },
      {
        "context": "api.StyleSheetList.item",
        "info": {
          "code": "StyleSheetList.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.StyleSheetList.length",
        "info": {
          "code": "'length' in StyleSheetList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SubtleCrypto",
        "info": {
          "code": "self.SubtleCrypto"
        },
        "returns": {
          "length": 0,
          "name": "SubtleCrypto",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.decrypt",
        "info": {
          "code": "SubtleCrypto.prototype.decrypt"
        },
        "returns": {
          "length": 3,
          "name": "decrypt",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.deriveBits",
        "info": {
          "code": "SubtleCrypto.prototype.deriveBits"
        },
        "returns": {
          "length": 3,
          "name": "deriveBits",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.deriveKey",
        "info": {
          "code": "SubtleCrypto.prototype.deriveKey"
        },
        "returns": {
          "length": 5,
          "name": "deriveKey",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.digest",
        "info": {
          "code": "SubtleCrypto.prototype.digest"
        },
        "returns": {
          "length": 2,
          "name": "digest",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.encrypt",
        "info": {
          "code": "SubtleCrypto.prototype.encrypt"
        },
        "returns": {
          "length": 3,
          "name": "encrypt",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.exportKey",
        "info": {
          "code": "SubtleCrypto.prototype.exportKey"
        },
        "returns": {
          "length": 2,
          "name": "exportKey",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.generateKey",
        "info": {
          "code": "SubtleCrypto.prototype.generateKey"
        },
        "returns": {
          "length": 3,
          "name": "generateKey",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.importKey",
        "info": {
          "code": "SubtleCrypto.prototype.importKey"
        },
        "returns": {
          "length": 5,
          "name": "importKey",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.sign",
        "info": {
          "code": "SubtleCrypto.prototype.sign"
        },
        "returns": {
          "length": 3,
          "name": "sign",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.unwrapKey",
        "info": {
          "code": "SubtleCrypto.prototype.unwrapKey"
        },
        "returns": {
          "length": 7,
          "name": "unwrapKey",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.verify",
        "info": {
          "code": "SubtleCrypto.prototype.verify"
        },
        "returns": {
          "length": 4,
          "name": "verify",
          "type": "function"
        }
      },
      {
        "context": "api.SubtleCrypto.wrapKey",
        "info": {
          "code": "SubtleCrypto.prototype.wrapKey"
        },
        "returns": {
          "length": 4,
          "name": "wrapKey",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAElement",
        "info": {
          "code": "self.SVGAElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGAElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAElement.download",
        "info": {
          "code": "'download' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.hash",
        "info": {
          "code": "'hash' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAElement.host",
        "info": {
          "code": "'host' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAElement.hostname",
        "info": {
          "code": "'hostname' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAElement.href",
        "info": {
          "code": "'href' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.href",
        "info": {
          "code": "'href' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.hreflang",
        "info": {
          "code": "'hreflang' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.origin",
        "info": {
          "code": "'origin' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAElement.password",
        "info": {
          "code": "'password' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAElement.pathname",
        "info": {
          "code": "'pathname' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAElement.ping",
        "info": {
          "code": "'ping' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.port",
        "info": {
          "code": "'port' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAElement.protocol",
        "info": {
          "code": "'protocol' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAElement.referrerPolicy",
        "info": {
          "code": "'referrerPolicy' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.rel",
        "info": {
          "code": "'rel' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.relList",
        "info": {
          "code": "'relList' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.search",
        "info": {
          "code": "'search' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAElement.target",
        "info": {
          "code": "'target' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.text",
        "info": {
          "code": "'text' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.type",
        "info": {
          "code": "'type' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAElement.username",
        "info": {
          "code": "'username' in SVGAElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGAngle",
        "info": {
          "code": "self.SVGAngle"
        },
        "returns": {
          "length": 0,
          "name": "SVGAngle",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAngle.convertToSpecifiedUnits",
        "info": {
          "code": "SVGAngle.prototype.convertToSpecifiedUnits"
        },
        "returns": {
          "length": 1,
          "name": "convertToSpecifiedUnits",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAngle.newValueSpecifiedUnits",
        "info": {
          "code": "SVGAngle.prototype.newValueSpecifiedUnits"
        },
        "returns": {
          "length": 2,
          "name": "newValueSpecifiedUnits",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAngle.SVG_ANGLETYPE_DEG",
        "info": {
          "code": "SVGAngle.SVG_ANGLETYPE_DEG"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGAngle.SVG_ANGLETYPE_GRAD",
        "info": {
          "code": "SVGAngle.SVG_ANGLETYPE_GRAD"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.SVGAngle.SVG_ANGLETYPE_RAD",
        "info": {
          "code": "SVGAngle.SVG_ANGLETYPE_RAD"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGAngle.SVG_ANGLETYPE_UNKNOWN",
        "info": {
          "code": "SVGAngle.SVG_ANGLETYPE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGAngle.SVG_ANGLETYPE_UNSPECIFIED",
        "info": {
          "code": "SVGAngle.SVG_ANGLETYPE_UNSPECIFIED"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGAngle.unitType",
        "info": {
          "code": "'unitType' in SVGAngle.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAngle.value",
        "info": {
          "code": "'value' in SVGAngle.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAngle.valueAsString",
        "info": {
          "code": "'valueAsString' in SVGAngle.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAngle.valueInSpecifiedUnits",
        "info": {
          "code": "'valueInSpecifiedUnits' in SVGAngle.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedAngle",
        "info": {
          "code": "self.SVGAnimatedAngle"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedAngle",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedAngle.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedAngle.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedAngle.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedAngle.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedBoolean",
        "info": {
          "code": "self.SVGAnimatedBoolean"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedBoolean",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedBoolean.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedBoolean.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedBoolean.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedBoolean.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedEnumeration",
        "info": {
          "code": "self.SVGAnimatedEnumeration"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedEnumeration",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedEnumeration.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedEnumeration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedEnumeration.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedEnumeration.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedInteger",
        "info": {
          "code": "self.SVGAnimatedInteger"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedInteger",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedInteger.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedInteger.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedInteger.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedInteger.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedLength",
        "info": {
          "code": "self.SVGAnimatedLength"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedLength",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedLength.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedLength.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedLength.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedLength.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedLengthList",
        "info": {
          "code": "self.SVGAnimatedLengthList"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedLengthList",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedLengthList.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedLengthList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedLengthList.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedLengthList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedNumber",
        "info": {
          "code": "self.SVGAnimatedNumber"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedNumber",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedNumber.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedNumber.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedNumber.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedNumber.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedNumberList",
        "info": {
          "code": "self.SVGAnimatedNumberList"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedNumberList",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedNumberList.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedNumberList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedNumberList.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedNumberList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedPreserveAspectRatio",
        "info": {
          "code": "self.SVGAnimatedPreserveAspectRatio"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedPreserveAspectRatio",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedPreserveAspectRatio.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedPreserveAspectRatio.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedPreserveAspectRatio.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedPreserveAspectRatio.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedRect",
        "info": {
          "code": "self.SVGAnimatedRect"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedRect",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedRect.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedRect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedRect.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedRect.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedString",
        "info": {
          "code": "self.SVGAnimatedString"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedString",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedString.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedString.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedString.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedString.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedTransformList",
        "info": {
          "code": "self.SVGAnimatedTransformList"
        },
        "returns": {
          "length": 0,
          "name": "SVGAnimatedTransformList",
          "type": "function"
        }
      },
      {
        "context": "api.SVGAnimatedTransformList.animVal",
        "info": {
          "code": "'animVal' in SVGAnimatedTransformList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGAnimatedTransformList.baseVal",
        "info": {
          "code": "'baseVal' in SVGAnimatedTransformList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGCircleElement",
        "info": {
          "code": "self.SVGCircleElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGCircleElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGCircleElement.cx",
        "info": {
          "code": "'cx' in SVGCircleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGCircleElement.cy",
        "info": {
          "code": "'cy' in SVGCircleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGCircleElement.r",
        "info": {
          "code": "'r' in SVGCircleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGClipPathElement",
        "info": {
          "code": "self.SVGClipPathElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGClipPathElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGClipPathElement.clipPathUnits",
        "info": {
          "code": "'clipPathUnits' in SVGClipPathElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGClipPathElement.transform",
        "info": {
          "code": "'transform' in SVGClipPathElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement",
        "info": {
          "code": "self.SVGComponentTransferFunctionElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGComponentTransferFunctionElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.amplitude",
        "info": {
          "code": "'amplitude' in SVGComponentTransferFunctionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.exponent",
        "info": {
          "code": "'exponent' in SVGComponentTransferFunctionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.intercept",
        "info": {
          "code": "'intercept' in SVGComponentTransferFunctionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.offset",
        "info": {
          "code": "'offset' in SVGComponentTransferFunctionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.slope",
        "info": {
          "code": "'slope' in SVGComponentTransferFunctionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
        "info": {
          "code": "SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
        "info": {
          "code": "SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
        "info": {
          "code": "SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
        "info": {
          "code": "SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
        "info": {
          "code": "SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_TABLE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
        "info": {
          "code": "SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.tableValues",
        "info": {
          "code": "'tableValues' in SVGComponentTransferFunctionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGComponentTransferFunctionElement.type",
        "info": {
          "code": "'type' in SVGComponentTransferFunctionElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGDefsElement",
        "info": {
          "code": "self.SVGDefsElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGDefsElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGDescElement",
        "info": {
          "code": "self.SVGDescElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGDescElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGElement",
        "info": {
          "code": "self.SVGElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGElement.attributeStyleMap",
        "info": {
          "code": "'attributeStyleMap' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.blur",
        "info": {
          "code": "SVGElement.prototype.blur"
        },
        "returns": {
          "length": 0,
          "name": "blur",
          "type": "function"
        }
      },
      {
        "context": "api.SVGElement.className",
        "info": {
          "code": "'className' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.correspondingElement",
        "info": {
          "code": "'correspondingElement' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.correspondingUseElement",
        "info": {
          "code": "'correspondingUseElement' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.dataset",
        "info": {
          "code": "'dataset' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.focus",
        "info": {
          "code": "SVGElement.prototype.focus"
        },
        "returns": {
          "length": 0,
          "name": "focus",
          "type": "function"
        }
      },
      {
        "context": "api.SVGElement.nonce",
        "info": {
          "code": "'nonce' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onabort",
        "info": {
          "code": "'onabort' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onanimationcancel",
        "info": {
          "code": "'onanimationcancel' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onanimationend",
        "info": {
          "code": "'onanimationend' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onanimationiteration",
        "info": {
          "code": "'onanimationiteration' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onanimationstart",
        "info": {
          "code": "'onanimationstart' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onauxclick",
        "info": {
          "code": "'onauxclick' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onblur",
        "info": {
          "code": "'onblur' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.oncancel",
        "info": {
          "code": "'oncancel' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.oncanplay",
        "info": {
          "code": "'oncanplay' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.oncanplaythrough",
        "info": {
          "code": "'oncanplaythrough' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onchange",
        "info": {
          "code": "'onchange' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onclick",
        "info": {
          "code": "'onclick' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onclose",
        "info": {
          "code": "'onclose' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.oncontextmenu",
        "info": {
          "code": "'oncontextmenu' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.oncopy",
        "info": {
          "code": "'oncopy' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.oncuechange",
        "info": {
          "code": "'oncuechange' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.oncut",
        "info": {
          "code": "'oncut' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondblclick",
        "info": {
          "code": "'ondblclick' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondrag",
        "info": {
          "code": "'ondrag' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondragend",
        "info": {
          "code": "'ondragend' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondragenter",
        "info": {
          "code": "'ondragenter' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondragexit",
        "info": {
          "code": "'ondragexit' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondragleave",
        "info": {
          "code": "'ondragleave' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondragover",
        "info": {
          "code": "'ondragover' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondragstart",
        "info": {
          "code": "'ondragstart' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondrop",
        "info": {
          "code": "'ondrop' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ondurationchange",
        "info": {
          "code": "'ondurationchange' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onemptied",
        "info": {
          "code": "'onemptied' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onended",
        "info": {
          "code": "'onended' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onerror",
        "info": {
          "code": "'onerror' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onfocus",
        "info": {
          "code": "'onfocus' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onformdata",
        "info": {
          "code": "'onformdata' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.ongotpointercapture",
        "info": {
          "code": "'ongotpointercapture' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.oninput",
        "info": {
          "code": "'oninput' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.oninvalid",
        "info": {
          "code": "'oninvalid' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onkeydown",
        "info": {
          "code": "'onkeydown' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onkeypress",
        "info": {
          "code": "'onkeypress' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onkeyup",
        "info": {
          "code": "'onkeyup' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onload",
        "info": {
          "code": "'onload' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onloadeddata",
        "info": {
          "code": "'onloadeddata' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onloadedmetadata",
        "info": {
          "code": "'onloadedmetadata' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onloadend",
        "info": {
          "code": "'onloadend' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onloadstart",
        "info": {
          "code": "'onloadstart' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onlostpointercapture",
        "info": {
          "code": "'onlostpointercapture' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onmousedown",
        "info": {
          "code": "'onmousedown' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onmouseenter",
        "info": {
          "code": "'onmouseenter' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onmouseleave",
        "info": {
          "code": "'onmouseleave' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onmousemove",
        "info": {
          "code": "'onmousemove' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onmouseout",
        "info": {
          "code": "'onmouseout' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onmouseover",
        "info": {
          "code": "'onmouseover' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onmouseup",
        "info": {
          "code": "'onmouseup' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onpaste",
        "info": {
          "code": "'onpaste' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onpause",
        "info": {
          "code": "'onpause' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onplay",
        "info": {
          "code": "'onplay' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onplaying",
        "info": {
          "code": "'onplaying' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onpointercancel",
        "info": {
          "code": "'onpointercancel' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onpointerdown",
        "info": {
          "code": "'onpointerdown' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onpointerenter",
        "info": {
          "code": "'onpointerenter' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onpointerleave",
        "info": {
          "code": "'onpointerleave' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onpointermove",
        "info": {
          "code": "'onpointermove' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onpointerout",
        "info": {
          "code": "'onpointerout' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onpointerover",
        "info": {
          "code": "'onpointerover' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onpointerup",
        "info": {
          "code": "'onpointerup' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onprogress",
        "info": {
          "code": "'onprogress' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onratechange",
        "info": {
          "code": "'onratechange' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onreset",
        "info": {
          "code": "'onreset' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onresize",
        "info": {
          "code": "'onresize' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onscroll",
        "info": {
          "code": "'onscroll' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onsecuritypolicyviolation",
        "info": {
          "code": "'onsecuritypolicyviolation' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onseeked",
        "info": {
          "code": "'onseeked' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onseeking",
        "info": {
          "code": "'onseeking' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onselect",
        "info": {
          "code": "'onselect' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onselectionchange",
        "info": {
          "code": "'onselectionchange' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGElement.onselectstart",
        "info": {
          "code": "'onselectstart' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onstalled",
        "info": {
          "code": "'onstalled' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onsubmit",
        "info": {
          "code": "'onsubmit' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onsuspend",
        "info": {
          "code": "'onsuspend' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontimeupdate",
        "info": {
          "code": "'ontimeupdate' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontoggle",
        "info": {
          "code": "'ontoggle' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontouchcancel",
        "info": {
          "code": "'ontouchcancel' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontouchend",
        "info": {
          "code": "'ontouchend' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontouchmove",
        "info": {
          "code": "'ontouchmove' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontouchstart",
        "info": {
          "code": "'ontouchstart' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontransitioncancel",
        "info": {
          "code": "'ontransitioncancel' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontransitionend",
        "info": {
          "code": "'ontransitionend' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontransitionrun",
        "info": {
          "code": "'ontransitionrun' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ontransitionstart",
        "info": {
          "code": "'ontransitionstart' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onvolumechange",
        "info": {
          "code": "'onvolumechange' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onwaiting",
        "info": {
          "code": "'onwaiting' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.onwheel",
        "info": {
          "code": "'onwheel' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.ownerSVGElement",
        "info": {
          "code": "'ownerSVGElement' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.style",
        "info": {
          "code": "'style' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.tabIndex",
        "info": {
          "code": "'tabIndex' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGElement.viewportElement",
        "info": {
          "code": "'viewportElement' in SVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGEllipseElement",
        "info": {
          "code": "self.SVGEllipseElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGEllipseElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGEllipseElement.cx",
        "info": {
          "code": "'cx' in SVGEllipseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGEllipseElement.cy",
        "info": {
          "code": "'cy' in SVGEllipseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGEllipseElement.rx",
        "info": {
          "code": "'rx' in SVGEllipseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGEllipseElement.ry",
        "info": {
          "code": "'ry' in SVGEllipseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEBlendElement",
        "info": {
          "code": "self.SVGFEBlendElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEBlendElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEBlendElement.height",
        "info": {
          "code": "'height' in SVGFEBlendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEBlendElement.in1",
        "info": {
          "code": "'in1' in SVGFEBlendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEBlendElement.in2",
        "info": {
          "code": "'in2' in SVGFEBlendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEBlendElement.mode",
        "info": {
          "code": "'mode' in SVGFEBlendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEBlendElement.result",
        "info": {
          "code": "'result' in SVGFEBlendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_COLOR",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 15
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_COLOR_BURN",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_COLOR_BURN"
        },
        "returns": {
          "type": "number",
          "value": 8
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_COLOR_DODGE",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_COLOR_DODGE"
        },
        "returns": {
          "type": "number",
          "value": 7
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_DARKEN",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_DARKEN"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_DIFFERENCE",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_DIFFERENCE"
        },
        "returns": {
          "type": "number",
          "value": 11
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_EXCLUSION",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_EXCLUSION"
        },
        "returns": {
          "type": "number",
          "value": 12
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_HARD_LIGHT",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_HARD_LIGHT"
        },
        "returns": {
          "type": "number",
          "value": 9
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_HUE",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_HUE"
        },
        "returns": {
          "type": "number",
          "value": 13
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_LIGHTEN",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_LIGHTEN"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_LUMINOSITY",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_LUMINOSITY"
        },
        "returns": {
          "type": "number",
          "value": 16
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_MULTIPLY",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_MULTIPLY"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_NORMAL",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_NORMAL"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_OVERLAY",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_OVERLAY"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_SATURATION",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_SATURATION"
        },
        "returns": {
          "type": "number",
          "value": 14
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_SCREEN",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_SCREEN"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_SOFT_LIGHT",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_SOFT_LIGHT"
        },
        "returns": {
          "type": "number",
          "value": 10
        }
      },
      {
        "context": "api.SVGFEBlendElement.SVG_FEBLEND_MODE_UNKNOWN",
        "info": {
          "code": "SVGFEBlendElement.SVG_FEBLEND_MODE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGFEBlendElement.width",
        "info": {
          "code": "'width' in SVGFEBlendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEBlendElement.x",
        "info": {
          "code": "'x' in SVGFEBlendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEBlendElement.y",
        "info": {
          "code": "'y' in SVGFEBlendElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement",
        "info": {
          "code": "self.SVGFEColorMatrixElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEColorMatrixElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.height",
        "info": {
          "code": "'height' in SVGFEColorMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.in1",
        "info": {
          "code": "'in1' in SVGFEColorMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.result",
        "info": {
          "code": "'result' in SVGFEColorMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_HUEROTATE",
        "info": {
          "code": "SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_HUEROTATE"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
        "info": {
          "code": "SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_MATRIX",
        "info": {
          "code": "SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_MATRIX"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE",
        "info": {
          "code": "SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_UNKNOWN",
        "info": {
          "code": "SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.type",
        "info": {
          "code": "'type' in SVGFEColorMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.values",
        "info": {
          "code": "'values' in SVGFEColorMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.width",
        "info": {
          "code": "'width' in SVGFEColorMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.x",
        "info": {
          "code": "'x' in SVGFEColorMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEColorMatrixElement.y",
        "info": {
          "code": "'y' in SVGFEColorMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEComponentTransferElement",
        "info": {
          "code": "self.SVGFEComponentTransferElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEComponentTransferElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEComponentTransferElement.height",
        "info": {
          "code": "'height' in SVGFEComponentTransferElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEComponentTransferElement.in1",
        "info": {
          "code": "'in1' in SVGFEComponentTransferElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEComponentTransferElement.result",
        "info": {
          "code": "'result' in SVGFEComponentTransferElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEComponentTransferElement.width",
        "info": {
          "code": "'width' in SVGFEComponentTransferElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEComponentTransferElement.x",
        "info": {
          "code": "'x' in SVGFEComponentTransferElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEComponentTransferElement.y",
        "info": {
          "code": "'y' in SVGFEComponentTransferElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement",
        "info": {
          "code": "self.SVGFECompositeElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFECompositeElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFECompositeElement.height",
        "info": {
          "code": "'height' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.in1",
        "info": {
          "code": "'in1' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.in2",
        "info": {
          "code": "'in2' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.k1",
        "info": {
          "code": "'k1' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.k2",
        "info": {
          "code": "'k2' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.k3",
        "info": {
          "code": "'k3' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.k4",
        "info": {
          "code": "'k4' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.operator",
        "info": {
          "code": "'operator' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.result",
        "info": {
          "code": "'result' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
        "info": {
          "code": "SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_ARITHMETIC"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_ATOP",
        "info": {
          "code": "SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_ATOP"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_IN",
        "info": {
          "code": "SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_IN"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_OUT",
        "info": {
          "code": "SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_OUT"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_OVER",
        "info": {
          "code": "SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_OVER"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
        "info": {
          "code": "SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_XOR",
        "info": {
          "code": "SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_XOR"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.SVGFECompositeElement.width",
        "info": {
          "code": "'width' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.x",
        "info": {
          "code": "'x' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFECompositeElement.y",
        "info": {
          "code": "'y' in SVGFECompositeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement",
        "info": {
          "code": "self.SVGFEConvolveMatrixElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEConvolveMatrixElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.bias",
        "info": {
          "code": "'bias' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.divisor",
        "info": {
          "code": "'divisor' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.edgeMode",
        "info": {
          "code": "'edgeMode' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.height",
        "info": {
          "code": "'height' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.in1",
        "info": {
          "code": "'in1' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.kernelMatrix",
        "info": {
          "code": "'kernelMatrix' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.kernelUnitLengthX",
        "info": {
          "code": "'kernelUnitLengthX' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.kernelUnitLengthY",
        "info": {
          "code": "'kernelUnitLengthY' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.orderX",
        "info": {
          "code": "'orderX' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.orderY",
        "info": {
          "code": "'orderY' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.preserveAlpha",
        "info": {
          "code": "'preserveAlpha' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.result",
        "info": {
          "code": "'result' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.SVG_EDGEMODE_DUPLICATE",
        "info": {
          "code": "SVGFEConvolveMatrixElement.SVG_EDGEMODE_DUPLICATE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.SVG_EDGEMODE_NONE",
        "info": {
          "code": "SVGFEConvolveMatrixElement.SVG_EDGEMODE_NONE"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.SVG_EDGEMODE_UNKNOWN",
        "info": {
          "code": "SVGFEConvolveMatrixElement.SVG_EDGEMODE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.SVG_EDGEMODE_WRAP",
        "info": {
          "code": "SVGFEConvolveMatrixElement.SVG_EDGEMODE_WRAP"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.targetX",
        "info": {
          "code": "'targetX' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.targetY",
        "info": {
          "code": "'targetY' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.width",
        "info": {
          "code": "'width' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.x",
        "info": {
          "code": "'x' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEConvolveMatrixElement.y",
        "info": {
          "code": "'y' in SVGFEConvolveMatrixElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement",
        "info": {
          "code": "self.SVGFEDiffuseLightingElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEDiffuseLightingElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.diffuseConstant",
        "info": {
          "code": "'diffuseConstant' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.height",
        "info": {
          "code": "'height' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.in1",
        "info": {
          "code": "'in1' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.kernelUnitLengthX",
        "info": {
          "code": "'kernelUnitLengthX' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.kernelUnitLengthY",
        "info": {
          "code": "'kernelUnitLengthY' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.result",
        "info": {
          "code": "'result' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.surfaceScale",
        "info": {
          "code": "'surfaceScale' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.width",
        "info": {
          "code": "'width' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.x",
        "info": {
          "code": "'x' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDiffuseLightingElement.y",
        "info": {
          "code": "'y' in SVGFEDiffuseLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement",
        "info": {
          "code": "self.SVGFEDisplacementMapElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEDisplacementMapElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.height",
        "info": {
          "code": "'height' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.in1",
        "info": {
          "code": "'in1' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.in2",
        "info": {
          "code": "'in2' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.result",
        "info": {
          "code": "'result' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.scale",
        "info": {
          "code": "'scale' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.SVG_CHANNEL_A",
        "info": {
          "code": "SVGFEDisplacementMapElement.SVG_CHANNEL_A"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.SVG_CHANNEL_B",
        "info": {
          "code": "SVGFEDisplacementMapElement.SVG_CHANNEL_B"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.SVG_CHANNEL_G",
        "info": {
          "code": "SVGFEDisplacementMapElement.SVG_CHANNEL_G"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.SVG_CHANNEL_R",
        "info": {
          "code": "SVGFEDisplacementMapElement.SVG_CHANNEL_R"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.SVG_CHANNEL_UNKNOWN",
        "info": {
          "code": "SVGFEDisplacementMapElement.SVG_CHANNEL_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.width",
        "info": {
          "code": "'width' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.x",
        "info": {
          "code": "'x' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.xChannelSelector",
        "info": {
          "code": "'xChannelSelector' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.y",
        "info": {
          "code": "'y' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDisplacementMapElement.yChannelSelector",
        "info": {
          "code": "'yChannelSelector' in SVGFEDisplacementMapElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDistantLightElement",
        "info": {
          "code": "self.SVGFEDistantLightElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEDistantLightElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEDistantLightElement.azimuth",
        "info": {
          "code": "'azimuth' in SVGFEDistantLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDistantLightElement.elevation",
        "info": {
          "code": "'elevation' in SVGFEDistantLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement",
        "info": {
          "code": "self.SVGFEDropShadowElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEDropShadowElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.dx",
        "info": {
          "code": "'dx' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.dy",
        "info": {
          "code": "'dy' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.height",
        "info": {
          "code": "'height' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.in1",
        "info": {
          "code": "'in1' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.result",
        "info": {
          "code": "'result' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.setStdDeviation",
        "info": {
          "code": "SVGFEDropShadowElement.prototype.setStdDeviation"
        },
        "returns": {
          "length": 2,
          "name": "setStdDeviation",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.stdDeviationX",
        "info": {
          "code": "'stdDeviationX' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.stdDeviationY",
        "info": {
          "code": "'stdDeviationY' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.width",
        "info": {
          "code": "'width' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.x",
        "info": {
          "code": "'x' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEDropShadowElement.y",
        "info": {
          "code": "'y' in SVGFEDropShadowElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEFloodElement",
        "info": {
          "code": "self.SVGFEFloodElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEFloodElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEFloodElement.height",
        "info": {
          "code": "'height' in SVGFEFloodElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEFloodElement.result",
        "info": {
          "code": "'result' in SVGFEFloodElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEFloodElement.width",
        "info": {
          "code": "'width' in SVGFEFloodElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEFloodElement.x",
        "info": {
          "code": "'x' in SVGFEFloodElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEFloodElement.y",
        "info": {
          "code": "'y' in SVGFEFloodElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEFuncAElement",
        "info": {
          "code": "self.SVGFEFuncAElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEFuncAElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEFuncBElement",
        "info": {
          "code": "self.SVGFEFuncBElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEFuncBElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEFuncGElement",
        "info": {
          "code": "self.SVGFEFuncGElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEFuncGElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEFuncRElement",
        "info": {
          "code": "self.SVGFEFuncRElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEFuncRElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement",
        "info": {
          "code": "self.SVGFEGaussianBlurElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEGaussianBlurElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.edgeMode",
        "info": {
          "code": "'edgeMode' in SVGFEGaussianBlurElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.height",
        "info": {
          "code": "'height' in SVGFEGaussianBlurElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.in1",
        "info": {
          "code": "'in1' in SVGFEGaussianBlurElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.result",
        "info": {
          "code": "'result' in SVGFEGaussianBlurElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.setStdDeviation",
        "info": {
          "code": "SVGFEGaussianBlurElement.prototype.setStdDeviation"
        },
        "returns": {
          "length": 2,
          "name": "setStdDeviation",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.stdDeviationX",
        "info": {
          "code": "'stdDeviationX' in SVGFEGaussianBlurElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.stdDeviationY",
        "info": {
          "code": "'stdDeviationY' in SVGFEGaussianBlurElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.SVG_EDGEMODE_DUPLICATE",
        "info": {
          "code": "SVGFEGaussianBlurElement.SVG_EDGEMODE_DUPLICATE"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.SVG_EDGEMODE_NONE",
        "info": {
          "code": "SVGFEGaussianBlurElement.SVG_EDGEMODE_NONE"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.SVG_EDGEMODE_UNKNOWN",
        "info": {
          "code": "SVGFEGaussianBlurElement.SVG_EDGEMODE_UNKNOWN"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.SVG_EDGEMODE_WRAP",
        "info": {
          "code": "SVGFEGaussianBlurElement.SVG_EDGEMODE_WRAP"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.width",
        "info": {
          "code": "'width' in SVGFEGaussianBlurElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.x",
        "info": {
          "code": "'x' in SVGFEGaussianBlurElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEGaussianBlurElement.y",
        "info": {
          "code": "'y' in SVGFEGaussianBlurElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEImageElement",
        "info": {
          "code": "self.SVGFEImageElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEImageElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEImageElement.crossOrigin",
        "info": {
          "code": "'crossOrigin' in SVGFEImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGFEImageElement.height",
        "info": {
          "code": "'height' in SVGFEImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEImageElement.href",
        "info": {
          "code": "'href' in SVGFEImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEImageElement.preserveAspectRatio",
        "info": {
          "code": "'preserveAspectRatio' in SVGFEImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEImageElement.result",
        "info": {
          "code": "'result' in SVGFEImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEImageElement.width",
        "info": {
          "code": "'width' in SVGFEImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEImageElement.x",
        "info": {
          "code": "'x' in SVGFEImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEImageElement.y",
        "info": {
          "code": "'y' in SVGFEImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMergeElement",
        "info": {
          "code": "self.SVGFEMergeElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEMergeElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEMergeElement.height",
        "info": {
          "code": "'height' in SVGFEMergeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMergeElement.result",
        "info": {
          "code": "'result' in SVGFEMergeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMergeElement.width",
        "info": {
          "code": "'width' in SVGFEMergeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMergeElement.x",
        "info": {
          "code": "'x' in SVGFEMergeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMergeElement.y",
        "info": {
          "code": "'y' in SVGFEMergeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMergeNodeElement",
        "info": {
          "code": "self.SVGFEMergeNodeElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEMergeNodeElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEMergeNodeElement.in1",
        "info": {
          "code": "'in1' in SVGFEMergeNodeElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMorphologyElement",
        "info": {
          "code": "self.SVGFEMorphologyElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEMorphologyElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.height",
        "info": {
          "code": "'height' in SVGFEMorphologyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.in1",
        "info": {
          "code": "'in1' in SVGFEMorphologyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.operator",
        "info": {
          "code": "'operator' in SVGFEMorphologyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.radiusX",
        "info": {
          "code": "'radiusX' in SVGFEMorphologyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.radiusY",
        "info": {
          "code": "'radiusY' in SVGFEMorphologyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.result",
        "info": {
          "code": "'result' in SVGFEMorphologyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_DILATE",
        "info": {
          "code": "SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_DILATE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_ERODE",
        "info": {
          "code": "SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_ERODE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
        "info": {
          "code": "SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.width",
        "info": {
          "code": "'width' in SVGFEMorphologyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.x",
        "info": {
          "code": "'x' in SVGFEMorphologyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEMorphologyElement.y",
        "info": {
          "code": "'y' in SVGFEMorphologyElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEOffsetElement",
        "info": {
          "code": "self.SVGFEOffsetElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEOffsetElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEOffsetElement.dx",
        "info": {
          "code": "'dx' in SVGFEOffsetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEOffsetElement.dy",
        "info": {
          "code": "'dy' in SVGFEOffsetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEOffsetElement.height",
        "info": {
          "code": "'height' in SVGFEOffsetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEOffsetElement.in1",
        "info": {
          "code": "'in1' in SVGFEOffsetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEOffsetElement.result",
        "info": {
          "code": "'result' in SVGFEOffsetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEOffsetElement.width",
        "info": {
          "code": "'width' in SVGFEOffsetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEOffsetElement.x",
        "info": {
          "code": "'x' in SVGFEOffsetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEOffsetElement.y",
        "info": {
          "code": "'y' in SVGFEOffsetElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEPointLightElement",
        "info": {
          "code": "self.SVGFEPointLightElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFEPointLightElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFEPointLightElement.x",
        "info": {
          "code": "'x' in SVGFEPointLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEPointLightElement.y",
        "info": {
          "code": "'y' in SVGFEPointLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFEPointLightElement.z",
        "info": {
          "code": "'z' in SVGFEPointLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement",
        "info": {
          "code": "self.SVGFESpecularLightingElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFESpecularLightingElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.height",
        "info": {
          "code": "'height' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.in1",
        "info": {
          "code": "'in1' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.kernelUnitLengthX",
        "info": {
          "code": "'kernelUnitLengthX' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.kernelUnitLengthY",
        "info": {
          "code": "'kernelUnitLengthY' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.result",
        "info": {
          "code": "'result' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.specularConstant",
        "info": {
          "code": "'specularConstant' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.specularExponent",
        "info": {
          "code": "'specularExponent' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.surfaceScale",
        "info": {
          "code": "'surfaceScale' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.width",
        "info": {
          "code": "'width' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.x",
        "info": {
          "code": "'x' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpecularLightingElement.y",
        "info": {
          "code": "'y' in SVGFESpecularLightingElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpotLightElement",
        "info": {
          "code": "self.SVGFESpotLightElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFESpotLightElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFESpotLightElement.limitingConeAngle",
        "info": {
          "code": "'limitingConeAngle' in SVGFESpotLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpotLightElement.pointsAtX",
        "info": {
          "code": "'pointsAtX' in SVGFESpotLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpotLightElement.pointsAtY",
        "info": {
          "code": "'pointsAtY' in SVGFESpotLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpotLightElement.pointsAtZ",
        "info": {
          "code": "'pointsAtZ' in SVGFESpotLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpotLightElement.specularExponent",
        "info": {
          "code": "'specularExponent' in SVGFESpotLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpotLightElement.x",
        "info": {
          "code": "'x' in SVGFESpotLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpotLightElement.y",
        "info": {
          "code": "'y' in SVGFESpotLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFESpotLightElement.z",
        "info": {
          "code": "'z' in SVGFESpotLightElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETileElement",
        "info": {
          "code": "self.SVGFETileElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFETileElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFETileElement.height",
        "info": {
          "code": "'height' in SVGFETileElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETileElement.in1",
        "info": {
          "code": "'in1' in SVGFETileElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETileElement.result",
        "info": {
          "code": "'result' in SVGFETileElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETileElement.width",
        "info": {
          "code": "'width' in SVGFETileElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETileElement.x",
        "info": {
          "code": "'x' in SVGFETileElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETileElement.y",
        "info": {
          "code": "'y' in SVGFETileElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement",
        "info": {
          "code": "self.SVGFETurbulenceElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFETurbulenceElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.baseFrequencyX",
        "info": {
          "code": "'baseFrequencyX' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.baseFrequencyY",
        "info": {
          "code": "'baseFrequencyY' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.height",
        "info": {
          "code": "'height' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.numOctaves",
        "info": {
          "code": "'numOctaves' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.result",
        "info": {
          "code": "'result' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.seed",
        "info": {
          "code": "'seed' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.stitchTiles",
        "info": {
          "code": "'stitchTiles' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.SVG_STITCHTYPE_NOSTITCH",
        "info": {
          "code": "SVGFETurbulenceElement.SVG_STITCHTYPE_NOSTITCH"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.SVG_STITCHTYPE_STITCH",
        "info": {
          "code": "SVGFETurbulenceElement.SVG_STITCHTYPE_STITCH"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.SVG_STITCHTYPE_UNKNOWN",
        "info": {
          "code": "SVGFETurbulenceElement.SVG_STITCHTYPE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_FRACTALNOISE",
        "info": {
          "code": "SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_FRACTALNOISE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_TURBULENCE",
        "info": {
          "code": "SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_TURBULENCE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_UNKNOWN",
        "info": {
          "code": "SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.type",
        "info": {
          "code": "'type' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.width",
        "info": {
          "code": "'width' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.x",
        "info": {
          "code": "'x' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFETurbulenceElement.y",
        "info": {
          "code": "'y' in SVGFETurbulenceElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFilterElement",
        "info": {
          "code": "self.SVGFilterElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGFilterElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGFilterElement.filterUnits",
        "info": {
          "code": "'filterUnits' in SVGFilterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFilterElement.height",
        "info": {
          "code": "'height' in SVGFilterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFilterElement.href",
        "info": {
          "code": "'href' in SVGFilterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFilterElement.primitiveUnits",
        "info": {
          "code": "'primitiveUnits' in SVGFilterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFilterElement.width",
        "info": {
          "code": "'width' in SVGFilterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFilterElement.x",
        "info": {
          "code": "'x' in SVGFilterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGFilterElement.y",
        "info": {
          "code": "'y' in SVGFilterElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGForeignObjectElement",
        "info": {
          "code": "self.SVGForeignObjectElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGForeignObjectElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGForeignObjectElement.height",
        "info": {
          "code": "'height' in SVGForeignObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGForeignObjectElement.width",
        "info": {
          "code": "'width' in SVGForeignObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGForeignObjectElement.x",
        "info": {
          "code": "'x' in SVGForeignObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGForeignObjectElement.y",
        "info": {
          "code": "'y' in SVGForeignObjectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGGElement",
        "info": {
          "code": "self.SVGGElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGGElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGGeometryElement",
        "info": {
          "code": "self.SVGGeometryElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGGeometryElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGGeometryElement.getPointAtLength",
        "info": {
          "code": "SVGGeometryElement.prototype.getPointAtLength"
        },
        "returns": {
          "length": 1,
          "name": "getPointAtLength",
          "type": "function"
        }
      },
      {
        "context": "api.SVGGeometryElement.getTotalLength",
        "info": {
          "code": "SVGGeometryElement.prototype.getTotalLength"
        },
        "returns": {
          "length": 0,
          "name": "getTotalLength",
          "type": "function"
        }
      },
      {
        "context": "api.SVGGeometryElement.isPointInFill",
        "info": {
          "code": "SVGGeometryElement.prototype.isPointInFill"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGGeometryElement.isPointInStroke",
        "info": {
          "code": "SVGGeometryElement.prototype.isPointInStroke"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGGeometryElement.pathLength",
        "info": {
          "code": "'pathLength' in SVGGeometryElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGGradientElement",
        "info": {
          "code": "self.SVGGradientElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGGradientElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGGradientElement.gradientTransform",
        "info": {
          "code": "'gradientTransform' in SVGGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGGradientElement.gradientUnits",
        "info": {
          "code": "'gradientUnits' in SVGGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGGradientElement.href",
        "info": {
          "code": "'href' in SVGGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGGradientElement.spreadMethod",
        "info": {
          "code": "'spreadMethod' in SVGGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGGradientElement.SVG_SPREADMETHOD_PAD",
        "info": {
          "code": "SVGGradientElement.SVG_SPREADMETHOD_PAD"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGGradientElement.SVG_SPREADMETHOD_REFLECT",
        "info": {
          "code": "SVGGradientElement.SVG_SPREADMETHOD_REFLECT"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGGradientElement.SVG_SPREADMETHOD_REPEAT",
        "info": {
          "code": "SVGGradientElement.SVG_SPREADMETHOD_REPEAT"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGGradientElement.SVG_SPREADMETHOD_UNKNOWN",
        "info": {
          "code": "SVGGradientElement.SVG_SPREADMETHOD_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGGraphicsElement",
        "info": {
          "code": "self.SVGGraphicsElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGGraphicsElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGGraphicsElement.getBBox",
        "info": {
          "code": "SVGGraphicsElement.prototype.getBBox"
        },
        "returns": {
          "length": 0,
          "name": "getBBox",
          "type": "function"
        }
      },
      {
        "context": "api.SVGGraphicsElement.getCTM",
        "info": {
          "code": "SVGGraphicsElement.prototype.getCTM"
        },
        "returns": {
          "length": 0,
          "name": "getCTM",
          "type": "function"
        }
      },
      {
        "context": "api.SVGGraphicsElement.getScreenCTM",
        "info": {
          "code": "SVGGraphicsElement.prototype.getScreenCTM"
        },
        "returns": {
          "length": 0,
          "name": "getScreenCTM",
          "type": "function"
        }
      },
      {
        "context": "api.SVGGraphicsElement.requiredExtensions",
        "info": {
          "code": "'requiredExtensions' in SVGGraphicsElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGGraphicsElement.systemLanguage",
        "info": {
          "code": "'systemLanguage' in SVGGraphicsElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGGraphicsElement.transform",
        "info": {
          "code": "'transform' in SVGGraphicsElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGImageElement",
        "info": {
          "code": "self.SVGImageElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGImageElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGImageElement.crossOrigin",
        "info": {
          "code": "'crossOrigin' in SVGImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGImageElement.height",
        "info": {
          "code": "'height' in SVGImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGImageElement.href",
        "info": {
          "code": "'href' in SVGImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGImageElement.preserveAspectRatio",
        "info": {
          "code": "'preserveAspectRatio' in SVGImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGImageElement.width",
        "info": {
          "code": "'width' in SVGImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGImageElement.x",
        "info": {
          "code": "'x' in SVGImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGImageElement.y",
        "info": {
          "code": "'y' in SVGImageElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLength",
        "info": {
          "code": "self.SVGLength"
        },
        "returns": {
          "length": 0,
          "name": "SVGLength",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLength.convertToSpecifiedUnits",
        "info": {
          "code": "SVGLength.prototype.convertToSpecifiedUnits"
        },
        "returns": {
          "length": 1,
          "name": "convertToSpecifiedUnits",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLength.newValueSpecifiedUnits",
        "info": {
          "code": "SVGLength.prototype.newValueSpecifiedUnits"
        },
        "returns": {
          "length": 2,
          "name": "newValueSpecifiedUnits",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_CM",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_CM"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_EMS",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_EMS"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_EXS",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_EXS"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_IN",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_IN"
        },
        "returns": {
          "type": "number",
          "value": 8
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_MM",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_MM"
        },
        "returns": {
          "type": "number",
          "value": 7
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_NUMBER",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_NUMBER"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_PC",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_PC"
        },
        "returns": {
          "type": "number",
          "value": 10
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_PERCENTAGE",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_PERCENTAGE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_PT",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_PT"
        },
        "returns": {
          "type": "number",
          "value": 9
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_PX",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_PX"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.SVGLength.SVG_LENGTHTYPE_UNKNOWN",
        "info": {
          "code": "SVGLength.SVG_LENGTHTYPE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGLength.unitType",
        "info": {
          "code": "'unitType' in SVGLength.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLength.value",
        "info": {
          "code": "'value' in SVGLength.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLength.valueAsString",
        "info": {
          "code": "'valueAsString' in SVGLength.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLength.valueInSpecifiedUnits",
        "info": {
          "code": "'valueInSpecifiedUnits' in SVGLength.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLengthList",
        "info": {
          "code": "self.SVGLengthList"
        },
        "returns": {
          "length": 0,
          "name": "SVGLengthList",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLengthList.appendItem",
        "info": {
          "code": "SVGLengthList.prototype.appendItem"
        },
        "returns": {
          "length": 1,
          "name": "appendItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLengthList.clear",
        "info": {
          "code": "SVGLengthList.prototype.clear"
        },
        "returns": {
          "length": 0,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLengthList.getItem",
        "info": {
          "code": "SVGLengthList.prototype.getItem"
        },
        "returns": {
          "length": 1,
          "name": "getItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLengthList.initialize",
        "info": {
          "code": "SVGLengthList.prototype.initialize"
        },
        "returns": {
          "length": 1,
          "name": "initialize",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLengthList.insertItemBefore",
        "info": {
          "code": "SVGLengthList.prototype.insertItemBefore"
        },
        "returns": {
          "length": 2,
          "name": "insertItemBefore",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLengthList.length",
        "info": {
          "code": "'length' in SVGLengthList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLengthList.numberOfItems",
        "info": {
          "code": "'numberOfItems' in SVGLengthList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLengthList.removeItem",
        "info": {
          "code": "SVGLengthList.prototype.removeItem"
        },
        "returns": {
          "length": 1,
          "name": "removeItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLengthList.replaceItem",
        "info": {
          "code": "SVGLengthList.prototype.replaceItem"
        },
        "returns": {
          "length": 2,
          "name": "replaceItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLinearGradientElement",
        "info": {
          "code": "self.SVGLinearGradientElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGLinearGradientElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLinearGradientElement.x1",
        "info": {
          "code": "'x1' in SVGLinearGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLinearGradientElement.x2",
        "info": {
          "code": "'x2' in SVGLinearGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLinearGradientElement.y1",
        "info": {
          "code": "'y1' in SVGLinearGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLinearGradientElement.y2",
        "info": {
          "code": "'y2' in SVGLinearGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLineElement",
        "info": {
          "code": "self.SVGLineElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGLineElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGLineElement.x1",
        "info": {
          "code": "'x1' in SVGLineElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLineElement.x2",
        "info": {
          "code": "'x2' in SVGLineElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLineElement.y1",
        "info": {
          "code": "'y1' in SVGLineElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGLineElement.y2",
        "info": {
          "code": "'y2' in SVGLineElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMarkerElement",
        "info": {
          "code": "self.SVGMarkerElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGMarkerElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGMarkerElement.markerHeight",
        "info": {
          "code": "'markerHeight' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMarkerElement.markerUnits",
        "info": {
          "code": "'markerUnits' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMarkerElement.markerWidth",
        "info": {
          "code": "'markerWidth' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMarkerElement.orient",
        "info": {
          "code": "'orient' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGMarkerElement.orientAngle",
        "info": {
          "code": "'orientAngle' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMarkerElement.orientType",
        "info": {
          "code": "'orientType' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMarkerElement.preserveAspectRatio",
        "info": {
          "code": "'preserveAspectRatio' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMarkerElement.refX",
        "info": {
          "code": "'refX' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMarkerElement.refY",
        "info": {
          "code": "'refY' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMarkerElement.setOrientToAngle",
        "info": {
          "code": "SVGMarkerElement.prototype.setOrientToAngle"
        },
        "returns": {
          "length": 1,
          "name": "setOrientToAngle",
          "type": "function"
        }
      },
      {
        "context": "api.SVGMarkerElement.setOrientToAuto",
        "info": {
          "code": "SVGMarkerElement.prototype.setOrientToAuto"
        },
        "returns": {
          "length": 0,
          "name": "setOrientToAuto",
          "type": "function"
        }
      },
      {
        "context": "api.SVGMarkerElement.SVG_MARKER_ORIENT_ANGLE",
        "info": {
          "code": "SVGMarkerElement.SVG_MARKER_ORIENT_ANGLE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGMarkerElement.SVG_MARKER_ORIENT_AUTO",
        "info": {
          "code": "SVGMarkerElement.SVG_MARKER_ORIENT_AUTO"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGMarkerElement.SVG_MARKER_ORIENT_UNKNOWN",
        "info": {
          "code": "SVGMarkerElement.SVG_MARKER_ORIENT_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGMarkerElement.SVG_MARKERUNITS_STROKEWIDTH",
        "info": {
          "code": "SVGMarkerElement.SVG_MARKERUNITS_STROKEWIDTH"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGMarkerElement.SVG_MARKERUNITS_UNKNOWN",
        "info": {
          "code": "SVGMarkerElement.SVG_MARKERUNITS_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGMarkerElement.SVG_MARKERUNITS_USERSPACEONUSE",
        "info": {
          "code": "SVGMarkerElement.SVG_MARKERUNITS_USERSPACEONUSE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGMarkerElement.viewBox",
        "info": {
          "code": "'viewBox' in SVGMarkerElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMaskElement",
        "info": {
          "code": "self.SVGMaskElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGMaskElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGMaskElement.height",
        "info": {
          "code": "'height' in SVGMaskElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMaskElement.maskContentUnits",
        "info": {
          "code": "'maskContentUnits' in SVGMaskElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMaskElement.maskUnits",
        "info": {
          "code": "'maskUnits' in SVGMaskElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMaskElement.width",
        "info": {
          "code": "'width' in SVGMaskElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMaskElement.x",
        "info": {
          "code": "'x' in SVGMaskElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMaskElement.y",
        "info": {
          "code": "'y' in SVGMaskElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGMetadataElement",
        "info": {
          "code": "self.SVGMetadataElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGMetadataElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGNumber",
        "info": {
          "code": "self.SVGNumber"
        },
        "returns": {
          "length": 0,
          "name": "SVGNumber",
          "type": "function"
        }
      },
      {
        "context": "api.SVGNumber.value",
        "info": {
          "code": "'value' in SVGNumber.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGNumberList",
        "info": {
          "code": "self.SVGNumberList"
        },
        "returns": {
          "length": 0,
          "name": "SVGNumberList",
          "type": "function"
        }
      },
      {
        "context": "api.SVGNumberList.appendItem",
        "info": {
          "code": "SVGNumberList.prototype.appendItem"
        },
        "returns": {
          "length": 1,
          "name": "appendItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGNumberList.clear",
        "info": {
          "code": "SVGNumberList.prototype.clear"
        },
        "returns": {
          "length": 0,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.SVGNumberList.getItem",
        "info": {
          "code": "SVGNumberList.prototype.getItem"
        },
        "returns": {
          "length": 1,
          "name": "getItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGNumberList.initialize",
        "info": {
          "code": "SVGNumberList.prototype.initialize"
        },
        "returns": {
          "length": 1,
          "name": "initialize",
          "type": "function"
        }
      },
      {
        "context": "api.SVGNumberList.insertItemBefore",
        "info": {
          "code": "SVGNumberList.prototype.insertItemBefore"
        },
        "returns": {
          "length": 2,
          "name": "insertItemBefore",
          "type": "function"
        }
      },
      {
        "context": "api.SVGNumberList.length",
        "info": {
          "code": "'length' in SVGNumberList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGNumberList.numberOfItems",
        "info": {
          "code": "'numberOfItems' in SVGNumberList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGNumberList.removeItem",
        "info": {
          "code": "SVGNumberList.prototype.removeItem"
        },
        "returns": {
          "length": 1,
          "name": "removeItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGNumberList.replaceItem",
        "info": {
          "code": "SVGNumberList.prototype.replaceItem"
        },
        "returns": {
          "length": 2,
          "name": "replaceItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPathElement",
        "info": {
          "code": "self.SVGPathElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGPathElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPatternElement",
        "info": {
          "code": "self.SVGPatternElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGPatternElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPatternElement.height",
        "info": {
          "code": "'height' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPatternElement.href",
        "info": {
          "code": "'href' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPatternElement.patternContentUnits",
        "info": {
          "code": "'patternContentUnits' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPatternElement.patternTransform",
        "info": {
          "code": "'patternTransform' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPatternElement.patternUnits",
        "info": {
          "code": "'patternUnits' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPatternElement.preserveAspectRatio",
        "info": {
          "code": "'preserveAspectRatio' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPatternElement.viewBox",
        "info": {
          "code": "'viewBox' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPatternElement.width",
        "info": {
          "code": "'width' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPatternElement.x",
        "info": {
          "code": "'x' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPatternElement.y",
        "info": {
          "code": "'y' in SVGPatternElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPointList",
        "info": {
          "code": "self.SVGPointList"
        },
        "returns": {
          "length": 0,
          "name": "SVGPointList",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPointList.appendItem",
        "info": {
          "code": "SVGPointList.prototype.appendItem"
        },
        "returns": {
          "length": 1,
          "name": "appendItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPointList.clear",
        "info": {
          "code": "SVGPointList.prototype.clear"
        },
        "returns": {
          "length": 0,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPointList.getItem",
        "info": {
          "code": "SVGPointList.prototype.getItem"
        },
        "returns": {
          "length": 1,
          "name": "getItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPointList.initialize",
        "info": {
          "code": "SVGPointList.prototype.initialize"
        },
        "returns": {
          "length": 1,
          "name": "initialize",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPointList.insertItemBefore",
        "info": {
          "code": "SVGPointList.prototype.insertItemBefore"
        },
        "returns": {
          "length": 2,
          "name": "insertItemBefore",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPointList.length",
        "info": {
          "code": "'length' in SVGPointList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPointList.numberOfItems",
        "info": {
          "code": "'numberOfItems' in SVGPointList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPointList.removeItem",
        "info": {
          "code": "SVGPointList.prototype.removeItem"
        },
        "returns": {
          "length": 1,
          "name": "removeItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPointList.replaceItem",
        "info": {
          "code": "SVGPointList.prototype.replaceItem"
        },
        "returns": {
          "length": 2,
          "name": "replaceItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPolygonElement",
        "info": {
          "code": "self.SVGPolygonElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGPolygonElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPolygonElement.animatedPoints",
        "info": {
          "code": "'animatedPoints' in SVGPolygonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPolygonElement.points",
        "info": {
          "code": "'points' in SVGPolygonElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPolylineElement",
        "info": {
          "code": "self.SVGPolylineElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGPolylineElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPolylineElement.animatedPoints",
        "info": {
          "code": "'animatedPoints' in SVGPolylineElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPolylineElement.points",
        "info": {
          "code": "'points' in SVGPolylineElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio",
        "info": {
          "code": "self.SVGPreserveAspectRatio"
        },
        "returns": {
          "length": 0,
          "name": "SVGPreserveAspectRatio",
          "type": "function"
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.align",
        "info": {
          "code": "'align' in SVGPreserveAspectRatio.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.meetOrSlice",
        "info": {
          "code": "'meetOrSlice' in SVGPreserveAspectRatio.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_MEETORSLICE_MEET",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_MEETORSLICE_MEET"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_MEETORSLICE_SLICE",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_MEETORSLICE_SLICE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_MEETORSLICE_UNKNOWN",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_MEETORSLICE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_NONE",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_NONE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_UNKNOWN",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMAX",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMAX"
        },
        "returns": {
          "type": "number",
          "value": 10
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMID",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMID"
        },
        "returns": {
          "type": "number",
          "value": 7
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMIN",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMIN"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMAX",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMAX"
        },
        "returns": {
          "type": "number",
          "value": 9
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMID",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMID"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMIN",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMIN"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMAX",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMAX"
        },
        "returns": {
          "type": "number",
          "value": 8
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMID",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMID"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMIN",
        "info": {
          "code": "SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMIN"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGRadialGradientElement",
        "info": {
          "code": "self.SVGRadialGradientElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGRadialGradientElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGRadialGradientElement.cx",
        "info": {
          "code": "'cx' in SVGRadialGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRadialGradientElement.cy",
        "info": {
          "code": "'cy' in SVGRadialGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRadialGradientElement.fr",
        "info": {
          "code": "'fr' in SVGRadialGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRadialGradientElement.fx",
        "info": {
          "code": "'fx' in SVGRadialGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRadialGradientElement.fy",
        "info": {
          "code": "'fy' in SVGRadialGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRadialGradientElement.r",
        "info": {
          "code": "'r' in SVGRadialGradientElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRectElement",
        "info": {
          "code": "self.SVGRectElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGRectElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGRectElement.height",
        "info": {
          "code": "'height' in SVGRectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRectElement.rx",
        "info": {
          "code": "'rx' in SVGRectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRectElement.ry",
        "info": {
          "code": "'ry' in SVGRectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRectElement.width",
        "info": {
          "code": "'width' in SVGRectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRectElement.x",
        "info": {
          "code": "'x' in SVGRectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGRectElement.y",
        "info": {
          "code": "'y' in SVGRectElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGScriptElement",
        "info": {
          "code": "self.SVGScriptElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGScriptElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGScriptElement.crossOrigin",
        "info": {
          "code": "'crossOrigin' in SVGScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGScriptElement.href",
        "info": {
          "code": "'href' in SVGScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGScriptElement.type",
        "info": {
          "code": "'type' in SVGScriptElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGStopElement",
        "info": {
          "code": "self.SVGStopElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGStopElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStopElement.offset",
        "info": {
          "code": "'offset' in SVGStopElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGStringList",
        "info": {
          "code": "self.SVGStringList"
        },
        "returns": {
          "length": 0,
          "name": "SVGStringList",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStringList.appendItem",
        "info": {
          "code": "SVGStringList.prototype.appendItem"
        },
        "returns": {
          "length": 1,
          "name": "appendItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStringList.clear",
        "info": {
          "code": "SVGStringList.prototype.clear"
        },
        "returns": {
          "length": 0,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStringList.getItem",
        "info": {
          "code": "SVGStringList.prototype.getItem"
        },
        "returns": {
          "length": 1,
          "name": "getItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStringList.initialize",
        "info": {
          "code": "SVGStringList.prototype.initialize"
        },
        "returns": {
          "length": 1,
          "name": "initialize",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStringList.insertItemBefore",
        "info": {
          "code": "SVGStringList.prototype.insertItemBefore"
        },
        "returns": {
          "length": 2,
          "name": "insertItemBefore",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStringList.length",
        "info": {
          "code": "'length' in SVGStringList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGStringList.numberOfItems",
        "info": {
          "code": "'numberOfItems' in SVGStringList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGStringList.removeItem",
        "info": {
          "code": "SVGStringList.prototype.removeItem"
        },
        "returns": {
          "length": 1,
          "name": "removeItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStringList.replaceItem",
        "info": {
          "code": "SVGStringList.prototype.replaceItem"
        },
        "returns": {
          "length": 2,
          "name": "replaceItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStyleElement",
        "info": {
          "code": "self.SVGStyleElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGStyleElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGStyleElement.media",
        "info": {
          "code": "'media' in SVGStyleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGStyleElement.sheet",
        "info": {
          "code": "'sheet' in SVGStyleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGStyleElement.title",
        "info": {
          "code": "'title' in SVGStyleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGStyleElement.type",
        "info": {
          "code": "'type' in SVGStyleElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSVGElement",
        "info": {
          "code": "self.SVGSVGElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGSVGElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.checkEnclosure",
        "info": {
          "code": "SVGSVGElement.prototype.checkEnclosure"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGSVGElement.checkIntersection",
        "info": {
          "code": "SVGSVGElement.prototype.checkIntersection"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGSVGElement.createSVGAngle",
        "info": {
          "code": "SVGSVGElement.prototype.createSVGAngle"
        },
        "returns": {
          "length": 0,
          "name": "createSVGAngle",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.createSVGLength",
        "info": {
          "code": "SVGSVGElement.prototype.createSVGLength"
        },
        "returns": {
          "length": 0,
          "name": "createSVGLength",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.createSVGMatrix",
        "info": {
          "code": "SVGSVGElement.prototype.createSVGMatrix"
        },
        "returns": {
          "length": 0,
          "name": "createSVGMatrix",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.createSVGNumber",
        "info": {
          "code": "SVGSVGElement.prototype.createSVGNumber"
        },
        "returns": {
          "length": 0,
          "name": "createSVGNumber",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.createSVGPoint",
        "info": {
          "code": "SVGSVGElement.prototype.createSVGPoint"
        },
        "returns": {
          "length": 0,
          "name": "createSVGPoint",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.createSVGRect",
        "info": {
          "code": "SVGSVGElement.prototype.createSVGRect"
        },
        "returns": {
          "length": 0,
          "name": "createSVGRect",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.createSVGTransform",
        "info": {
          "code": "SVGSVGElement.prototype.createSVGTransform"
        },
        "returns": {
          "length": 0,
          "name": "createSVGTransform",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.createSVGTransformFromMatrix",
        "info": {
          "code": "SVGSVGElement.prototype.createSVGTransformFromMatrix"
        },
        "returns": {
          "length": 1,
          "name": "createSVGTransformFromMatrix",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.currentScale",
        "info": {
          "code": "'currentScale' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSVGElement.currentTranslate",
        "info": {
          "code": "'currentTranslate' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSVGElement.deselectAll",
        "info": {
          "code": "SVGSVGElement.prototype.deselectAll"
        },
        "returns": {
          "length": 0,
          "name": "deselectAll",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.forceRedraw",
        "info": {
          "code": "SVGSVGElement.prototype.forceRedraw"
        },
        "returns": {
          "length": 0,
          "name": "forceRedraw",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.getElementById",
        "info": {
          "code": "SVGSVGElement.prototype.getElementById"
        },
        "returns": {
          "length": 1,
          "name": "getElementById",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.getEnclosureList",
        "info": {
          "code": "SVGSVGElement.prototype.getEnclosureList"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGSVGElement.getIntersectionList",
        "info": {
          "code": "SVGSVGElement.prototype.getIntersectionList"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGSVGElement.height",
        "info": {
          "code": "'height' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSVGElement.onafterprint",
        "info": {
          "code": "'onafterprint' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onbeforeprint",
        "info": {
          "code": "'onbeforeprint' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onbeforeunload",
        "info": {
          "code": "'onbeforeunload' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onhashchange",
        "info": {
          "code": "'onhashchange' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onlanguagechange",
        "info": {
          "code": "'onlanguagechange' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onmessage",
        "info": {
          "code": "'onmessage' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onmessageerror",
        "info": {
          "code": "'onmessageerror' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onoffline",
        "info": {
          "code": "'onoffline' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.ononline",
        "info": {
          "code": "'ononline' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onpagehide",
        "info": {
          "code": "'onpagehide' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onpageshow",
        "info": {
          "code": "'onpageshow' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onpopstate",
        "info": {
          "code": "'onpopstate' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onrejectionhandled",
        "info": {
          "code": "'onrejectionhandled' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onstorage",
        "info": {
          "code": "'onstorage' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onunhandledrejection",
        "info": {
          "code": "'onunhandledrejection' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.onunload",
        "info": {
          "code": "'onunload' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGSVGElement.preserveAspectRatio",
        "info": {
          "code": "'preserveAspectRatio' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSVGElement.suspendRedraw",
        "info": {
          "code": "SVGSVGElement.prototype.suspendRedraw"
        },
        "returns": {
          "length": 1,
          "name": "suspendRedraw",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.SVG_ZOOMANDPAN_DISABLE",
        "info": {
          "code": "SVGSVGElement.SVG_ZOOMANDPAN_DISABLE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGSVGElement.SVG_ZOOMANDPAN_MAGNIFY",
        "info": {
          "code": "SVGSVGElement.SVG_ZOOMANDPAN_MAGNIFY"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGSVGElement.SVG_ZOOMANDPAN_UNKNOWN",
        "info": {
          "code": "SVGSVGElement.SVG_ZOOMANDPAN_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGSVGElement.unsuspendRedraw",
        "info": {
          "code": "SVGSVGElement.prototype.unsuspendRedraw"
        },
        "returns": {
          "length": 1,
          "name": "unsuspendRedraw",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.unsuspendRedrawAll",
        "info": {
          "code": "SVGSVGElement.prototype.unsuspendRedrawAll"
        },
        "returns": {
          "length": 0,
          "name": "unsuspendRedrawAll",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSVGElement.viewBox",
        "info": {
          "code": "'viewBox' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSVGElement.width",
        "info": {
          "code": "'width' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSVGElement.x",
        "info": {
          "code": "'x' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSVGElement.y",
        "info": {
          "code": "'y' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSVGElement.zoomAndPan",
        "info": {
          "code": "'zoomAndPan' in SVGSVGElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSwitchElement",
        "info": {
          "code": "self.SVGSwitchElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGSwitchElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSymbolElement",
        "info": {
          "code": "self.SVGSymbolElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGSymbolElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGSymbolElement.preserveAspectRatio",
        "info": {
          "code": "'preserveAspectRatio' in SVGSymbolElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGSymbolElement.viewBox",
        "info": {
          "code": "'viewBox' in SVGSymbolElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextContentElement",
        "info": {
          "code": "self.SVGTextContentElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGTextContentElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.getCharNumAtPosition",
        "info": {
          "code": "SVGTextContentElement.prototype.getCharNumAtPosition"
        },
        "returns": {
          "length": 1,
          "name": "getCharNumAtPosition",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.getComputedTextLength",
        "info": {
          "code": "SVGTextContentElement.prototype.getComputedTextLength"
        },
        "returns": {
          "length": 0,
          "name": "getComputedTextLength",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.getEndPositionOfChar",
        "info": {
          "code": "SVGTextContentElement.prototype.getEndPositionOfChar"
        },
        "returns": {
          "length": 1,
          "name": "getEndPositionOfChar",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.getExtentOfChar",
        "info": {
          "code": "SVGTextContentElement.prototype.getExtentOfChar"
        },
        "returns": {
          "length": 1,
          "name": "getExtentOfChar",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.getNumberOfChars",
        "info": {
          "code": "SVGTextContentElement.prototype.getNumberOfChars"
        },
        "returns": {
          "length": 0,
          "name": "getNumberOfChars",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.getRotationOfChar",
        "info": {
          "code": "SVGTextContentElement.prototype.getRotationOfChar"
        },
        "returns": {
          "length": 1,
          "name": "getRotationOfChar",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.getStartPositionOfChar",
        "info": {
          "code": "SVGTextContentElement.prototype.getStartPositionOfChar"
        },
        "returns": {
          "length": 1,
          "name": "getStartPositionOfChar",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.getSubStringLength",
        "info": {
          "code": "SVGTextContentElement.prototype.getSubStringLength"
        },
        "returns": {
          "length": 2,
          "name": "getSubStringLength",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.lengthAdjust",
        "info": {
          "code": "'lengthAdjust' in SVGTextContentElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextContentElement.LENGTHADJUST_SPACING",
        "info": {
          "code": "SVGTextContentElement.LENGTHADJUST_SPACING"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGTextContentElement.LENGTHADJUST_SPACINGANDGLYPHS",
        "info": {
          "code": "SVGTextContentElement.LENGTHADJUST_SPACINGANDGLYPHS"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGTextContentElement.LENGTHADJUST_UNKNOWN",
        "info": {
          "code": "SVGTextContentElement.LENGTHADJUST_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGTextContentElement.selectSubString",
        "info": {
          "code": "SVGTextContentElement.prototype.selectSubString"
        },
        "returns": {
          "length": 2,
          "name": "selectSubString",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextContentElement.textLength",
        "info": {
          "code": "'textLength' in SVGTextContentElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextElement",
        "info": {
          "code": "self.SVGTextElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGTextElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextPathElement",
        "info": {
          "code": "self.SVGTextPathElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGTextPathElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextPathElement.href",
        "info": {
          "code": "'href' in SVGTextPathElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextPathElement.method",
        "info": {
          "code": "'method' in SVGTextPathElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextPathElement.spacing",
        "info": {
          "code": "'spacing' in SVGTextPathElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextPathElement.startOffset",
        "info": {
          "code": "'startOffset' in SVGTextPathElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextPathElement.TEXTPATH_METHODTYPE_ALIGN",
        "info": {
          "code": "SVGTextPathElement.TEXTPATH_METHODTYPE_ALIGN"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGTextPathElement.TEXTPATH_METHODTYPE_STRETCH",
        "info": {
          "code": "SVGTextPathElement.TEXTPATH_METHODTYPE_STRETCH"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGTextPathElement.TEXTPATH_METHODTYPE_UNKNOWN",
        "info": {
          "code": "SVGTextPathElement.TEXTPATH_METHODTYPE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGTextPathElement.TEXTPATH_SPACINGTYPE_AUTO",
        "info": {
          "code": "SVGTextPathElement.TEXTPATH_SPACINGTYPE_AUTO"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGTextPathElement.TEXTPATH_SPACINGTYPE_EXACT",
        "info": {
          "code": "SVGTextPathElement.TEXTPATH_SPACINGTYPE_EXACT"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGTextPathElement.TEXTPATH_SPACINGTYPE_UNKNOWN",
        "info": {
          "code": "SVGTextPathElement.TEXTPATH_SPACINGTYPE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGTextPositioningElement",
        "info": {
          "code": "self.SVGTextPositioningElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGTextPositioningElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTextPositioningElement.dx",
        "info": {
          "code": "'dx' in SVGTextPositioningElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextPositioningElement.dy",
        "info": {
          "code": "'dy' in SVGTextPositioningElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextPositioningElement.rotate",
        "info": {
          "code": "'rotate' in SVGTextPositioningElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextPositioningElement.x",
        "info": {
          "code": "'x' in SVGTextPositioningElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTextPositioningElement.y",
        "info": {
          "code": "'y' in SVGTextPositioningElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTitleElement",
        "info": {
          "code": "self.SVGTitleElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGTitleElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransform",
        "info": {
          "code": "self.SVGTransform"
        },
        "returns": {
          "length": 0,
          "name": "SVGTransform",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransform.angle",
        "info": {
          "code": "'angle' in SVGTransform.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTransform.matrix",
        "info": {
          "code": "'matrix' in SVGTransform.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTransform.setMatrix",
        "info": {
          "code": "SVGTransform.prototype.setMatrix"
        },
        "returns": {
          "length": 1,
          "name": "setMatrix",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransform.setRotate",
        "info": {
          "code": "SVGTransform.prototype.setRotate"
        },
        "returns": {
          "length": 3,
          "name": "setRotate",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransform.setScale",
        "info": {
          "code": "SVGTransform.prototype.setScale"
        },
        "returns": {
          "length": 2,
          "name": "setScale",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransform.setSkewX",
        "info": {
          "code": "SVGTransform.prototype.setSkewX"
        },
        "returns": {
          "length": 1,
          "name": "setSkewX",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransform.setSkewY",
        "info": {
          "code": "SVGTransform.prototype.setSkewY"
        },
        "returns": {
          "length": 1,
          "name": "setSkewY",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransform.setTranslate",
        "info": {
          "code": "SVGTransform.prototype.setTranslate"
        },
        "returns": {
          "length": 2,
          "name": "setTranslate",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransform.SVG_TRANSFORM_MATRIX",
        "info": {
          "code": "SVGTransform.SVG_TRANSFORM_MATRIX"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGTransform.SVG_TRANSFORM_ROTATE",
        "info": {
          "code": "SVGTransform.SVG_TRANSFORM_ROTATE"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.SVGTransform.SVG_TRANSFORM_SCALE",
        "info": {
          "code": "SVGTransform.SVG_TRANSFORM_SCALE"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.SVGTransform.SVG_TRANSFORM_SKEWX",
        "info": {
          "code": "SVGTransform.SVG_TRANSFORM_SKEWX"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.SVGTransform.SVG_TRANSFORM_SKEWY",
        "info": {
          "code": "SVGTransform.SVG_TRANSFORM_SKEWY"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.SVGTransform.SVG_TRANSFORM_TRANSLATE",
        "info": {
          "code": "SVGTransform.SVG_TRANSFORM_TRANSLATE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGTransform.SVG_TRANSFORM_UNKNOWN",
        "info": {
          "code": "SVGTransform.SVG_TRANSFORM_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGTransform.type",
        "info": {
          "code": "'type' in SVGTransform.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTransformList",
        "info": {
          "code": "self.SVGTransformList"
        },
        "returns": {
          "length": 0,
          "name": "SVGTransformList",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransformList.appendItem",
        "info": {
          "code": "SVGTransformList.prototype.appendItem"
        },
        "returns": {
          "length": 1,
          "name": "appendItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransformList.clear",
        "info": {
          "code": "SVGTransformList.prototype.clear"
        },
        "returns": {
          "length": 0,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransformList.consolidate",
        "info": {
          "code": "SVGTransformList.prototype.consolidate"
        },
        "returns": {
          "length": 0,
          "name": "consolidate",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransformList.createSVGTransformFromMatrix",
        "info": {
          "code": "SVGTransformList.prototype.createSVGTransformFromMatrix"
        },
        "returns": {
          "length": 1,
          "name": "createSVGTransformFromMatrix",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransformList.getItem",
        "info": {
          "code": "SVGTransformList.prototype.getItem"
        },
        "returns": {
          "length": 1,
          "name": "getItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransformList.initialize",
        "info": {
          "code": "SVGTransformList.prototype.initialize"
        },
        "returns": {
          "length": 1,
          "name": "initialize",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransformList.insertItemBefore",
        "info": {
          "code": "SVGTransformList.prototype.insertItemBefore"
        },
        "returns": {
          "length": 2,
          "name": "insertItemBefore",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransformList.length",
        "info": {
          "code": "'length' in SVGTransformList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTransformList.numberOfItems",
        "info": {
          "code": "'numberOfItems' in SVGTransformList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGTransformList.removeItem",
        "info": {
          "code": "SVGTransformList.prototype.removeItem"
        },
        "returns": {
          "length": 1,
          "name": "removeItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTransformList.replaceItem",
        "info": {
          "code": "SVGTransformList.prototype.replaceItem"
        },
        "returns": {
          "length": 2,
          "name": "replaceItem",
          "type": "function"
        }
      },
      {
        "context": "api.SVGTSpanElement",
        "info": {
          "code": "self.SVGTSpanElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGTSpanElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGUnitTypes",
        "info": {
          "code": "self.SVGUnitTypes"
        },
        "returns": {
          "length": 0,
          "name": "SVGUnitTypes",
          "type": "function"
        }
      },
      {
        "context": "api.SVGUnitTypes.SVG_UNIT_TYPE_OBJECTBOUNDINGBOX",
        "info": {
          "code": "SVGUnitTypes.SVG_UNIT_TYPE_OBJECTBOUNDINGBOX"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGUnitTypes.SVG_UNIT_TYPE_UNKNOWN",
        "info": {
          "code": "SVGUnitTypes.SVG_UNIT_TYPE_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGUnitTypes.SVG_UNIT_TYPE_USERSPACEONUSE",
        "info": {
          "code": "SVGUnitTypes.SVG_UNIT_TYPE_USERSPACEONUSE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGUnknownElement",
        "info": {
          "code": "self.SVGUnknownElement"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGUseElement",
        "info": {
          "code": "self.SVGUseElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGUseElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGUseElement.animatedInstanceRoot",
        "info": {
          "code": "'animatedInstanceRoot' in SVGUseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGUseElement.height",
        "info": {
          "code": "'height' in SVGUseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGUseElement.href",
        "info": {
          "code": "'href' in SVGUseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGUseElement.instanceRoot",
        "info": {
          "code": "'instanceRoot' in SVGUseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.SVGUseElement.width",
        "info": {
          "code": "'width' in SVGUseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGUseElement.x",
        "info": {
          "code": "'x' in SVGUseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGUseElement.y",
        "info": {
          "code": "'y' in SVGUseElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGUseElementShadowRoot",
        "info": {
          "code": "self.SVGUseElementShadowRoot"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SVGViewElement",
        "info": {
          "code": "self.SVGViewElement"
        },
        "returns": {
          "length": 0,
          "name": "SVGViewElement",
          "type": "function"
        }
      },
      {
        "context": "api.SVGViewElement.preserveAspectRatio",
        "info": {
          "code": "'preserveAspectRatio' in SVGViewElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGViewElement.SVG_ZOOMANDPAN_DISABLE",
        "info": {
          "code": "SVGViewElement.SVG_ZOOMANDPAN_DISABLE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.SVGViewElement.SVG_ZOOMANDPAN_MAGNIFY",
        "info": {
          "code": "SVGViewElement.SVG_ZOOMANDPAN_MAGNIFY"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.SVGViewElement.SVG_ZOOMANDPAN_UNKNOWN",
        "info": {
          "code": "SVGViewElement.SVG_ZOOMANDPAN_UNKNOWN"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.SVGViewElement.viewBox",
        "info": {
          "code": "'viewBox' in SVGViewElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SVGViewElement.zoomAndPan",
        "info": {
          "code": "'zoomAndPan' in SVGViewElement.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.SyncEvent",
        "info": {
          "code": "self.SyncEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SyncEvent.lastChance",
        "info": {
          "code": "'lastChance' in SyncEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SyncEvent.tag",
        "info": {
          "code": "'tag' in SyncEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SyncManager",
        "info": {
          "code": "self.SyncManager"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.SyncManager.getTags",
        "info": {
          "code": "SyncManager.prototype.getTags"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.SyncManager.register",
        "info": {
          "code": "SyncManager.prototype.register"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Table",
        "info": {
          "code": "self.Table"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Table.get",
        "info": {
          "code": "Table.prototype.get"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Table.grow",
        "info": {
          "code": "Table.prototype.grow"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Table.length",
        "info": {
          "code": "'length' in Table.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Table.set",
        "info": {
          "code": "Table.prototype.set"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TaskAttributionTiming",
        "info": {
          "code": "self.TaskAttributionTiming"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.TaskAttributionTiming.containerId",
        "info": {
          "code": "'containerId' in TaskAttributionTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TaskAttributionTiming.containerName",
        "info": {
          "code": "'containerName' in TaskAttributionTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TaskAttributionTiming.containerSrc",
        "info": {
          "code": "'containerSrc' in TaskAttributionTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TaskAttributionTiming.containerType",
        "info": {
          "code": "'containerType' in TaskAttributionTiming.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Text",
        "info": {
          "code": "self.Text"
        },
        "returns": {
          "length": 0,
          "name": "Text",
          "type": "function"
        }
      },
      {
        "context": "api.Text.assignedSlot",
        "info": {
          "code": "'assignedSlot' in Text.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Text.convertPointFromNode",
        "info": {
          "code": "Text.prototype.convertPointFromNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Text.convertQuadFromNode",
        "info": {
          "code": "Text.prototype.convertQuadFromNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Text.convertRectFromNode",
        "info": {
          "code": "Text.prototype.convertRectFromNode"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Text.getBoxQuads",
        "info": {
          "code": "Text.prototype.getBoxQuads"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Text.splitText",
        "info": {
          "code": "Text.prototype.splitText"
        },
        "returns": {
          "length": 1,
          "name": "splitText",
          "type": "function"
        }
      },
      {
        "context": "api.Text.wholeText",
        "info": {
          "code": "'wholeText' in Text.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextDecoder",
        "info": {
          "code": "self.TextDecoder"
        },
        "returns": {
          "length": 0,
          "name": "TextDecoder",
          "type": "function"
        }
      },
      {
        "context": "api.TextDecoder.decode",
        "info": {
          "code": "TextDecoder.prototype.decode"
        },
        "returns": {
          "length": 0,
          "name": "decode",
          "type": "function"
        }
      },
      {
        "context": "api.TextDecoder.encoding",
        "info": {
          "code": "'encoding' in TextDecoder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextDecoder.fatal",
        "info": {
          "code": "'fatal' in TextDecoder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextDecoder.ignoreBOM",
        "info": {
          "code": "'ignoreBOM' in TextDecoder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextDecoderStream",
        "info": {
          "code": "self.TextDecoderStream"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.TextDecoderStream.encoding",
        "info": {
          "code": "'encoding' in TextDecoderStream.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TextDecoderStream.fatal",
        "info": {
          "code": "'fatal' in TextDecoderStream.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TextDecoderStream.ignoreBOM",
        "info": {
          "code": "'ignoreBOM' in TextDecoderStream.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TextDecoderStream.readable",
        "info": {
          "code": "'readable' in TextDecoderStream.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TextDecoderStream.writable",
        "info": {
          "code": "'writable' in TextDecoderStream.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TextEncoder",
        "info": {
          "code": "self.TextEncoder"
        },
        "returns": {
          "length": 0,
          "name": "TextEncoder",
          "type": "function"
        }
      },
      {
        "context": "api.TextEncoder.encode",
        "info": {
          "code": "TextEncoder.prototype.encode"
        },
        "returns": {
          "length": 0,
          "name": "encode",
          "type": "function"
        }
      },
      {
        "context": "api.TextEncoder.encodeInto",
        "info": {
          "code": "TextEncoder.prototype.encodeInto"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.TextEncoder.encoding",
        "info": {
          "code": "'encoding' in TextEncoder.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextEncoderStream",
        "info": {
          "code": "self.TextEncoderStream"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.TextEncoderStream.encoding",
        "info": {
          "code": "'encoding' in TextEncoderStream.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TextEncoderStream.readable",
        "info": {
          "code": "'readable' in TextEncoderStream.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TextEncoderStream.writable",
        "info": {
          "code": "'writable' in TextEncoderStream.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.TextMetrics",
        "info": {
          "code": "self.TextMetrics"
        },
        "returns": {
          "length": 0,
          "name": "TextMetrics",
          "type": "function"
        }
      },
      {
        "context": "api.TextMetrics.actualBoundingBoxAscent",
        "info": {
          "code": "'actualBoundingBoxAscent' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.actualBoundingBoxDescent",
        "info": {
          "code": "'actualBoundingBoxDescent' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.actualBoundingBoxLeft",
        "info": {
          "code": "'actualBoundingBoxLeft' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.actualBoundingBoxRight",
        "info": {
          "code": "'actualBoundingBoxRight' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.alphabeticBaseline",
        "info": {
          "code": "'alphabeticBaseline' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.emHeightAscent",
        "info": {
          "code": "'emHeightAscent' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.emHeightDescent",
        "info": {
          "code": "'emHeightDescent' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.fontBoundingBoxAscent",
        "info": {
          "code": "'fontBoundingBoxAscent' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.fontBoundingBoxDescent",
        "info": {
          "code": "'fontBoundingBoxDescent' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.hangingBaseline",
        "info": {
          "code": "'hangingBaseline' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.ideographicBaseline",
        "info": {
          "code": "'ideographicBaseline' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextMetrics.width",
        "info": {
          "code": "'width' in TextMetrics.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack",
        "info": {
          "code": "self.TextTrack"
        },
        "returns": {
          "length": 0,
          "name": "TextTrack",
          "type": "function"
        }
      },
      {
        "context": "api.TextTrack.activeCues",
        "info": {
          "code": "'activeCues' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack.addCue",
        "info": {
          "code": "TextTrack.prototype.addCue"
        },
        "returns": {
          "length": 1,
          "name": "addCue",
          "type": "function"
        }
      },
      {
        "context": "api.TextTrack.cues",
        "info": {
          "code": "'cues' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack.id",
        "info": {
          "code": "'id' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack.inBandMetadataTrackDispatchType",
        "info": {
          "code": "'inBandMetadataTrackDispatchType' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack.kind",
        "info": {
          "code": "'kind' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack.label",
        "info": {
          "code": "'label' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack.language",
        "info": {
          "code": "'language' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack.mode",
        "info": {
          "code": "'mode' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack.oncuechange",
        "info": {
          "code": "'oncuechange' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrack.removeCue",
        "info": {
          "code": "TextTrack.prototype.removeCue"
        },
        "returns": {
          "length": 1,
          "name": "removeCue",
          "type": "function"
        }
      },
      {
        "context": "api.TextTrack.sourceBuffer",
        "info": {
          "code": "'sourceBuffer' in TextTrack.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TextTrackCue",
        "info": {
          "code": "self.TextTrackCue"
        },
        "returns": {
          "length": 0,
          "name": "TextTrackCue",
          "type": "function"
        }
      },
      {
        "context": "api.TextTrackCue.endTime",
        "info": {
          "code": "'endTime' in TextTrackCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackCue.id",
        "info": {
          "code": "'id' in TextTrackCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackCue.onenter",
        "info": {
          "code": "'onenter' in TextTrackCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackCue.onexit",
        "info": {
          "code": "'onexit' in TextTrackCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackCue.pauseOnExit",
        "info": {
          "code": "'pauseOnExit' in TextTrackCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackCue.startTime",
        "info": {
          "code": "'startTime' in TextTrackCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackCue.track",
        "info": {
          "code": "'track' in TextTrackCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackCueList",
        "info": {
          "code": "self.TextTrackCueList"
        },
        "returns": {
          "length": 0,
          "name": "TextTrackCueList",
          "type": "function"
        }
      },
      {
        "context": "api.TextTrackCueList.getCueById",
        "info": {
          "code": "TextTrackCueList.prototype.getCueById"
        },
        "returns": {
          "length": 1,
          "name": "getCueById",
          "type": "function"
        }
      },
      {
        "context": "api.TextTrackCueList.length",
        "info": {
          "code": "'length' in TextTrackCueList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackList",
        "info": {
          "code": "self.TextTrackList"
        },
        "returns": {
          "length": 0,
          "name": "TextTrackList",
          "type": "function"
        }
      },
      {
        "context": "api.TextTrackList.getTrackById",
        "info": {
          "code": "TextTrackList.prototype.getTrackById"
        },
        "returns": {
          "length": 1,
          "name": "getTrackById",
          "type": "function"
        }
      },
      {
        "context": "api.TextTrackList.length",
        "info": {
          "code": "'length' in TextTrackList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackList.onaddtrack",
        "info": {
          "code": "'onaddtrack' in TextTrackList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackList.onchange",
        "info": {
          "code": "'onchange' in TextTrackList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TextTrackList.onremovetrack",
        "info": {
          "code": "'onremovetrack' in TextTrackList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TimeRanges",
        "info": {
          "code": "self.TimeRanges"
        },
        "returns": {
          "length": 0,
          "name": "TimeRanges",
          "type": "function"
        }
      },
      {
        "context": "api.TimeRanges.end",
        "info": {
          "code": "TimeRanges.prototype.end"
        },
        "returns": {
          "length": 1,
          "name": "end",
          "type": "function"
        }
      },
      {
        "context": "api.TimeRanges.length",
        "info": {
          "code": "'length' in TimeRanges.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TimeRanges.start",
        "info": {
          "code": "TimeRanges.prototype.start"
        },
        "returns": {
          "length": 1,
          "name": "start",
          "type": "function"
        }
      },
      {
        "context": "api.Touch",
        "info": {
          "code": "self.Touch"
        },
        "returns": {
          "length": 1,
          "name": "Touch",
          "type": "function"
        }
      },
      {
        "context": "api.Touch.altitudeAngle",
        "info": {
          "code": "'altitudeAngle' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Touch.azimuthAngle",
        "info": {
          "code": "'azimuthAngle' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Touch.clientX",
        "info": {
          "code": "'clientX' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.clientY",
        "info": {
          "code": "'clientY' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.force",
        "info": {
          "code": "'force' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.identifier",
        "info": {
          "code": "'identifier' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.pageX",
        "info": {
          "code": "'pageX' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.pageY",
        "info": {
          "code": "'pageY' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.radiusX",
        "info": {
          "code": "'radiusX' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.radiusY",
        "info": {
          "code": "'radiusY' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.rotationAngle",
        "info": {
          "code": "'rotationAngle' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.screenX",
        "info": {
          "code": "'screenX' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.screenY",
        "info": {
          "code": "'screenY' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.target",
        "info": {
          "code": "'target' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Touch.touchType",
        "info": {
          "code": "'touchType' in Touch.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.TouchEvent",
        "info": {
          "code": "self.TouchEvent"
        },
        "returns": {
          "length": 1,
          "name": "TouchEvent",
          "type": "function"
        }
      },
      {
        "context": "api.TouchEvent.altKey",
        "info": {
          "code": "'altKey' in TouchEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TouchEvent.changedTouches",
        "info": {
          "code": "'changedTouches' in TouchEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TouchEvent.ctrlKey",
        "info": {
          "code": "'ctrlKey' in TouchEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TouchEvent.metaKey",
        "info": {
          "code": "'metaKey' in TouchEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TouchEvent.shiftKey",
        "info": {
          "code": "'shiftKey' in TouchEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TouchEvent.targetTouches",
        "info": {
          "code": "'targetTouches' in TouchEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TouchEvent.touches",
        "info": {
          "code": "'touches' in TouchEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TouchList",
        "info": {
          "code": "self.TouchList"
        },
        "returns": {
          "length": 0,
          "name": "TouchList",
          "type": "function"
        }
      },
      {
        "context": "api.TouchList.item",
        "info": {
          "code": "TouchList.prototype.item"
        },
        "returns": {
          "length": 1,
          "name": "item",
          "type": "function"
        }
      },
      {
        "context": "api.TouchList.length",
        "info": {
          "code": "'length' in TouchList.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TrackEvent",
        "info": {
          "code": "self.TrackEvent"
        },
        "returns": {
          "length": 1,
          "name": "TrackEvent",
          "type": "function"
        }
      },
      {
        "context": "api.TrackEvent.track",
        "info": {
          "code": "'track' in TrackEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TransitionEvent",
        "info": {
          "code": "self.TransitionEvent"
        },
        "returns": {
          "length": 1,
          "name": "TransitionEvent",
          "type": "function"
        }
      },
      {
        "context": "api.TransitionEvent.elapsedTime",
        "info": {
          "code": "'elapsedTime' in TransitionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TransitionEvent.propertyName",
        "info": {
          "code": "'propertyName' in TransitionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TransitionEvent.pseudoElement",
        "info": {
          "code": "'pseudoElement' in TransitionEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TreeWalker",
        "info": {
          "code": "self.TreeWalker"
        },
        "returns": {
          "length": 0,
          "name": "TreeWalker",
          "type": "function"
        }
      },
      {
        "context": "api.TreeWalker.currentNode",
        "info": {
          "code": "'currentNode' in TreeWalker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TreeWalker.filter",
        "info": {
          "code": "'filter' in TreeWalker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TreeWalker.firstChild",
        "info": {
          "code": "TreeWalker.prototype.firstChild"
        },
        "returns": {
          "length": 0,
          "name": "firstChild",
          "type": "function"
        }
      },
      {
        "context": "api.TreeWalker.lastChild",
        "info": {
          "code": "TreeWalker.prototype.lastChild"
        },
        "returns": {
          "length": 0,
          "name": "lastChild",
          "type": "function"
        }
      },
      {
        "context": "api.TreeWalker.nextNode",
        "info": {
          "code": "TreeWalker.prototype.nextNode"
        },
        "returns": {
          "length": 0,
          "name": "nextNode",
          "type": "function"
        }
      },
      {
        "context": "api.TreeWalker.nextSibling",
        "info": {
          "code": "TreeWalker.prototype.nextSibling"
        },
        "returns": {
          "length": 0,
          "name": "nextSibling",
          "type": "function"
        }
      },
      {
        "context": "api.TreeWalker.parentNode",
        "info": {
          "code": "TreeWalker.prototype.parentNode"
        },
        "returns": {
          "length": 0,
          "name": "parentNode",
          "type": "function"
        }
      },
      {
        "context": "api.TreeWalker.previousNode",
        "info": {
          "code": "TreeWalker.prototype.previousNode"
        },
        "returns": {
          "length": 0,
          "name": "previousNode",
          "type": "function"
        }
      },
      {
        "context": "api.TreeWalker.previousSibling",
        "info": {
          "code": "TreeWalker.prototype.previousSibling"
        },
        "returns": {
          "length": 0,
          "name": "previousSibling",
          "type": "function"
        }
      },
      {
        "context": "api.TreeWalker.root",
        "info": {
          "code": "'root' in TreeWalker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.TreeWalker.whatToShow",
        "info": {
          "code": "'whatToShow' in TreeWalker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.UIEvent",
        "info": {
          "code": "self.UIEvent"
        },
        "returns": {
          "length": 1,
          "name": "UIEvent",
          "type": "function"
        }
      },
      {
        "context": "api.UIEvent.detail",
        "info": {
          "code": "'detail' in UIEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.UIEvent.sourceCapabilities",
        "info": {
          "code": "'sourceCapabilities' in UIEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.UIEvent.view",
        "info": {
          "code": "'view' in UIEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.UIEvent.which",
        "info": {
          "code": "'which' in UIEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.UncalibratedMagnetometer",
        "info": {
          "code": "self.UncalibratedMagnetometer"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.UncalibratedMagnetometer.x",
        "info": {
          "code": "'x' in UncalibratedMagnetometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.UncalibratedMagnetometer.xBias",
        "info": {
          "code": "'xBias' in UncalibratedMagnetometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.UncalibratedMagnetometer.y",
        "info": {
          "code": "'y' in UncalibratedMagnetometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.UncalibratedMagnetometer.yBias",
        "info": {
          "code": "'yBias' in UncalibratedMagnetometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.UncalibratedMagnetometer.z",
        "info": {
          "code": "'z' in UncalibratedMagnetometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.UncalibratedMagnetometer.zBias",
        "info": {
          "code": "'zBias' in UncalibratedMagnetometer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.URL",
        "info": {
          "code": "self.URL"
        },
        "returns": {
          "length": 1,
          "name": "URL",
          "type": "function"
        }
      },
      {
        "context": "api.URL.createObjectURL",
        "info": {
          "code": "URL.createObjectURL"
        },
        "returns": {
          "length": 1,
          "name": "createObjectURL",
          "type": "function"
        }
      },
      {
        "context": "api.URL.createObjectURL",
        "info": {
          "code": "URL.createObjectURL"
        },
        "returns": {
          "length": 1,
          "name": "createObjectURL",
          "type": "function"
        }
      },
      {
        "context": "api.URL.hash",
        "info": {
          "code": "'hash' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.host",
        "info": {
          "code": "'host' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.hostname",
        "info": {
          "code": "'hostname' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.href",
        "info": {
          "code": "'href' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.origin",
        "info": {
          "code": "'origin' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.password",
        "info": {
          "code": "'password' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.pathname",
        "info": {
          "code": "'pathname' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.port",
        "info": {
          "code": "'port' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.protocol",
        "info": {
          "code": "'protocol' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.revokeObjectURL",
        "info": {
          "code": "URL.revokeObjectURL"
        },
        "returns": {
          "length": 1,
          "name": "revokeObjectURL",
          "type": "function"
        }
      },
      {
        "context": "api.URL.search",
        "info": {
          "code": "'search' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.searchParams",
        "info": {
          "code": "'searchParams' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URL.toJSON",
        "info": {
          "code": "URL.prototype.toJSON"
        },
        "returns": {
          "length": 0,
          "name": "toJSON",
          "type": "function"
        }
      },
      {
        "context": "api.URL.username",
        "info": {
          "code": "'username' in URL.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.URLSearchParams",
        "info": {
          "code": "self.URLSearchParams"
        },
        "returns": {
          "length": 0,
          "name": "URLSearchParams",
          "type": "function"
        }
      },
      {
        "context": "api.URLSearchParams.append",
        "info": {
          "code": "URLSearchParams.prototype.append"
        },
        "returns": {
          "length": 2,
          "name": "append",
          "type": "function"
        }
      },
      {
        "context": "api.URLSearchParams.delete",
        "info": {
          "code": "URLSearchParams.prototype.delete"
        },
        "returns": {
          "length": 1,
          "name": "delete",
          "type": "function"
        }
      },
      {
        "context": "api.URLSearchParams.get",
        "info": {
          "code": "URLSearchParams.prototype.get"
        },
        "returns": {
          "length": 1,
          "name": "get",
          "type": "function"
        }
      },
      {
        "context": "api.URLSearchParams.getAll",
        "info": {
          "code": "URLSearchParams.prototype.getAll"
        },
        "returns": {
          "length": 1,
          "name": "getAll",
          "type": "function"
        }
      },
      {
        "context": "api.URLSearchParams.has",
        "info": {
          "code": "URLSearchParams.prototype.has"
        },
        "returns": {
          "length": 1,
          "name": "has",
          "type": "function"
        }
      },
      {
        "context": "api.URLSearchParams.set",
        "info": {
          "code": "URLSearchParams.prototype.set"
        },
        "returns": {
          "length": 2,
          "name": "set",
          "type": "function"
        }
      },
      {
        "context": "api.URLSearchParams.sort",
        "info": {
          "code": "URLSearchParams.prototype.sort"
        },
        "returns": {
          "length": 0,
          "name": "sort",
          "type": "function"
        }
      },
      {
        "context": "api.USB",
        "info": {
          "code": "self.USB"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USB.getDevices",
        "info": {
          "code": "USB.prototype.getDevices"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USB.onconnect",
        "info": {
          "code": "'onconnect' in USB.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USB.ondisconnect",
        "info": {
          "code": "'ondisconnect' in USB.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USB.requestDevice",
        "info": {
          "code": "USB.prototype.requestDevice"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBAlternateInterface",
        "info": {
          "code": "self.USBAlternateInterface"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBAlternateInterface.alternateSetting",
        "info": {
          "code": "'alternateSetting' in USBAlternateInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBAlternateInterface.endpoints",
        "info": {
          "code": "'endpoints' in USBAlternateInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBAlternateInterface.interfaceClass",
        "info": {
          "code": "'interfaceClass' in USBAlternateInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBAlternateInterface.interfaceName",
        "info": {
          "code": "'interfaceName' in USBAlternateInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBAlternateInterface.interfaceProtocol",
        "info": {
          "code": "'interfaceProtocol' in USBAlternateInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBAlternateInterface.interfaceSubclass",
        "info": {
          "code": "'interfaceSubclass' in USBAlternateInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBConfiguration",
        "info": {
          "code": "self.USBConfiguration"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBConfiguration.configurationName",
        "info": {
          "code": "'configurationName' in USBConfiguration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBConfiguration.configurationValue",
        "info": {
          "code": "'configurationValue' in USBConfiguration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBConfiguration.interfaces",
        "info": {
          "code": "'interfaces' in USBConfiguration.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBConnectionEvent",
        "info": {
          "code": "self.USBConnectionEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBConnectionEvent.device",
        "info": {
          "code": "'device' in USBConnectionEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice",
        "info": {
          "code": "self.USBDevice"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBDevice.claimInterface",
        "info": {
          "code": "USBDevice.prototype.claimInterface"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.clearHalt",
        "info": {
          "code": "USBDevice.prototype.clearHalt"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.close",
        "info": {
          "code": "USBDevice.prototype.close"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.configuration",
        "info": {
          "code": "'configuration' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.configurations",
        "info": {
          "code": "'configurations' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.controlTransferIn",
        "info": {
          "code": "USBDevice.prototype.controlTransferIn"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.controlTransferOut",
        "info": {
          "code": "USBDevice.prototype.controlTransferOut"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.deviceClass",
        "info": {
          "code": "'deviceClass' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.deviceProtocol",
        "info": {
          "code": "'deviceProtocol' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.deviceSubclass",
        "info": {
          "code": "'deviceSubclass' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.deviceVersionMajor",
        "info": {
          "code": "'deviceVersionMajor' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.deviceVersionMinor",
        "info": {
          "code": "'deviceVersionMinor' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.deviceVersionSubminor",
        "info": {
          "code": "'deviceVersionSubminor' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.isochronousTransferIn",
        "info": {
          "code": "USBDevice.prototype.isochronousTransferIn"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.isochronousTransferOut",
        "info": {
          "code": "USBDevice.prototype.isochronousTransferOut"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.manufacturerName",
        "info": {
          "code": "'manufacturerName' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.open",
        "info": {
          "code": "USBDevice.prototype.open"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.opened",
        "info": {
          "code": "'opened' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.productId",
        "info": {
          "code": "'productId' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.productName",
        "info": {
          "code": "'productName' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.releaseInterface",
        "info": {
          "code": "USBDevice.prototype.releaseInterface"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.reset",
        "info": {
          "code": "USBDevice.prototype.reset"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.selectAlternateInterface",
        "info": {
          "code": "USBDevice.prototype.selectAlternateInterface"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.selectConfiguration",
        "info": {
          "code": "USBDevice.prototype.selectConfiguration"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.serialNumber",
        "info": {
          "code": "'serialNumber' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.transferIn",
        "info": {
          "code": "USBDevice.prototype.transferIn"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.transferOut",
        "info": {
          "code": "USBDevice.prototype.transferOut"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.usbVersionMajor",
        "info": {
          "code": "'usbVersionMajor' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.usbVersionMinor",
        "info": {
          "code": "'usbVersionMinor' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.usbVersionSubminor",
        "info": {
          "code": "'usbVersionSubminor' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBDevice.vendorId",
        "info": {
          "code": "'vendorId' in USBDevice.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBEndpoint",
        "info": {
          "code": "self.USBEndpoint"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBEndpoint.direction",
        "info": {
          "code": "'direction' in USBEndpoint.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBEndpoint.endpointNumber",
        "info": {
          "code": "'endpointNumber' in USBEndpoint.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBEndpoint.packetSize",
        "info": {
          "code": "'packetSize' in USBEndpoint.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBEndpoint.type",
        "info": {
          "code": "'type' in USBEndpoint.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBInterface",
        "info": {
          "code": "self.USBInterface"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBInterface.alternate",
        "info": {
          "code": "'alternate' in USBInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBInterface.alternates",
        "info": {
          "code": "'alternates' in USBInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBInterface.claimed",
        "info": {
          "code": "'claimed' in USBInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBInterface.interfaceNumber",
        "info": {
          "code": "'interfaceNumber' in USBInterface.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBInTransferResult",
        "info": {
          "code": "self.USBInTransferResult"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBInTransferResult.data",
        "info": {
          "code": "'data' in USBInTransferResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBInTransferResult.status",
        "info": {
          "code": "'status' in USBInTransferResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBIsochronousInTransferPacket",
        "info": {
          "code": "self.USBIsochronousInTransferPacket"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBIsochronousInTransferPacket.data",
        "info": {
          "code": "'data' in USBIsochronousInTransferPacket.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBIsochronousInTransferPacket.status",
        "info": {
          "code": "'status' in USBIsochronousInTransferPacket.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBIsochronousInTransferResult",
        "info": {
          "code": "self.USBIsochronousInTransferResult"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBIsochronousInTransferResult.data",
        "info": {
          "code": "'data' in USBIsochronousInTransferResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBIsochronousInTransferResult.packets",
        "info": {
          "code": "'packets' in USBIsochronousInTransferResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBIsochronousOutTransferPacket",
        "info": {
          "code": "self.USBIsochronousOutTransferPacket"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBIsochronousOutTransferPacket.bytesWritten",
        "info": {
          "code": "'bytesWritten' in USBIsochronousOutTransferPacket.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBIsochronousOutTransferPacket.status",
        "info": {
          "code": "'status' in USBIsochronousOutTransferPacket.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBIsochronousOutTransferResult",
        "info": {
          "code": "self.USBIsochronousOutTransferResult"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBIsochronousOutTransferResult.packets",
        "info": {
          "code": "'packets' in USBIsochronousOutTransferResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBOutTransferResult",
        "info": {
          "code": "self.USBOutTransferResult"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBOutTransferResult.bytesWritten",
        "info": {
          "code": "'bytesWritten' in USBOutTransferResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBOutTransferResult.status",
        "info": {
          "code": "'status' in USBOutTransferResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.USBPermissionResult",
        "info": {
          "code": "self.USBPermissionResult"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.USBPermissionResult.devices",
        "info": {
          "code": "'devices' in USBPermissionResult.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.ValidityState",
        "info": {
          "code": "self.ValidityState"
        },
        "returns": {
          "length": 0,
          "name": "ValidityState",
          "type": "function"
        }
      },
      {
        "context": "api.ValidityState.badInput",
        "info": {
          "code": "'badInput' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.customError",
        "info": {
          "code": "'customError' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.patternMismatch",
        "info": {
          "code": "'patternMismatch' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.rangeOverflow",
        "info": {
          "code": "'rangeOverflow' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.rangeUnderflow",
        "info": {
          "code": "'rangeUnderflow' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.stepMismatch",
        "info": {
          "code": "'stepMismatch' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.tooLong",
        "info": {
          "code": "'tooLong' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.tooShort",
        "info": {
          "code": "'tooShort' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.typeMismatch",
        "info": {
          "code": "'typeMismatch' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.valid",
        "info": {
          "code": "'valid' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValidityState.valueMissing",
        "info": {
          "code": "'valueMissing' in ValidityState.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.ValueEvent",
        "info": {
          "code": "self.ValueEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.ValueEvent.value",
        "info": {
          "code": "'value' in ValueEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrack",
        "info": {
          "code": "self.VideoTrack"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.VideoTrack.id",
        "info": {
          "code": "'id' in VideoTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrack.kind",
        "info": {
          "code": "'kind' in VideoTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrack.label",
        "info": {
          "code": "'label' in VideoTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrack.language",
        "info": {
          "code": "'language' in VideoTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrack.selected",
        "info": {
          "code": "'selected' in VideoTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrack.sourceBuffer",
        "info": {
          "code": "'sourceBuffer' in VideoTrack.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrackList",
        "info": {
          "code": "self.VideoTrackList"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.VideoTrackList.getTrackById",
        "info": {
          "code": "VideoTrackList.prototype.getTrackById"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrackList.length",
        "info": {
          "code": "'length' in VideoTrackList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrackList.onaddtrack",
        "info": {
          "code": "'onaddtrack' in VideoTrackList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrackList.onchange",
        "info": {
          "code": "'onchange' in VideoTrackList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrackList.onremovetrack",
        "info": {
          "code": "'onremovetrack' in VideoTrackList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VideoTrackList.selectedIndex",
        "info": {
          "code": "'selectedIndex' in VideoTrackList.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.VTTCue",
        "info": {
          "code": "self.VTTCue"
        },
        "returns": {
          "length": 3,
          "name": "VTTCue",
          "type": "function"
        }
      },
      {
        "context": "api.VTTCue.align",
        "info": {
          "code": "'align' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTCue.getCueAsHTML",
        "info": {
          "code": "VTTCue.prototype.getCueAsHTML"
        },
        "returns": {
          "length": 0,
          "name": "getCueAsHTML",
          "type": "function"
        }
      },
      {
        "context": "api.VTTCue.line",
        "info": {
          "code": "'line' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTCue.lineAlign",
        "info": {
          "code": "'lineAlign' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTCue.position",
        "info": {
          "code": "'position' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTCue.positionAlign",
        "info": {
          "code": "'positionAlign' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTCue.region",
        "info": {
          "code": "'region' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTCue.size",
        "info": {
          "code": "'size' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTCue.snapToLines",
        "info": {
          "code": "'snapToLines' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTCue.text",
        "info": {
          "code": "'text' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTCue.vertical",
        "info": {
          "code": "'vertical' in VTTCue.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTRegion",
        "info": {
          "code": "self.VTTRegion"
        },
        "returns": {
          "length": 0,
          "name": "VTTRegion",
          "type": "function"
        }
      },
      {
        "context": "api.VTTRegion.id",
        "info": {
          "code": "'id' in VTTRegion.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTRegion.lines",
        "info": {
          "code": "'lines' in VTTRegion.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTRegion.regionAnchorX",
        "info": {
          "code": "'regionAnchorX' in VTTRegion.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTRegion.regionAnchorY",
        "info": {
          "code": "'regionAnchorY' in VTTRegion.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTRegion.scroll",
        "info": {
          "code": "'scroll' in VTTRegion.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTRegion.viewportAnchorX",
        "info": {
          "code": "'viewportAnchorX' in VTTRegion.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTRegion.viewportAnchorY",
        "info": {
          "code": "'viewportAnchorY' in VTTRegion.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.VTTRegion.width",
        "info": {
          "code": "'width' in VTTRegion.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WakeLock",
        "info": {
          "code": "self.WakeLock"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WakeLock.active",
        "info": {
          "code": "'active' in WakeLock.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WakeLock.createRequest",
        "info": {
          "code": "WakeLock.prototype.createRequest"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WakeLock.onactivechange",
        "info": {
          "code": "'onactivechange' in WakeLock.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WakeLock.type",
        "info": {
          "code": "'type' in WakeLock.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WakeLockRequest",
        "info": {
          "code": "self.WakeLockRequest"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WakeLockRequest.cancel",
        "info": {
          "code": "WakeLockRequest.prototype.cancel"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WaveShaperNode",
        "info": {
          "code": "self.WaveShaperNode"
        },
        "returns": {
          "length": 1,
          "name": "WaveShaperNode",
          "type": "function"
        }
      },
      {
        "context": "api.WaveShaperNode.curve",
        "info": {
          "code": "'curve' in WaveShaperNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WaveShaperNode.oversample",
        "info": {
          "code": "'oversample' in WaveShaperNode.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGL2RenderingContext",
        "info": {
          "code": "self.WebGL2RenderingContext"
        },
        "returns": {
          "length": 0,
          "name": "WebGL2RenderingContext",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ACTIVE_ATTRIBUTES",
        "info": {
          "code": "WebGL2RenderingContext.ACTIVE_ATTRIBUTES"
        },
        "returns": {
          "type": "number",
          "value": 35721
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ACTIVE_TEXTURE",
        "info": {
          "code": "WebGL2RenderingContext.ACTIVE_TEXTURE"
        },
        "returns": {
          "type": "number",
          "value": 34016
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ACTIVE_UNIFORM_BLOCKS",
        "info": {
          "code": "WebGL2RenderingContext.ACTIVE_UNIFORM_BLOCKS"
        },
        "returns": {
          "type": "number",
          "value": 35382
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ACTIVE_UNIFORMS",
        "info": {
          "code": "WebGL2RenderingContext.ACTIVE_UNIFORMS"
        },
        "returns": {
          "type": "number",
          "value": 35718
        }
      },
      {
        "context": "api.WebGL2RenderingContext.activeTexture",
        "info": {
          "code": "WebGL2RenderingContext.prototype.activeTexture"
        },
        "returns": {
          "length": 1,
          "name": "activeTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ALIASED_LINE_WIDTH_RANGE",
        "info": {
          "code": "WebGL2RenderingContext.ALIASED_LINE_WIDTH_RANGE"
        },
        "returns": {
          "type": "number",
          "value": 33902
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ALIASED_POINT_SIZE_RANGE",
        "info": {
          "code": "WebGL2RenderingContext.ALIASED_POINT_SIZE_RANGE"
        },
        "returns": {
          "type": "number",
          "value": 33901
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 6406
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ALPHA_BITS",
        "info": {
          "code": "WebGL2RenderingContext.ALPHA_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3413
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ALREADY_SIGNALED",
        "info": {
          "code": "WebGL2RenderingContext.ALREADY_SIGNALED"
        },
        "returns": {
          "type": "number",
          "value": 37146
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ALWAYS",
        "info": {
          "code": "WebGL2RenderingContext.ALWAYS"
        },
        "returns": {
          "type": "number",
          "value": 519
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ANY_SAMPLES_PASSED",
        "info": {
          "code": "WebGL2RenderingContext.ANY_SAMPLES_PASSED"
        },
        "returns": {
          "type": "number",
          "value": 35887
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ANY_SAMPLES_PASSED_CONSERVATIVE",
        "info": {
          "code": "WebGL2RenderingContext.ANY_SAMPLES_PASSED_CONSERVATIVE"
        },
        "returns": {
          "type": "number",
          "value": 36202
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ARRAY_BUFFER",
        "info": {
          "code": "WebGL2RenderingContext.ARRAY_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 34962
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ARRAY_BUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.ARRAY_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 34964
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ATTACHED_SHADERS",
        "info": {
          "code": "WebGL2RenderingContext.ATTACHED_SHADERS"
        },
        "returns": {
          "type": "number",
          "value": 35717
        }
      },
      {
        "context": "api.WebGL2RenderingContext.attachShader",
        "info": {
          "code": "WebGL2RenderingContext.prototype.attachShader"
        },
        "returns": {
          "length": 2,
          "name": "attachShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BACK",
        "info": {
          "code": "WebGL2RenderingContext.BACK"
        },
        "returns": {
          "type": "number",
          "value": 1029
        }
      },
      {
        "context": "api.WebGL2RenderingContext.beginQuery",
        "info": {
          "code": "WebGL2RenderingContext.prototype.beginQuery"
        },
        "returns": {
          "length": 2,
          "name": "beginQuery",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.beginTransformFeedback",
        "info": {
          "code": "WebGL2RenderingContext.prototype.beginTransformFeedback"
        },
        "returns": {
          "length": 1,
          "name": "beginTransformFeedback",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindAttribLocation",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindAttribLocation"
        },
        "returns": {
          "length": 3,
          "name": "bindAttribLocation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindBuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindBuffer"
        },
        "returns": {
          "length": 2,
          "name": "bindBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindBufferBase",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindBufferBase"
        },
        "returns": {
          "length": 3,
          "name": "bindBufferBase",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindBufferRange",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindBufferRange"
        },
        "returns": {
          "length": 5,
          "name": "bindBufferRange",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindFramebuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindFramebuffer"
        },
        "returns": {
          "length": 2,
          "name": "bindFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindRenderbuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindRenderbuffer"
        },
        "returns": {
          "length": 2,
          "name": "bindRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindSampler",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindSampler"
        },
        "returns": {
          "length": 2,
          "name": "bindSampler",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindTexture",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindTexture"
        },
        "returns": {
          "length": 2,
          "name": "bindTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindTransformFeedback",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindTransformFeedback"
        },
        "returns": {
          "length": 2,
          "name": "bindTransformFeedback",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bindVertexArray",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bindVertexArray"
        },
        "returns": {
          "length": 1,
          "name": "bindVertexArray",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLEND",
        "info": {
          "code": "WebGL2RenderingContext.BLEND"
        },
        "returns": {
          "type": "number",
          "value": 3042
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLEND_COLOR",
        "info": {
          "code": "WebGL2RenderingContext.BLEND_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 32773
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLEND_DST_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.BLEND_DST_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 32970
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLEND_DST_RGB",
        "info": {
          "code": "WebGL2RenderingContext.BLEND_DST_RGB"
        },
        "returns": {
          "type": "number",
          "value": 32968
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLEND_EQUATION",
        "info": {
          "code": "WebGL2RenderingContext.BLEND_EQUATION"
        },
        "returns": {
          "type": "number",
          "value": 32777
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLEND_EQUATION_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.BLEND_EQUATION_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 34877
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLEND_EQUATION_RGB",
        "info": {
          "code": "WebGL2RenderingContext.BLEND_EQUATION_RGB"
        },
        "returns": {
          "type": "number",
          "value": 32777
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLEND_SRC_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.BLEND_SRC_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 32971
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLEND_SRC_RGB",
        "info": {
          "code": "WebGL2RenderingContext.BLEND_SRC_RGB"
        },
        "returns": {
          "type": "number",
          "value": 32969
        }
      },
      {
        "context": "api.WebGL2RenderingContext.blendColor",
        "info": {
          "code": "WebGL2RenderingContext.prototype.blendColor"
        },
        "returns": {
          "length": 4,
          "name": "blendColor",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.blendEquation",
        "info": {
          "code": "WebGL2RenderingContext.prototype.blendEquation"
        },
        "returns": {
          "length": 1,
          "name": "blendEquation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.blendEquationSeparate",
        "info": {
          "code": "WebGL2RenderingContext.prototype.blendEquationSeparate"
        },
        "returns": {
          "length": 2,
          "name": "blendEquationSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.blendFunc",
        "info": {
          "code": "WebGL2RenderingContext.prototype.blendFunc"
        },
        "returns": {
          "length": 2,
          "name": "blendFunc",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.blendFuncSeparate",
        "info": {
          "code": "WebGL2RenderingContext.prototype.blendFuncSeparate"
        },
        "returns": {
          "length": 4,
          "name": "blendFuncSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.blitFramebuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.blitFramebuffer"
        },
        "returns": {
          "length": 10,
          "name": "blitFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BLUE_BITS",
        "info": {
          "code": "WebGL2RenderingContext.BLUE_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3412
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BOOL",
        "info": {
          "code": "WebGL2RenderingContext.BOOL"
        },
        "returns": {
          "type": "number",
          "value": 35670
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BOOL_VEC2",
        "info": {
          "code": "WebGL2RenderingContext.BOOL_VEC2"
        },
        "returns": {
          "type": "number",
          "value": 35671
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BOOL_VEC3",
        "info": {
          "code": "WebGL2RenderingContext.BOOL_VEC3"
        },
        "returns": {
          "type": "number",
          "value": 35672
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BOOL_VEC4",
        "info": {
          "code": "WebGL2RenderingContext.BOOL_VEC4"
        },
        "returns": {
          "type": "number",
          "value": 35673
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BROWSER_DEFAULT_WEBGL",
        "info": {
          "code": "WebGL2RenderingContext.BROWSER_DEFAULT_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37444
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BUFFER_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.BUFFER_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 34660
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BUFFER_USAGE",
        "info": {
          "code": "WebGL2RenderingContext.BUFFER_USAGE"
        },
        "returns": {
          "type": "number",
          "value": 34661
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bufferData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bufferData"
        },
        "returns": {
          "length": 3,
          "name": "bufferData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bufferData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bufferData"
        },
        "returns": {
          "length": 3,
          "name": "bufferData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bufferData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bufferData"
        },
        "returns": {
          "length": 3,
          "name": "bufferData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bufferData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bufferData"
        },
        "returns": {
          "length": 3,
          "name": "bufferData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bufferData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bufferData"
        },
        "returns": {
          "length": 3,
          "name": "bufferData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bufferSubData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bufferSubData"
        },
        "returns": {
          "length": 3,
          "name": "bufferSubData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bufferSubData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bufferSubData"
        },
        "returns": {
          "length": 3,
          "name": "bufferSubData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.bufferSubData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.bufferSubData"
        },
        "returns": {
          "length": 3,
          "name": "bufferSubData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.BYTE",
        "info": {
          "code": "WebGL2RenderingContext.BYTE"
        },
        "returns": {
          "type": "number",
          "value": 5120
        }
      },
      {
        "context": "api.WebGL2RenderingContext.canvas",
        "info": {
          "code": "'canvas' in WebGL2RenderingContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGL2RenderingContext.canvas",
        "info": {
          "code": "'canvas' in WebGL2RenderingContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CCW",
        "info": {
          "code": "WebGL2RenderingContext.CCW"
        },
        "returns": {
          "type": "number",
          "value": 2305
        }
      },
      {
        "context": "api.WebGL2RenderingContext.checkFramebufferStatus",
        "info": {
          "code": "WebGL2RenderingContext.prototype.checkFramebufferStatus"
        },
        "returns": {
          "length": 1,
          "name": "checkFramebufferStatus",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CLAMP_TO_EDGE",
        "info": {
          "code": "WebGL2RenderingContext.CLAMP_TO_EDGE"
        },
        "returns": {
          "type": "number",
          "value": 33071
        }
      },
      {
        "context": "api.WebGL2RenderingContext.clear",
        "info": {
          "code": "WebGL2RenderingContext.prototype.clear"
        },
        "returns": {
          "length": 1,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.clearBufferfi",
        "info": {
          "code": "WebGL2RenderingContext.prototype.clearBufferfi"
        },
        "returns": {
          "length": 4,
          "name": "clearBufferfi",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.clearBufferfv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.clearBufferfv"
        },
        "returns": {
          "length": 3,
          "name": "clearBufferfv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.clearBufferiv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.clearBufferiv"
        },
        "returns": {
          "length": 3,
          "name": "clearBufferiv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.clearBufferuiv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.clearBufferuiv"
        },
        "returns": {
          "length": 3,
          "name": "clearBufferuiv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.clearColor",
        "info": {
          "code": "WebGL2RenderingContext.prototype.clearColor"
        },
        "returns": {
          "length": 4,
          "name": "clearColor",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.clearDepth",
        "info": {
          "code": "WebGL2RenderingContext.prototype.clearDepth"
        },
        "returns": {
          "length": 1,
          "name": "clearDepth",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.clearStencil",
        "info": {
          "code": "WebGL2RenderingContext.prototype.clearStencil"
        },
        "returns": {
          "length": 1,
          "name": "clearStencil",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.clientWaitSync",
        "info": {
          "code": "WebGL2RenderingContext.prototype.clientWaitSync"
        },
        "returns": {
          "length": 3,
          "name": "clientWaitSync",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR",
        "info": {
          "code": "WebGL2RenderingContext.COLOR"
        },
        "returns": {
          "type": "number",
          "value": 6144
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT0",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT0"
        },
        "returns": {
          "type": "number",
          "value": 36064
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT1",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT1"
        },
        "returns": {
          "type": "number",
          "value": 36065
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT10",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT10"
        },
        "returns": {
          "type": "number",
          "value": 36074
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT11",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT11"
        },
        "returns": {
          "type": "number",
          "value": 36075
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT12",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT12"
        },
        "returns": {
          "type": "number",
          "value": 36076
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT13",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT13"
        },
        "returns": {
          "type": "number",
          "value": 36077
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT14",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT14"
        },
        "returns": {
          "type": "number",
          "value": 36078
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT15",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT15"
        },
        "returns": {
          "type": "number",
          "value": 36079
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT2",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT2"
        },
        "returns": {
          "type": "number",
          "value": 36066
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT3",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT3"
        },
        "returns": {
          "type": "number",
          "value": 36067
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT4",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT4"
        },
        "returns": {
          "type": "number",
          "value": 36068
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT5",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT5"
        },
        "returns": {
          "type": "number",
          "value": 36069
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT6",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT6"
        },
        "returns": {
          "type": "number",
          "value": 36070
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT7",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT7"
        },
        "returns": {
          "type": "number",
          "value": 36071
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT8",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT8"
        },
        "returns": {
          "type": "number",
          "value": 36072
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_ATTACHMENT9",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_ATTACHMENT9"
        },
        "returns": {
          "type": "number",
          "value": 36073
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_BUFFER_BIT",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_BUFFER_BIT"
        },
        "returns": {
          "type": "number",
          "value": 16384
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_CLEAR_VALUE",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_CLEAR_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 3106
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COLOR_WRITEMASK",
        "info": {
          "code": "WebGL2RenderingContext.COLOR_WRITEMASK"
        },
        "returns": {
          "type": "number",
          "value": 3107
        }
      },
      {
        "context": "api.WebGL2RenderingContext.colorMask",
        "info": {
          "code": "WebGL2RenderingContext.prototype.colorMask"
        },
        "returns": {
          "length": 4,
          "name": "colorMask",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COMPARE_REF_TO_TEXTURE",
        "info": {
          "code": "WebGL2RenderingContext.COMPARE_REF_TO_TEXTURE"
        },
        "returns": {
          "type": "number",
          "value": 34894
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COMPILE_STATUS",
        "info": {
          "code": "WebGL2RenderingContext.COMPILE_STATUS"
        },
        "returns": {
          "type": "number",
          "value": 35713
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compileShader",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compileShader"
        },
        "returns": {
          "length": 1,
          "name": "compileShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COMPRESSED_TEXTURE_FORMATS",
        "info": {
          "code": "WebGL2RenderingContext.COMPRESSED_TEXTURE_FORMATS"
        },
        "returns": {
          "type": "number",
          "value": 34467
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexImage2D"
        },
        "returns": {
          "length": 7,
          "name": "compressedTexImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexImage2D"
        },
        "returns": {
          "length": 7,
          "name": "compressedTexImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexImage2D"
        },
        "returns": {
          "length": 7,
          "name": "compressedTexImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexImage3D"
        },
        "returns": {
          "length": 8,
          "name": "compressedTexImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexImage3D"
        },
        "returns": {
          "length": 8,
          "name": "compressedTexImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexSubImage2D"
        },
        "returns": {
          "length": 8,
          "name": "compressedTexSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexSubImage2D"
        },
        "returns": {
          "length": 8,
          "name": "compressedTexSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexSubImage2D"
        },
        "returns": {
          "length": 8,
          "name": "compressedTexSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexSubImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexSubImage3D"
        },
        "returns": {
          "length": 10,
          "name": "compressedTexSubImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.compressedTexSubImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.compressedTexSubImage3D"
        },
        "returns": {
          "length": 10,
          "name": "compressedTexSubImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CONDITION_SATISFIED",
        "info": {
          "code": "WebGL2RenderingContext.CONDITION_SATISFIED"
        },
        "returns": {
          "type": "number",
          "value": 37148
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CONSTANT_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.CONSTANT_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 32771
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CONSTANT_COLOR",
        "info": {
          "code": "WebGL2RenderingContext.CONSTANT_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 32769
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CONTEXT_LOST_WEBGL",
        "info": {
          "code": "WebGL2RenderingContext.CONTEXT_LOST_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37442
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COPY_READ_BUFFER",
        "info": {
          "code": "WebGL2RenderingContext.COPY_READ_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 36662
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COPY_READ_BUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.COPY_READ_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 36662
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COPY_WRITE_BUFFER",
        "info": {
          "code": "WebGL2RenderingContext.COPY_WRITE_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 36663
        }
      },
      {
        "context": "api.WebGL2RenderingContext.COPY_WRITE_BUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.COPY_WRITE_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 36663
        }
      },
      {
        "context": "api.WebGL2RenderingContext.copyBufferSubData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.copyBufferSubData"
        },
        "returns": {
          "length": 5,
          "name": "copyBufferSubData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.copyTexImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.copyTexImage2D"
        },
        "returns": {
          "length": 8,
          "name": "copyTexImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.copyTexSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.copyTexSubImage2D"
        },
        "returns": {
          "length": 8,
          "name": "copyTexSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.copyTexSubImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.copyTexSubImage3D"
        },
        "returns": {
          "length": 9,
          "name": "copyTexSubImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createBuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createBuffer"
        },
        "returns": {
          "length": 0,
          "name": "createBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createFramebuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createFramebuffer"
        },
        "returns": {
          "length": 0,
          "name": "createFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createProgram",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createProgram"
        },
        "returns": {
          "length": 0,
          "name": "createProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createQuery",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createQuery"
        },
        "returns": {
          "length": 0,
          "name": "createQuery",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createRenderbuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createRenderbuffer"
        },
        "returns": {
          "length": 0,
          "name": "createRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createSampler",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createSampler"
        },
        "returns": {
          "length": 0,
          "name": "createSampler",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createShader",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createShader"
        },
        "returns": {
          "length": 1,
          "name": "createShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createTexture",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createTexture"
        },
        "returns": {
          "length": 0,
          "name": "createTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createTransformFeedback",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createTransformFeedback"
        },
        "returns": {
          "length": 0,
          "name": "createTransformFeedback",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.createVertexArray",
        "info": {
          "code": "WebGL2RenderingContext.prototype.createVertexArray"
        },
        "returns": {
          "length": 0,
          "name": "createVertexArray",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CULL_FACE",
        "info": {
          "code": "WebGL2RenderingContext.CULL_FACE"
        },
        "returns": {
          "type": "number",
          "value": 2884
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CULL_FACE_MODE",
        "info": {
          "code": "WebGL2RenderingContext.CULL_FACE_MODE"
        },
        "returns": {
          "type": "number",
          "value": 2885
        }
      },
      {
        "context": "api.WebGL2RenderingContext.cullFace",
        "info": {
          "code": "WebGL2RenderingContext.prototype.cullFace"
        },
        "returns": {
          "length": 1,
          "name": "cullFace",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CURRENT_PROGRAM",
        "info": {
          "code": "WebGL2RenderingContext.CURRENT_PROGRAM"
        },
        "returns": {
          "type": "number",
          "value": 35725
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CURRENT_QUERY",
        "info": {
          "code": "WebGL2RenderingContext.CURRENT_QUERY"
        },
        "returns": {
          "type": "number",
          "value": 34917
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CURRENT_VERTEX_ATTRIB",
        "info": {
          "code": "WebGL2RenderingContext.CURRENT_VERTEX_ATTRIB"
        },
        "returns": {
          "type": "number",
          "value": 34342
        }
      },
      {
        "context": "api.WebGL2RenderingContext.CW",
        "info": {
          "code": "WebGL2RenderingContext.CW"
        },
        "returns": {
          "type": "number",
          "value": 2304
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DECR",
        "info": {
          "code": "WebGL2RenderingContext.DECR"
        },
        "returns": {
          "type": "number",
          "value": 7683
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DECR_WRAP",
        "info": {
          "code": "WebGL2RenderingContext.DECR_WRAP"
        },
        "returns": {
          "type": "number",
          "value": 34056
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DELETE_STATUS",
        "info": {
          "code": "WebGL2RenderingContext.DELETE_STATUS"
        },
        "returns": {
          "type": "number",
          "value": 35712
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteBuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteBuffer"
        },
        "returns": {
          "length": 1,
          "name": "deleteBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteFramebuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteFramebuffer"
        },
        "returns": {
          "length": 1,
          "name": "deleteFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteProgram",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteProgram"
        },
        "returns": {
          "length": 1,
          "name": "deleteProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteQuery",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteQuery"
        },
        "returns": {
          "length": 1,
          "name": "deleteQuery",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteRenderbuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteRenderbuffer"
        },
        "returns": {
          "length": 1,
          "name": "deleteRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteSampler",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteSampler"
        },
        "returns": {
          "length": 1,
          "name": "deleteSampler",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteShader",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteShader"
        },
        "returns": {
          "length": 1,
          "name": "deleteShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteSync",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteSync"
        },
        "returns": {
          "length": 1,
          "name": "deleteSync",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteTexture",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteTexture"
        },
        "returns": {
          "length": 1,
          "name": "deleteTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteTransformFeedback",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteTransformFeedback"
        },
        "returns": {
          "length": 1,
          "name": "deleteTransformFeedback",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.deleteVertexArray",
        "info": {
          "code": "WebGL2RenderingContext.prototype.deleteVertexArray"
        },
        "returns": {
          "length": 1,
          "name": "deleteVertexArray",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH"
        },
        "returns": {
          "type": "number",
          "value": 6145
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_ATTACHMENT",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 36096
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_BITS",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3414
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_BUFFER_BIT",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_BUFFER_BIT"
        },
        "returns": {
          "type": "number",
          "value": 256
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_CLEAR_VALUE",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_CLEAR_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 2931
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_COMPONENT",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_COMPONENT"
        },
        "returns": {
          "type": "number",
          "value": 6402
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_COMPONENT16",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_COMPONENT16"
        },
        "returns": {
          "type": "number",
          "value": 33189
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_COMPONENT24",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_COMPONENT24"
        },
        "returns": {
          "type": "number",
          "value": 33190
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_COMPONENT32F",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_COMPONENT32F"
        },
        "returns": {
          "type": "number",
          "value": 36012
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_FUNC",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_FUNC"
        },
        "returns": {
          "type": "number",
          "value": 2932
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_RANGE",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_RANGE"
        },
        "returns": {
          "type": "number",
          "value": 2928
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_STENCIL",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_STENCIL"
        },
        "returns": {
          "type": "number",
          "value": 34041
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_STENCIL",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_STENCIL"
        },
        "returns": {
          "type": "number",
          "value": 34041
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_STENCIL_ATTACHMENT",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_STENCIL_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 33306
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_STENCIL_ATTACHMENT",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_STENCIL_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 33306
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_TEST",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_TEST"
        },
        "returns": {
          "type": "number",
          "value": 2929
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH_WRITEMASK",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH_WRITEMASK"
        },
        "returns": {
          "type": "number",
          "value": 2930
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH24_STENCIL8",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH24_STENCIL8"
        },
        "returns": {
          "type": "number",
          "value": 35056
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DEPTH32F_STENCIL8",
        "info": {
          "code": "WebGL2RenderingContext.DEPTH32F_STENCIL8"
        },
        "returns": {
          "type": "number",
          "value": 36013
        }
      },
      {
        "context": "api.WebGL2RenderingContext.depthFunc",
        "info": {
          "code": "WebGL2RenderingContext.prototype.depthFunc"
        },
        "returns": {
          "length": 1,
          "name": "depthFunc",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.depthMask",
        "info": {
          "code": "WebGL2RenderingContext.prototype.depthMask"
        },
        "returns": {
          "length": 1,
          "name": "depthMask",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.depthRange",
        "info": {
          "code": "WebGL2RenderingContext.prototype.depthRange"
        },
        "returns": {
          "length": 2,
          "name": "depthRange",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.detachShader",
        "info": {
          "code": "WebGL2RenderingContext.prototype.detachShader"
        },
        "returns": {
          "length": 2,
          "name": "detachShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.disable",
        "info": {
          "code": "WebGL2RenderingContext.prototype.disable"
        },
        "returns": {
          "length": 1,
          "name": "disable",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.disableVertexAttribArray",
        "info": {
          "code": "WebGL2RenderingContext.prototype.disableVertexAttribArray"
        },
        "returns": {
          "length": 1,
          "name": "disableVertexAttribArray",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DITHER",
        "info": {
          "code": "WebGL2RenderingContext.DITHER"
        },
        "returns": {
          "type": "number",
          "value": 3024
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DONT_CARE",
        "info": {
          "code": "WebGL2RenderingContext.DONT_CARE"
        },
        "returns": {
          "type": "number",
          "value": 4352
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER0",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER0"
        },
        "returns": {
          "type": "number",
          "value": 34853
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER1",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER1"
        },
        "returns": {
          "type": "number",
          "value": 34854
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER10",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER10"
        },
        "returns": {
          "type": "number",
          "value": 34863
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER11",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER11"
        },
        "returns": {
          "type": "number",
          "value": 34864
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER12",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER12"
        },
        "returns": {
          "type": "number",
          "value": 34865
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER13",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER13"
        },
        "returns": {
          "type": "number",
          "value": 34866
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER14",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER14"
        },
        "returns": {
          "type": "number",
          "value": 34867
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER15",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER15"
        },
        "returns": {
          "type": "number",
          "value": 34868
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER2",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER2"
        },
        "returns": {
          "type": "number",
          "value": 34855
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER3",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER3"
        },
        "returns": {
          "type": "number",
          "value": 34856
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER4",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER4"
        },
        "returns": {
          "type": "number",
          "value": 34857
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER5",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER5"
        },
        "returns": {
          "type": "number",
          "value": 34858
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER6",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER6"
        },
        "returns": {
          "type": "number",
          "value": 34859
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER7",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER7"
        },
        "returns": {
          "type": "number",
          "value": 34860
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER8",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER8"
        },
        "returns": {
          "type": "number",
          "value": 34861
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_BUFFER9",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_BUFFER9"
        },
        "returns": {
          "type": "number",
          "value": 34862
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_FRAMEBUFFER",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_FRAMEBUFFER"
        },
        "returns": {
          "type": "number",
          "value": 36009
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DRAW_FRAMEBUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.DRAW_FRAMEBUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 36006
        }
      },
      {
        "context": "api.WebGL2RenderingContext.drawArrays",
        "info": {
          "code": "WebGL2RenderingContext.prototype.drawArrays"
        },
        "returns": {
          "length": 3,
          "name": "drawArrays",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.drawArraysInstanced",
        "info": {
          "code": "WebGL2RenderingContext.prototype.drawArraysInstanced"
        },
        "returns": {
          "length": 4,
          "name": "drawArraysInstanced",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.drawBuffers",
        "info": {
          "code": "WebGL2RenderingContext.prototype.drawBuffers"
        },
        "returns": {
          "length": 1,
          "name": "drawBuffers",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.drawElements",
        "info": {
          "code": "WebGL2RenderingContext.prototype.drawElements"
        },
        "returns": {
          "length": 4,
          "name": "drawElements",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.drawElementsInstanced",
        "info": {
          "code": "WebGL2RenderingContext.prototype.drawElementsInstanced"
        },
        "returns": {
          "length": 5,
          "name": "drawElementsInstanced",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.drawingBufferHeight",
        "info": {
          "code": "'drawingBufferHeight' in WebGL2RenderingContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGL2RenderingContext.drawingBufferWidth",
        "info": {
          "code": "'drawingBufferWidth' in WebGL2RenderingContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGL2RenderingContext.drawRangeElements",
        "info": {
          "code": "WebGL2RenderingContext.prototype.drawRangeElements"
        },
        "returns": {
          "length": 6,
          "name": "drawRangeElements",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DST_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.DST_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 772
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DST_COLOR",
        "info": {
          "code": "WebGL2RenderingContext.DST_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 774
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DYNAMIC_COPY",
        "info": {
          "code": "WebGL2RenderingContext.DYNAMIC_COPY"
        },
        "returns": {
          "type": "number",
          "value": 35050
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DYNAMIC_DRAW",
        "info": {
          "code": "WebGL2RenderingContext.DYNAMIC_DRAW"
        },
        "returns": {
          "type": "number",
          "value": 35048
        }
      },
      {
        "context": "api.WebGL2RenderingContext.DYNAMIC_READ",
        "info": {
          "code": "WebGL2RenderingContext.DYNAMIC_READ"
        },
        "returns": {
          "type": "number",
          "value": 35049
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ELEMENT_ARRAY_BUFFER",
        "info": {
          "code": "WebGL2RenderingContext.ELEMENT_ARRAY_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 34963
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ELEMENT_ARRAY_BUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.ELEMENT_ARRAY_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 34965
        }
      },
      {
        "context": "api.WebGL2RenderingContext.enable",
        "info": {
          "code": "WebGL2RenderingContext.prototype.enable"
        },
        "returns": {
          "length": 1,
          "name": "enable",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.enableVertexAttribArray",
        "info": {
          "code": "WebGL2RenderingContext.prototype.enableVertexAttribArray"
        },
        "returns": {
          "length": 1,
          "name": "enableVertexAttribArray",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.endQuery",
        "info": {
          "code": "WebGL2RenderingContext.prototype.endQuery"
        },
        "returns": {
          "length": 1,
          "name": "endQuery",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.endTransformFeedback",
        "info": {
          "code": "WebGL2RenderingContext.prototype.endTransformFeedback"
        },
        "returns": {
          "length": 0,
          "name": "endTransformFeedback",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.EQUAL",
        "info": {
          "code": "WebGL2RenderingContext.EQUAL"
        },
        "returns": {
          "type": "number",
          "value": 514
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FASTEST",
        "info": {
          "code": "WebGL2RenderingContext.FASTEST"
        },
        "returns": {
          "type": "number",
          "value": 4353
        }
      },
      {
        "context": "api.WebGL2RenderingContext.fenceSync",
        "info": {
          "code": "WebGL2RenderingContext.prototype.fenceSync"
        },
        "returns": {
          "length": 2,
          "name": "fenceSync",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.finish",
        "info": {
          "code": "WebGL2RenderingContext.prototype.finish"
        },
        "returns": {
          "length": 0,
          "name": "finish",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT"
        },
        "returns": {
          "type": "number",
          "value": 5126
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_32_UNSIGNED_INT_24_8_REV",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_32_UNSIGNED_INT_24_8_REV"
        },
        "returns": {
          "type": "number",
          "value": 36269
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_MAT2",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_MAT2"
        },
        "returns": {
          "type": "number",
          "value": 35674
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_MAT2x3",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_MAT2x3"
        },
        "returns": {
          "type": "number",
          "value": 35685
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_MAT2x4",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_MAT2x4"
        },
        "returns": {
          "type": "number",
          "value": 35686
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_MAT3",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_MAT3"
        },
        "returns": {
          "type": "number",
          "value": 35675
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_MAT3x2",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_MAT3x2"
        },
        "returns": {
          "type": "number",
          "value": 35687
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_MAT3x4",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_MAT3x4"
        },
        "returns": {
          "type": "number",
          "value": 35688
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_MAT4",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_MAT4"
        },
        "returns": {
          "type": "number",
          "value": 35676
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_MAT4x2",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_MAT4x2"
        },
        "returns": {
          "type": "number",
          "value": 35689
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_MAT4x3",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_MAT4x3"
        },
        "returns": {
          "type": "number",
          "value": 35690
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_VEC2",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_VEC2"
        },
        "returns": {
          "type": "number",
          "value": 35664
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_VEC3",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_VEC3"
        },
        "returns": {
          "type": "number",
          "value": 35665
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FLOAT_VEC4",
        "info": {
          "code": "WebGL2RenderingContext.FLOAT_VEC4"
        },
        "returns": {
          "type": "number",
          "value": 35666
        }
      },
      {
        "context": "api.WebGL2RenderingContext.flush",
        "info": {
          "code": "WebGL2RenderingContext.prototype.flush"
        },
        "returns": {
          "length": 0,
          "name": "flush",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAGMENT_SHADER",
        "info": {
          "code": "WebGL2RenderingContext.FRAGMENT_SHADER"
        },
        "returns": {
          "type": "number",
          "value": 35632
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAGMENT_SHADER_DERIVATIVE_HINT",
        "info": {
          "code": "WebGL2RenderingContext.FRAGMENT_SHADER_DERIVATIVE_HINT"
        },
        "returns": {
          "type": "number",
          "value": 35723
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER"
        },
        "returns": {
          "type": "number",
          "value": 36160
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 33301
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 33300
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING"
        },
        "returns": {
          "type": "number",
          "value": 33296
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 33297
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 33302
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 33299
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"
        },
        "returns": {
          "type": "number",
          "value": 36049
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 36048
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_RED_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_RED_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 33298
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 33303
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"
        },
        "returns": {
          "type": "number",
          "value": 36051
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER"
        },
        "returns": {
          "type": "number",
          "value": 36052
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"
        },
        "returns": {
          "type": "number",
          "value": 36050
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 36006
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_COMPLETE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_COMPLETE"
        },
        "returns": {
          "type": "number",
          "value": 36053
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_DEFAULT",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_DEFAULT"
        },
        "returns": {
          "type": "number",
          "value": 33304
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 36054
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS"
        },
        "returns": {
          "type": "number",
          "value": 36057
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 36055
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"
        },
        "returns": {
          "type": "number",
          "value": 36182
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRAMEBUFFER_UNSUPPORTED",
        "info": {
          "code": "WebGL2RenderingContext.FRAMEBUFFER_UNSUPPORTED"
        },
        "returns": {
          "type": "number",
          "value": 36061
        }
      },
      {
        "context": "api.WebGL2RenderingContext.framebufferRenderbuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.framebufferRenderbuffer"
        },
        "returns": {
          "length": 4,
          "name": "framebufferRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.framebufferTexture2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.framebufferTexture2D"
        },
        "returns": {
          "length": 5,
          "name": "framebufferTexture2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.framebufferTextureLayer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.framebufferTextureLayer"
        },
        "returns": {
          "length": 5,
          "name": "framebufferTextureLayer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRONT",
        "info": {
          "code": "WebGL2RenderingContext.FRONT"
        },
        "returns": {
          "type": "number",
          "value": 1028
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRONT_AND_BACK",
        "info": {
          "code": "WebGL2RenderingContext.FRONT_AND_BACK"
        },
        "returns": {
          "type": "number",
          "value": 1032
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FRONT_FACE",
        "info": {
          "code": "WebGL2RenderingContext.FRONT_FACE"
        },
        "returns": {
          "type": "number",
          "value": 2886
        }
      },
      {
        "context": "api.WebGL2RenderingContext.frontFace",
        "info": {
          "code": "WebGL2RenderingContext.prototype.frontFace"
        },
        "returns": {
          "length": 1,
          "name": "frontFace",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FUNC_ADD",
        "info": {
          "code": "WebGL2RenderingContext.FUNC_ADD"
        },
        "returns": {
          "type": "number",
          "value": 32774
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FUNC_REVERSE_SUBTRACT",
        "info": {
          "code": "WebGL2RenderingContext.FUNC_REVERSE_SUBTRACT"
        },
        "returns": {
          "type": "number",
          "value": 32779
        }
      },
      {
        "context": "api.WebGL2RenderingContext.FUNC_SUBTRACT",
        "info": {
          "code": "WebGL2RenderingContext.FUNC_SUBTRACT"
        },
        "returns": {
          "type": "number",
          "value": 32778
        }
      },
      {
        "context": "api.WebGL2RenderingContext.GENERATE_MIPMAP_HINT",
        "info": {
          "code": "WebGL2RenderingContext.GENERATE_MIPMAP_HINT"
        },
        "returns": {
          "type": "number",
          "value": 33170
        }
      },
      {
        "context": "api.WebGL2RenderingContext.generateMipmap",
        "info": {
          "code": "WebGL2RenderingContext.prototype.generateMipmap"
        },
        "returns": {
          "length": 1,
          "name": "generateMipmap",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.GEQUAL",
        "info": {
          "code": "WebGL2RenderingContext.GEQUAL"
        },
        "returns": {
          "type": "number",
          "value": 518
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getActiveAttrib",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getActiveAttrib"
        },
        "returns": {
          "length": 2,
          "name": "getActiveAttrib",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getActiveUniform",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getActiveUniform"
        },
        "returns": {
          "length": 2,
          "name": "getActiveUniform",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getActiveUniformBlockName",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getActiveUniformBlockName"
        },
        "returns": {
          "length": 2,
          "name": "getActiveUniformBlockName",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getActiveUniformBlockParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getActiveUniformBlockParameter"
        },
        "returns": {
          "length": 3,
          "name": "getActiveUniformBlockParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getActiveUniforms",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getActiveUniforms"
        },
        "returns": {
          "length": 3,
          "name": "getActiveUniforms",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getAttachedShaders",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getAttachedShaders"
        },
        "returns": {
          "length": 1,
          "name": "getAttachedShaders",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getAttribLocation",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getAttribLocation"
        },
        "returns": {
          "length": 2,
          "name": "getAttribLocation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getBufferParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getBufferParameter"
        },
        "returns": {
          "length": 2,
          "name": "getBufferParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getBufferSubData",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getBufferSubData"
        },
        "returns": {
          "length": 3,
          "name": "getBufferSubData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getContextAttributes",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getContextAttributes"
        },
        "returns": {
          "length": 0,
          "name": "getContextAttributes",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getError",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getError"
        },
        "returns": {
          "length": 0,
          "name": "getError",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getExtension",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getExtension"
        },
        "returns": {
          "length": 1,
          "name": "getExtension",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getFragDataLocation",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getFragDataLocation"
        },
        "returns": {
          "length": 2,
          "name": "getFragDataLocation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getFramebufferAttachmentParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getFramebufferAttachmentParameter"
        },
        "returns": {
          "length": 3,
          "name": "getFramebufferAttachmentParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getIndexedParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getIndexedParameter"
        },
        "returns": {
          "length": 2,
          "name": "getIndexedParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getInternalformatParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getInternalformatParameter"
        },
        "returns": {
          "length": 3,
          "name": "getInternalformatParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getParameter"
        },
        "returns": {
          "length": 1,
          "name": "getParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getProgramInfoLog",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getProgramInfoLog"
        },
        "returns": {
          "length": 1,
          "name": "getProgramInfoLog",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getProgramParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getProgramParameter"
        },
        "returns": {
          "length": 2,
          "name": "getProgramParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getQuery",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getQuery"
        },
        "returns": {
          "length": 2,
          "name": "getQuery",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getQueryParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getQueryParameter"
        },
        "returns": {
          "length": 2,
          "name": "getQueryParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getRenderbufferParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getRenderbufferParameter"
        },
        "returns": {
          "length": 2,
          "name": "getRenderbufferParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getSamplerParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getSamplerParameter"
        },
        "returns": {
          "length": 2,
          "name": "getSamplerParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getShaderInfoLog",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getShaderInfoLog"
        },
        "returns": {
          "length": 1,
          "name": "getShaderInfoLog",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getShaderParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getShaderParameter"
        },
        "returns": {
          "length": 2,
          "name": "getShaderParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getShaderPrecisionFormat",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getShaderPrecisionFormat"
        },
        "returns": {
          "length": 2,
          "name": "getShaderPrecisionFormat",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getShaderSource",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getShaderSource"
        },
        "returns": {
          "length": 1,
          "name": "getShaderSource",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getSupportedExtensions",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getSupportedExtensions"
        },
        "returns": {
          "length": 0,
          "name": "getSupportedExtensions",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getSyncParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getSyncParameter"
        },
        "returns": {
          "length": 2,
          "name": "getSyncParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getTexParameter",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getTexParameter"
        },
        "returns": {
          "length": 2,
          "name": "getTexParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getTransformFeedbackVarying",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getTransformFeedbackVarying"
        },
        "returns": {
          "length": 2,
          "name": "getTransformFeedbackVarying",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getUniform",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getUniform"
        },
        "returns": {
          "length": 2,
          "name": "getUniform",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getUniformBlockIndex",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getUniformBlockIndex"
        },
        "returns": {
          "length": 2,
          "name": "getUniformBlockIndex",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getUniformIndices",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getUniformIndices"
        },
        "returns": {
          "length": 2,
          "name": "getUniformIndices",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getUniformLocation",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getUniformLocation"
        },
        "returns": {
          "length": 2,
          "name": "getUniformLocation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getVertexAttrib",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getVertexAttrib"
        },
        "returns": {
          "length": 2,
          "name": "getVertexAttrib",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.getVertexAttribOffset",
        "info": {
          "code": "WebGL2RenderingContext.prototype.getVertexAttribOffset"
        },
        "returns": {
          "length": 2,
          "name": "getVertexAttribOffset",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.GREATER",
        "info": {
          "code": "WebGL2RenderingContext.GREATER"
        },
        "returns": {
          "type": "number",
          "value": 516
        }
      },
      {
        "context": "api.WebGL2RenderingContext.GREEN_BITS",
        "info": {
          "code": "WebGL2RenderingContext.GREEN_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3411
        }
      },
      {
        "context": "api.WebGL2RenderingContext.HALF_FLOAT",
        "info": {
          "code": "WebGL2RenderingContext.HALF_FLOAT"
        },
        "returns": {
          "type": "number",
          "value": 5131
        }
      },
      {
        "context": "api.WebGL2RenderingContext.HIGH_FLOAT",
        "info": {
          "code": "WebGL2RenderingContext.HIGH_FLOAT"
        },
        "returns": {
          "type": "number",
          "value": 36338
        }
      },
      {
        "context": "api.WebGL2RenderingContext.HIGH_INT",
        "info": {
          "code": "WebGL2RenderingContext.HIGH_INT"
        },
        "returns": {
          "type": "number",
          "value": 36341
        }
      },
      {
        "context": "api.WebGL2RenderingContext.hint",
        "info": {
          "code": "WebGL2RenderingContext.prototype.hint"
        },
        "returns": {
          "length": 2,
          "name": "hint",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.IMPLEMENTATION_COLOR_READ_FORMAT",
        "info": {
          "code": "WebGL2RenderingContext.IMPLEMENTATION_COLOR_READ_FORMAT"
        },
        "returns": {
          "type": "number",
          "value": 35739
        }
      },
      {
        "context": "api.WebGL2RenderingContext.IMPLEMENTATION_COLOR_READ_TYPE",
        "info": {
          "code": "WebGL2RenderingContext.IMPLEMENTATION_COLOR_READ_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 35738
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INCR",
        "info": {
          "code": "WebGL2RenderingContext.INCR"
        },
        "returns": {
          "type": "number",
          "value": 7682
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INCR_WRAP",
        "info": {
          "code": "WebGL2RenderingContext.INCR_WRAP"
        },
        "returns": {
          "type": "number",
          "value": 34055
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INT",
        "info": {
          "code": "WebGL2RenderingContext.INT"
        },
        "returns": {
          "type": "number",
          "value": 5124
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INT_2_10_10_10_REV",
        "info": {
          "code": "WebGL2RenderingContext.INT_2_10_10_10_REV"
        },
        "returns": {
          "type": "number",
          "value": 36255
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INT_SAMPLER_2D",
        "info": {
          "code": "WebGL2RenderingContext.INT_SAMPLER_2D"
        },
        "returns": {
          "type": "number",
          "value": 36298
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INT_SAMPLER_2D_ARRAY",
        "info": {
          "code": "WebGL2RenderingContext.INT_SAMPLER_2D_ARRAY"
        },
        "returns": {
          "type": "number",
          "value": 36303
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INT_SAMPLER_3D",
        "info": {
          "code": "WebGL2RenderingContext.INT_SAMPLER_3D"
        },
        "returns": {
          "type": "number",
          "value": 36299
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INT_SAMPLER_CUBE",
        "info": {
          "code": "WebGL2RenderingContext.INT_SAMPLER_CUBE"
        },
        "returns": {
          "type": "number",
          "value": 36300
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INT_VEC2",
        "info": {
          "code": "WebGL2RenderingContext.INT_VEC2"
        },
        "returns": {
          "type": "number",
          "value": 35667
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INT_VEC3",
        "info": {
          "code": "WebGL2RenderingContext.INT_VEC3"
        },
        "returns": {
          "type": "number",
          "value": 35668
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INT_VEC4",
        "info": {
          "code": "WebGL2RenderingContext.INT_VEC4"
        },
        "returns": {
          "type": "number",
          "value": 35669
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INTERLEAVED_ATTRIBS",
        "info": {
          "code": "WebGL2RenderingContext.INTERLEAVED_ATTRIBS"
        },
        "returns": {
          "type": "number",
          "value": 35980
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INVALID_ENUM",
        "info": {
          "code": "WebGL2RenderingContext.INVALID_ENUM"
        },
        "returns": {
          "type": "number",
          "value": 1280
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INVALID_FRAMEBUFFER_OPERATION",
        "info": {
          "code": "WebGL2RenderingContext.INVALID_FRAMEBUFFER_OPERATION"
        },
        "returns": {
          "type": "number",
          "value": 1286
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INVALID_INDEX",
        "info": {
          "code": "WebGL2RenderingContext.INVALID_INDEX"
        },
        "returns": {
          "type": "number",
          "value": 4294967295
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INVALID_OPERATION",
        "info": {
          "code": "WebGL2RenderingContext.INVALID_OPERATION"
        },
        "returns": {
          "type": "number",
          "value": 1282
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INVALID_VALUE",
        "info": {
          "code": "WebGL2RenderingContext.INVALID_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 1281
        }
      },
      {
        "context": "api.WebGL2RenderingContext.invalidateFramebuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.invalidateFramebuffer"
        },
        "returns": {
          "length": 2,
          "name": "invalidateFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.invalidateSubFramebuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.invalidateSubFramebuffer"
        },
        "returns": {
          "length": 6,
          "name": "invalidateSubFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.INVERT",
        "info": {
          "code": "WebGL2RenderingContext.INVERT"
        },
        "returns": {
          "type": "number",
          "value": 5386
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isBuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isBuffer"
        },
        "returns": {
          "length": 1,
          "name": "isBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isContextLost",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isContextLost"
        },
        "returns": {
          "length": 0,
          "name": "isContextLost",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isEnabled",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isEnabled"
        },
        "returns": {
          "length": 1,
          "name": "isEnabled",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isFramebuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isFramebuffer"
        },
        "returns": {
          "length": 1,
          "name": "isFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isProgram",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isProgram"
        },
        "returns": {
          "length": 1,
          "name": "isProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isQuery",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isQuery"
        },
        "returns": {
          "length": 1,
          "name": "isQuery",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isRenderbuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isRenderbuffer"
        },
        "returns": {
          "length": 1,
          "name": "isRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isSampler",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isSampler"
        },
        "returns": {
          "length": 1,
          "name": "isSampler",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isShader",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isShader"
        },
        "returns": {
          "length": 1,
          "name": "isShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isSync",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isSync"
        },
        "returns": {
          "length": 1,
          "name": "isSync",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isTexture",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isTexture"
        },
        "returns": {
          "length": 1,
          "name": "isTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isTransformFeedback",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isTransformFeedback"
        },
        "returns": {
          "length": 1,
          "name": "isTransformFeedback",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.isVertexArray",
        "info": {
          "code": "WebGL2RenderingContext.prototype.isVertexArray"
        },
        "returns": {
          "length": 1,
          "name": "isVertexArray",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.KEEP",
        "info": {
          "code": "WebGL2RenderingContext.KEEP"
        },
        "returns": {
          "type": "number",
          "value": 7680
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LEQUAL",
        "info": {
          "code": "WebGL2RenderingContext.LEQUAL"
        },
        "returns": {
          "type": "number",
          "value": 515
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LESS",
        "info": {
          "code": "WebGL2RenderingContext.LESS"
        },
        "returns": {
          "type": "number",
          "value": 513
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LINE_LOOP",
        "info": {
          "code": "WebGL2RenderingContext.LINE_LOOP"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LINE_STRIP",
        "info": {
          "code": "WebGL2RenderingContext.LINE_STRIP"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LINE_WIDTH",
        "info": {
          "code": "WebGL2RenderingContext.LINE_WIDTH"
        },
        "returns": {
          "type": "number",
          "value": 2849
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LINEAR",
        "info": {
          "code": "WebGL2RenderingContext.LINEAR"
        },
        "returns": {
          "type": "number",
          "value": 9729
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LINEAR_MIPMAP_LINEAR",
        "info": {
          "code": "WebGL2RenderingContext.LINEAR_MIPMAP_LINEAR"
        },
        "returns": {
          "type": "number",
          "value": 9987
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LINEAR_MIPMAP_NEAREST",
        "info": {
          "code": "WebGL2RenderingContext.LINEAR_MIPMAP_NEAREST"
        },
        "returns": {
          "type": "number",
          "value": 9985
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LINES",
        "info": {
          "code": "WebGL2RenderingContext.LINES"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.WebGL2RenderingContext.lineWidth",
        "info": {
          "code": "WebGL2RenderingContext.prototype.lineWidth"
        },
        "returns": {
          "length": 1,
          "name": "lineWidth",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LINK_STATUS",
        "info": {
          "code": "WebGL2RenderingContext.LINK_STATUS"
        },
        "returns": {
          "type": "number",
          "value": 35714
        }
      },
      {
        "context": "api.WebGL2RenderingContext.linkProgram",
        "info": {
          "code": "WebGL2RenderingContext.prototype.linkProgram"
        },
        "returns": {
          "length": 1,
          "name": "linkProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LOW_FLOAT",
        "info": {
          "code": "WebGL2RenderingContext.LOW_FLOAT"
        },
        "returns": {
          "type": "number",
          "value": 36336
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LOW_INT",
        "info": {
          "code": "WebGL2RenderingContext.LOW_INT"
        },
        "returns": {
          "type": "number",
          "value": 36339
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LUMINANCE",
        "info": {
          "code": "WebGL2RenderingContext.LUMINANCE"
        },
        "returns": {
          "type": "number",
          "value": 6409
        }
      },
      {
        "context": "api.WebGL2RenderingContext.LUMINANCE_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.LUMINANCE_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 6410
        }
      },
      {
        "context": "api.WebGL2RenderingContext.makeXRCompatible",
        "info": {
          "code": "WebGL2RenderingContext.prototype.makeXRCompatible"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX",
        "info": {
          "code": "WebGL2RenderingContext.MAX"
        },
        "returns": {
          "type": "number",
          "value": 32776
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 32883
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS"
        },
        "returns": {
          "type": "number",
          "value": 35071
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_CLIENT_WAIT_TIMEOUT_WEBGL",
        "info": {
          "code": "WebGL2RenderingContext.MAX_CLIENT_WAIT_TIMEOUT_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37447
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS"
        },
        "returns": {
          "type": "number",
          "value": 36063
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS"
        },
        "returns": {
          "type": "number",
          "value": 35379
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS"
        },
        "returns": {
          "type": "number",
          "value": 35661
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_COMBINED_UNIFORM_BLOCKS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_COMBINED_UNIFORM_BLOCKS"
        },
        "returns": {
          "type": "number",
          "value": 35374
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS"
        },
        "returns": {
          "type": "number",
          "value": 35377
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_CUBE_MAP_TEXTURE_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.MAX_CUBE_MAP_TEXTURE_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 34076
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_DRAW_BUFFERS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_DRAW_BUFFERS"
        },
        "returns": {
          "type": "number",
          "value": 34852
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_ELEMENT_INDEX",
        "info": {
          "code": "WebGL2RenderingContext.MAX_ELEMENT_INDEX"
        },
        "returns": {
          "type": "number",
          "value": 36203
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_ELEMENTS_INDICES",
        "info": {
          "code": "WebGL2RenderingContext.MAX_ELEMENTS_INDICES"
        },
        "returns": {
          "type": "number",
          "value": 33001
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_ELEMENTS_VERTICES",
        "info": {
          "code": "WebGL2RenderingContext.MAX_ELEMENTS_VERTICES"
        },
        "returns": {
          "type": "number",
          "value": 33000
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_FRAGMENT_INPUT_COMPONENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_FRAGMENT_INPUT_COMPONENTS"
        },
        "returns": {
          "type": "number",
          "value": 37157
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_FRAGMENT_UNIFORM_BLOCKS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_FRAGMENT_UNIFORM_BLOCKS"
        },
        "returns": {
          "type": "number",
          "value": 35373
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_FRAGMENT_UNIFORM_COMPONENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_FRAGMENT_UNIFORM_COMPONENTS"
        },
        "returns": {
          "type": "number",
          "value": 35657
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_FRAGMENT_UNIFORM_VECTORS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_FRAGMENT_UNIFORM_VECTORS"
        },
        "returns": {
          "type": "number",
          "value": 36349
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_PROGRAM_TEXEL_OFFSET",
        "info": {
          "code": "WebGL2RenderingContext.MAX_PROGRAM_TEXEL_OFFSET"
        },
        "returns": {
          "type": "number",
          "value": 35077
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_RENDERBUFFER_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.MAX_RENDERBUFFER_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 34024
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_SAMPLES",
        "info": {
          "code": "WebGL2RenderingContext.MAX_SAMPLES"
        },
        "returns": {
          "type": "number",
          "value": 36183
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_SERVER_WAIT_TIMEOUT",
        "info": {
          "code": "WebGL2RenderingContext.MAX_SERVER_WAIT_TIMEOUT"
        },
        "returns": {
          "type": "number",
          "value": 37137
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_TEXTURE_IMAGE_UNITS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_TEXTURE_IMAGE_UNITS"
        },
        "returns": {
          "type": "number",
          "value": 34930
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_TEXTURE_LOD_BIAS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_TEXTURE_LOD_BIAS"
        },
        "returns": {
          "type": "number",
          "value": 34045
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_TEXTURE_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.MAX_TEXTURE_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 3379
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS"
        },
        "returns": {
          "type": "number",
          "value": 35978
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS"
        },
        "returns": {
          "type": "number",
          "value": 35979
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS"
        },
        "returns": {
          "type": "number",
          "value": 35968
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_UNIFORM_BLOCK_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.MAX_UNIFORM_BLOCK_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 35376
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_UNIFORM_BUFFER_BINDINGS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_UNIFORM_BUFFER_BINDINGS"
        },
        "returns": {
          "type": "number",
          "value": 35375
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_VARYING_COMPONENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_VARYING_COMPONENTS"
        },
        "returns": {
          "type": "number",
          "value": 35659
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_VARYING_VECTORS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_VARYING_VECTORS"
        },
        "returns": {
          "type": "number",
          "value": 36348
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_VERTEX_ATTRIBS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_VERTEX_ATTRIBS"
        },
        "returns": {
          "type": "number",
          "value": 34921
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_VERTEX_OUTPUT_COMPONENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_VERTEX_OUTPUT_COMPONENTS"
        },
        "returns": {
          "type": "number",
          "value": 37154
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS"
        },
        "returns": {
          "type": "number",
          "value": 35660
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_VERTEX_UNIFORM_BLOCKS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_VERTEX_UNIFORM_BLOCKS"
        },
        "returns": {
          "type": "number",
          "value": 35371
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_VERTEX_UNIFORM_COMPONENTS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_VERTEX_UNIFORM_COMPONENTS"
        },
        "returns": {
          "type": "number",
          "value": 35658
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_VERTEX_UNIFORM_VECTORS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_VERTEX_UNIFORM_VECTORS"
        },
        "returns": {
          "type": "number",
          "value": 36347
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MAX_VIEWPORT_DIMS",
        "info": {
          "code": "WebGL2RenderingContext.MAX_VIEWPORT_DIMS"
        },
        "returns": {
          "type": "number",
          "value": 3386
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MEDIUM_FLOAT",
        "info": {
          "code": "WebGL2RenderingContext.MEDIUM_FLOAT"
        },
        "returns": {
          "type": "number",
          "value": 36337
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MEDIUM_INT",
        "info": {
          "code": "WebGL2RenderingContext.MEDIUM_INT"
        },
        "returns": {
          "type": "number",
          "value": 36340
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MIN",
        "info": {
          "code": "WebGL2RenderingContext.MIN"
        },
        "returns": {
          "type": "number",
          "value": 32775
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MIN_PROGRAM_TEXEL_OFFSET",
        "info": {
          "code": "WebGL2RenderingContext.MIN_PROGRAM_TEXEL_OFFSET"
        },
        "returns": {
          "type": "number",
          "value": 35076
        }
      },
      {
        "context": "api.WebGL2RenderingContext.MIRRORED_REPEAT",
        "info": {
          "code": "WebGL2RenderingContext.MIRRORED_REPEAT"
        },
        "returns": {
          "type": "number",
          "value": 33648
        }
      },
      {
        "context": "api.WebGL2RenderingContext.NEAREST",
        "info": {
          "code": "WebGL2RenderingContext.NEAREST"
        },
        "returns": {
          "type": "number",
          "value": 9728
        }
      },
      {
        "context": "api.WebGL2RenderingContext.NEAREST_MIPMAP_LINEAR",
        "info": {
          "code": "WebGL2RenderingContext.NEAREST_MIPMAP_LINEAR"
        },
        "returns": {
          "type": "number",
          "value": 9986
        }
      },
      {
        "context": "api.WebGL2RenderingContext.NEAREST_MIPMAP_NEAREST",
        "info": {
          "code": "WebGL2RenderingContext.NEAREST_MIPMAP_NEAREST"
        },
        "returns": {
          "type": "number",
          "value": 9984
        }
      },
      {
        "context": "api.WebGL2RenderingContext.NEVER",
        "info": {
          "code": "WebGL2RenderingContext.NEVER"
        },
        "returns": {
          "type": "number",
          "value": 512
        }
      },
      {
        "context": "api.WebGL2RenderingContext.NICEST",
        "info": {
          "code": "WebGL2RenderingContext.NICEST"
        },
        "returns": {
          "type": "number",
          "value": 4354
        }
      },
      {
        "context": "api.WebGL2RenderingContext.NO_ERROR",
        "info": {
          "code": "WebGL2RenderingContext.NO_ERROR"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.WebGL2RenderingContext.NONE",
        "info": {
          "code": "WebGL2RenderingContext.NONE"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.WebGL2RenderingContext.NOTEQUAL",
        "info": {
          "code": "WebGL2RenderingContext.NOTEQUAL"
        },
        "returns": {
          "type": "number",
          "value": 517
        }
      },
      {
        "context": "api.WebGL2RenderingContext.OBJECT_TYPE",
        "info": {
          "code": "WebGL2RenderingContext.OBJECT_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 37138
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ONE",
        "info": {
          "code": "WebGL2RenderingContext.ONE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ONE_MINUS_CONSTANT_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.ONE_MINUS_CONSTANT_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 32772
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ONE_MINUS_CONSTANT_COLOR",
        "info": {
          "code": "WebGL2RenderingContext.ONE_MINUS_CONSTANT_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 32770
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ONE_MINUS_DST_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.ONE_MINUS_DST_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 773
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ONE_MINUS_DST_COLOR",
        "info": {
          "code": "WebGL2RenderingContext.ONE_MINUS_DST_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 775
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ONE_MINUS_SRC_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.ONE_MINUS_SRC_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 771
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ONE_MINUS_SRC_COLOR",
        "info": {
          "code": "WebGL2RenderingContext.ONE_MINUS_SRC_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 769
        }
      },
      {
        "context": "api.WebGL2RenderingContext.OUT_OF_MEMORY",
        "info": {
          "code": "WebGL2RenderingContext.OUT_OF_MEMORY"
        },
        "returns": {
          "type": "number",
          "value": 1285
        }
      },
      {
        "context": "api.WebGL2RenderingContext.PACK_ALIGNMENT",
        "info": {
          "code": "WebGL2RenderingContext.PACK_ALIGNMENT"
        },
        "returns": {
          "type": "number",
          "value": 3333
        }
      },
      {
        "context": "api.WebGL2RenderingContext.PACK_ROW_LENGTH",
        "info": {
          "code": "WebGL2RenderingContext.PACK_ROW_LENGTH"
        },
        "returns": {
          "type": "number",
          "value": 3330
        }
      },
      {
        "context": "api.WebGL2RenderingContext.PACK_SKIP_PIXELS",
        "info": {
          "code": "WebGL2RenderingContext.PACK_SKIP_PIXELS"
        },
        "returns": {
          "type": "number",
          "value": 3332
        }
      },
      {
        "context": "api.WebGL2RenderingContext.PACK_SKIP_ROWS",
        "info": {
          "code": "WebGL2RenderingContext.PACK_SKIP_ROWS"
        },
        "returns": {
          "type": "number",
          "value": 3331
        }
      },
      {
        "context": "api.WebGL2RenderingContext.pauseTransformFeedback",
        "info": {
          "code": "WebGL2RenderingContext.prototype.pauseTransformFeedback"
        },
        "returns": {
          "length": 0,
          "name": "pauseTransformFeedback",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.PIXEL_PACK_BUFFER",
        "info": {
          "code": "WebGL2RenderingContext.PIXEL_PACK_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 35051
        }
      },
      {
        "context": "api.WebGL2RenderingContext.PIXEL_PACK_BUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.PIXEL_PACK_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 35053
        }
      },
      {
        "context": "api.WebGL2RenderingContext.PIXEL_UNPACK_BUFFER",
        "info": {
          "code": "WebGL2RenderingContext.PIXEL_UNPACK_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 35052
        }
      },
      {
        "context": "api.WebGL2RenderingContext.PIXEL_UNPACK_BUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.PIXEL_UNPACK_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 35055
        }
      },
      {
        "context": "api.WebGL2RenderingContext.pixelStorei",
        "info": {
          "code": "WebGL2RenderingContext.prototype.pixelStorei"
        },
        "returns": {
          "length": 2,
          "name": "pixelStorei",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.POINTS",
        "info": {
          "code": "WebGL2RenderingContext.POINTS"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.WebGL2RenderingContext.POLYGON_OFFSET_FACTOR",
        "info": {
          "code": "WebGL2RenderingContext.POLYGON_OFFSET_FACTOR"
        },
        "returns": {
          "type": "number",
          "value": 32824
        }
      },
      {
        "context": "api.WebGL2RenderingContext.POLYGON_OFFSET_FILL",
        "info": {
          "code": "WebGL2RenderingContext.POLYGON_OFFSET_FILL"
        },
        "returns": {
          "type": "number",
          "value": 32823
        }
      },
      {
        "context": "api.WebGL2RenderingContext.POLYGON_OFFSET_UNITS",
        "info": {
          "code": "WebGL2RenderingContext.POLYGON_OFFSET_UNITS"
        },
        "returns": {
          "type": "number",
          "value": 10752
        }
      },
      {
        "context": "api.WebGL2RenderingContext.polygonOffset",
        "info": {
          "code": "WebGL2RenderingContext.prototype.polygonOffset"
        },
        "returns": {
          "length": 2,
          "name": "polygonOffset",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.QUERY_RESULT",
        "info": {
          "code": "WebGL2RenderingContext.QUERY_RESULT"
        },
        "returns": {
          "type": "number",
          "value": 34918
        }
      },
      {
        "context": "api.WebGL2RenderingContext.QUERY_RESULT_AVAILABLE",
        "info": {
          "code": "WebGL2RenderingContext.QUERY_RESULT_AVAILABLE"
        },
        "returns": {
          "type": "number",
          "value": 34919
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R11F_G11F_B10F",
        "info": {
          "code": "WebGL2RenderingContext.R11F_G11F_B10F"
        },
        "returns": {
          "type": "number",
          "value": 35898
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R16F",
        "info": {
          "code": "WebGL2RenderingContext.R16F"
        },
        "returns": {
          "type": "number",
          "value": 33325
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R16I",
        "info": {
          "code": "WebGL2RenderingContext.R16I"
        },
        "returns": {
          "type": "number",
          "value": 33331
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R16UI",
        "info": {
          "code": "WebGL2RenderingContext.R16UI"
        },
        "returns": {
          "type": "number",
          "value": 33332
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R32F",
        "info": {
          "code": "WebGL2RenderingContext.R32F"
        },
        "returns": {
          "type": "number",
          "value": 33326
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R32I",
        "info": {
          "code": "WebGL2RenderingContext.R32I"
        },
        "returns": {
          "type": "number",
          "value": 33333
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R32UI",
        "info": {
          "code": "WebGL2RenderingContext.R32UI"
        },
        "returns": {
          "type": "number",
          "value": 33334
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R8",
        "info": {
          "code": "WebGL2RenderingContext.R8"
        },
        "returns": {
          "type": "number",
          "value": 33321
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R8_SNORM",
        "info": {
          "code": "WebGL2RenderingContext.R8_SNORM"
        },
        "returns": {
          "type": "number",
          "value": 36756
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R8I",
        "info": {
          "code": "WebGL2RenderingContext.R8I"
        },
        "returns": {
          "type": "number",
          "value": 33329
        }
      },
      {
        "context": "api.WebGL2RenderingContext.R8UI",
        "info": {
          "code": "WebGL2RenderingContext.R8UI"
        },
        "returns": {
          "type": "number",
          "value": 33330
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RASTERIZER_DISCARD",
        "info": {
          "code": "WebGL2RenderingContext.RASTERIZER_DISCARD"
        },
        "returns": {
          "type": "number",
          "value": 35977
        }
      },
      {
        "context": "api.WebGL2RenderingContext.READ_BUFFER",
        "info": {
          "code": "WebGL2RenderingContext.READ_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 3074
        }
      },
      {
        "context": "api.WebGL2RenderingContext.READ_FRAMEBUFFER",
        "info": {
          "code": "WebGL2RenderingContext.READ_FRAMEBUFFER"
        },
        "returns": {
          "type": "number",
          "value": 36008
        }
      },
      {
        "context": "api.WebGL2RenderingContext.READ_FRAMEBUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.READ_FRAMEBUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 36010
        }
      },
      {
        "context": "api.WebGL2RenderingContext.readBuffer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.readBuffer"
        },
        "returns": {
          "length": 1,
          "name": "readBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.readPixels",
        "info": {
          "code": "WebGL2RenderingContext.prototype.readPixels"
        },
        "returns": {
          "length": 7,
          "name": "readPixels",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.readPixels",
        "info": {
          "code": "WebGL2RenderingContext.prototype.readPixels"
        },
        "returns": {
          "length": 7,
          "name": "readPixels",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.readPixels",
        "info": {
          "code": "WebGL2RenderingContext.prototype.readPixels"
        },
        "returns": {
          "length": 7,
          "name": "readPixels",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.readPixels",
        "info": {
          "code": "WebGL2RenderingContext.prototype.readPixels"
        },
        "returns": {
          "length": 7,
          "name": "readPixels",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RED",
        "info": {
          "code": "WebGL2RenderingContext.RED"
        },
        "returns": {
          "type": "number",
          "value": 6403
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RED_BITS",
        "info": {
          "code": "WebGL2RenderingContext.RED_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3410
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RED_INTEGER",
        "info": {
          "code": "WebGL2RenderingContext.RED_INTEGER"
        },
        "returns": {
          "type": "number",
          "value": 36244
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER"
        },
        "returns": {
          "type": "number",
          "value": 36161
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_ALPHA_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_ALPHA_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36179
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 36007
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_BLUE_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_BLUE_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36178
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_DEPTH_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_DEPTH_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36180
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_GREEN_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_GREEN_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36177
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_HEIGHT",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_HEIGHT"
        },
        "returns": {
          "type": "number",
          "value": 36163
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_INTERNAL_FORMAT",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_INTERNAL_FORMAT"
        },
        "returns": {
          "type": "number",
          "value": 36164
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_RED_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_RED_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36176
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_SAMPLES",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_SAMPLES"
        },
        "returns": {
          "type": "number",
          "value": 36011
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_STENCIL_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_STENCIL_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36181
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERBUFFER_WIDTH",
        "info": {
          "code": "WebGL2RenderingContext.RENDERBUFFER_WIDTH"
        },
        "returns": {
          "type": "number",
          "value": 36162
        }
      },
      {
        "context": "api.WebGL2RenderingContext.renderbufferStorage",
        "info": {
          "code": "WebGL2RenderingContext.prototype.renderbufferStorage"
        },
        "returns": {
          "length": 4,
          "name": "renderbufferStorage",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.renderbufferStorageMultisample",
        "info": {
          "code": "WebGL2RenderingContext.prototype.renderbufferStorageMultisample"
        },
        "returns": {
          "length": 5,
          "name": "renderbufferStorageMultisample",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RENDERER",
        "info": {
          "code": "WebGL2RenderingContext.RENDERER"
        },
        "returns": {
          "type": "number",
          "value": 7937
        }
      },
      {
        "context": "api.WebGL2RenderingContext.REPEAT",
        "info": {
          "code": "WebGL2RenderingContext.REPEAT"
        },
        "returns": {
          "type": "number",
          "value": 10497
        }
      },
      {
        "context": "api.WebGL2RenderingContext.REPLACE",
        "info": {
          "code": "WebGL2RenderingContext.REPLACE"
        },
        "returns": {
          "type": "number",
          "value": 7681
        }
      },
      {
        "context": "api.WebGL2RenderingContext.resumeTransformFeedback",
        "info": {
          "code": "WebGL2RenderingContext.prototype.resumeTransformFeedback"
        },
        "returns": {
          "length": 0,
          "name": "resumeTransformFeedback",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG",
        "info": {
          "code": "WebGL2RenderingContext.RG"
        },
        "returns": {
          "type": "number",
          "value": 33319
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG_INTEGER",
        "info": {
          "code": "WebGL2RenderingContext.RG_INTEGER"
        },
        "returns": {
          "type": "number",
          "value": 33320
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG16F",
        "info": {
          "code": "WebGL2RenderingContext.RG16F"
        },
        "returns": {
          "type": "number",
          "value": 33327
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG16I",
        "info": {
          "code": "WebGL2RenderingContext.RG16I"
        },
        "returns": {
          "type": "number",
          "value": 33337
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG16UI",
        "info": {
          "code": "WebGL2RenderingContext.RG16UI"
        },
        "returns": {
          "type": "number",
          "value": 33338
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG32F",
        "info": {
          "code": "WebGL2RenderingContext.RG32F"
        },
        "returns": {
          "type": "number",
          "value": 33328
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG32I",
        "info": {
          "code": "WebGL2RenderingContext.RG32I"
        },
        "returns": {
          "type": "number",
          "value": 33339
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG32UI",
        "info": {
          "code": "WebGL2RenderingContext.RG32UI"
        },
        "returns": {
          "type": "number",
          "value": 33340
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG8",
        "info": {
          "code": "WebGL2RenderingContext.RG8"
        },
        "returns": {
          "type": "number",
          "value": 33323
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG8_SNORM",
        "info": {
          "code": "WebGL2RenderingContext.RG8_SNORM"
        },
        "returns": {
          "type": "number",
          "value": 36757
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG8I",
        "info": {
          "code": "WebGL2RenderingContext.RG8I"
        },
        "returns": {
          "type": "number",
          "value": 33335
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RG8UI",
        "info": {
          "code": "WebGL2RenderingContext.RG8UI"
        },
        "returns": {
          "type": "number",
          "value": 33336
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB",
        "info": {
          "code": "WebGL2RenderingContext.RGB"
        },
        "returns": {
          "type": "number",
          "value": 6407
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB_INTEGER",
        "info": {
          "code": "WebGL2RenderingContext.RGB_INTEGER"
        },
        "returns": {
          "type": "number",
          "value": 36248
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB10_A2",
        "info": {
          "code": "WebGL2RenderingContext.RGB10_A2"
        },
        "returns": {
          "type": "number",
          "value": 32857
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB10_A2UI",
        "info": {
          "code": "WebGL2RenderingContext.RGB10_A2UI"
        },
        "returns": {
          "type": "number",
          "value": 36975
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB16F",
        "info": {
          "code": "WebGL2RenderingContext.RGB16F"
        },
        "returns": {
          "type": "number",
          "value": 34843
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB16I",
        "info": {
          "code": "WebGL2RenderingContext.RGB16I"
        },
        "returns": {
          "type": "number",
          "value": 36233
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB16UI",
        "info": {
          "code": "WebGL2RenderingContext.RGB16UI"
        },
        "returns": {
          "type": "number",
          "value": 36215
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB32F",
        "info": {
          "code": "WebGL2RenderingContext.RGB32F"
        },
        "returns": {
          "type": "number",
          "value": 34837
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB32I",
        "info": {
          "code": "WebGL2RenderingContext.RGB32I"
        },
        "returns": {
          "type": "number",
          "value": 36227
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB32UI",
        "info": {
          "code": "WebGL2RenderingContext.RGB32UI"
        },
        "returns": {
          "type": "number",
          "value": 36209
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB5_A1",
        "info": {
          "code": "WebGL2RenderingContext.RGB5_A1"
        },
        "returns": {
          "type": "number",
          "value": 32855
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB565",
        "info": {
          "code": "WebGL2RenderingContext.RGB565"
        },
        "returns": {
          "type": "number",
          "value": 36194
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB8",
        "info": {
          "code": "WebGL2RenderingContext.RGB8"
        },
        "returns": {
          "type": "number",
          "value": 32849
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB8_SNORM",
        "info": {
          "code": "WebGL2RenderingContext.RGB8_SNORM"
        },
        "returns": {
          "type": "number",
          "value": 36758
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB8I",
        "info": {
          "code": "WebGL2RenderingContext.RGB8I"
        },
        "returns": {
          "type": "number",
          "value": 36239
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB8UI",
        "info": {
          "code": "WebGL2RenderingContext.RGB8UI"
        },
        "returns": {
          "type": "number",
          "value": 36221
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGB9_E5",
        "info": {
          "code": "WebGL2RenderingContext.RGB9_E5"
        },
        "returns": {
          "type": "number",
          "value": 35901
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA",
        "info": {
          "code": "WebGL2RenderingContext.RGBA"
        },
        "returns": {
          "type": "number",
          "value": 6408
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA_INTEGER",
        "info": {
          "code": "WebGL2RenderingContext.RGBA_INTEGER"
        },
        "returns": {
          "type": "number",
          "value": 36249
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA16F",
        "info": {
          "code": "WebGL2RenderingContext.RGBA16F"
        },
        "returns": {
          "type": "number",
          "value": 34842
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA16I",
        "info": {
          "code": "WebGL2RenderingContext.RGBA16I"
        },
        "returns": {
          "type": "number",
          "value": 36232
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA16UI",
        "info": {
          "code": "WebGL2RenderingContext.RGBA16UI"
        },
        "returns": {
          "type": "number",
          "value": 36214
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA32F",
        "info": {
          "code": "WebGL2RenderingContext.RGBA32F"
        },
        "returns": {
          "type": "number",
          "value": 34836
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA32I",
        "info": {
          "code": "WebGL2RenderingContext.RGBA32I"
        },
        "returns": {
          "type": "number",
          "value": 36226
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA32UI",
        "info": {
          "code": "WebGL2RenderingContext.RGBA32UI"
        },
        "returns": {
          "type": "number",
          "value": 36208
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA4",
        "info": {
          "code": "WebGL2RenderingContext.RGBA4"
        },
        "returns": {
          "type": "number",
          "value": 32854
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA8",
        "info": {
          "code": "WebGL2RenderingContext.RGBA8"
        },
        "returns": {
          "type": "number",
          "value": 32856
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA8_SNORM",
        "info": {
          "code": "WebGL2RenderingContext.RGBA8_SNORM"
        },
        "returns": {
          "type": "number",
          "value": 36759
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA8I",
        "info": {
          "code": "WebGL2RenderingContext.RGBA8I"
        },
        "returns": {
          "type": "number",
          "value": 36238
        }
      },
      {
        "context": "api.WebGL2RenderingContext.RGBA8UI",
        "info": {
          "code": "WebGL2RenderingContext.RGBA8UI"
        },
        "returns": {
          "type": "number",
          "value": 36220
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLE_ALPHA_TO_COVERAGE",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLE_ALPHA_TO_COVERAGE"
        },
        "returns": {
          "type": "number",
          "value": 32926
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLE_BUFFERS",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLE_BUFFERS"
        },
        "returns": {
          "type": "number",
          "value": 32936
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLE_COVERAGE",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLE_COVERAGE"
        },
        "returns": {
          "type": "number",
          "value": 32928
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLE_COVERAGE_INVERT",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLE_COVERAGE_INVERT"
        },
        "returns": {
          "type": "number",
          "value": 32939
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLE_COVERAGE_VALUE",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLE_COVERAGE_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 32938
        }
      },
      {
        "context": "api.WebGL2RenderingContext.sampleCoverage",
        "info": {
          "code": "WebGL2RenderingContext.prototype.sampleCoverage"
        },
        "returns": {
          "length": 2,
          "name": "sampleCoverage",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLER_2D",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLER_2D"
        },
        "returns": {
          "type": "number",
          "value": 35678
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLER_2D_ARRAY",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLER_2D_ARRAY"
        },
        "returns": {
          "type": "number",
          "value": 36289
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLER_2D_ARRAY_SHADOW",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLER_2D_ARRAY_SHADOW"
        },
        "returns": {
          "type": "number",
          "value": 36292
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLER_2D_SHADOW",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLER_2D_SHADOW"
        },
        "returns": {
          "type": "number",
          "value": 35682
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLER_3D",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLER_3D"
        },
        "returns": {
          "type": "number",
          "value": 35679
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 35097
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLER_CUBE",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLER_CUBE"
        },
        "returns": {
          "type": "number",
          "value": 35680
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLER_CUBE_SHADOW",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLER_CUBE_SHADOW"
        },
        "returns": {
          "type": "number",
          "value": 36293
        }
      },
      {
        "context": "api.WebGL2RenderingContext.samplerParameterf",
        "info": {
          "code": "WebGL2RenderingContext.prototype.samplerParameterf"
        },
        "returns": {
          "length": 3,
          "name": "samplerParameterf",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.samplerParameteri",
        "info": {
          "code": "WebGL2RenderingContext.prototype.samplerParameteri"
        },
        "returns": {
          "length": 3,
          "name": "samplerParameteri",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SAMPLES",
        "info": {
          "code": "WebGL2RenderingContext.SAMPLES"
        },
        "returns": {
          "type": "number",
          "value": 32937
        }
      },
      {
        "context": "api.WebGL2RenderingContext.scissor",
        "info": {
          "code": "WebGL2RenderingContext.prototype.scissor"
        },
        "returns": {
          "length": 4,
          "name": "scissor",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SCISSOR_BOX",
        "info": {
          "code": "WebGL2RenderingContext.SCISSOR_BOX"
        },
        "returns": {
          "type": "number",
          "value": 3088
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SCISSOR_TEST",
        "info": {
          "code": "WebGL2RenderingContext.SCISSOR_TEST"
        },
        "returns": {
          "type": "number",
          "value": 3089
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SEPARATE_ATTRIBS",
        "info": {
          "code": "WebGL2RenderingContext.SEPARATE_ATTRIBS"
        },
        "returns": {
          "type": "number",
          "value": 35981
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SHADER_TYPE",
        "info": {
          "code": "WebGL2RenderingContext.SHADER_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 35663
        }
      },
      {
        "context": "api.WebGL2RenderingContext.shaderSource",
        "info": {
          "code": "WebGL2RenderingContext.prototype.shaderSource"
        },
        "returns": {
          "length": 2,
          "name": "shaderSource",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SHADING_LANGUAGE_VERSION",
        "info": {
          "code": "WebGL2RenderingContext.SHADING_LANGUAGE_VERSION"
        },
        "returns": {
          "type": "number",
          "value": 35724
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SHORT",
        "info": {
          "code": "WebGL2RenderingContext.SHORT"
        },
        "returns": {
          "type": "number",
          "value": 5122
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SIGNALED",
        "info": {
          "code": "WebGL2RenderingContext.SIGNALED"
        },
        "returns": {
          "type": "number",
          "value": 37145
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SIGNED_NORMALIZED",
        "info": {
          "code": "WebGL2RenderingContext.SIGNED_NORMALIZED"
        },
        "returns": {
          "type": "number",
          "value": 36764
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SRC_ALPHA",
        "info": {
          "code": "WebGL2RenderingContext.SRC_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 770
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SRC_ALPHA_SATURATE",
        "info": {
          "code": "WebGL2RenderingContext.SRC_ALPHA_SATURATE"
        },
        "returns": {
          "type": "number",
          "value": 776
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SRC_COLOR",
        "info": {
          "code": "WebGL2RenderingContext.SRC_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 768
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SRGB",
        "info": {
          "code": "WebGL2RenderingContext.SRGB"
        },
        "returns": {
          "type": "number",
          "value": 35904
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SRGB8",
        "info": {
          "code": "WebGL2RenderingContext.SRGB8"
        },
        "returns": {
          "type": "number",
          "value": 35905
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SRGB8_ALPHA8",
        "info": {
          "code": "WebGL2RenderingContext.SRGB8_ALPHA8"
        },
        "returns": {
          "type": "number",
          "value": 35907
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STATIC_COPY",
        "info": {
          "code": "WebGL2RenderingContext.STATIC_COPY"
        },
        "returns": {
          "type": "number",
          "value": 35046
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STATIC_DRAW",
        "info": {
          "code": "WebGL2RenderingContext.STATIC_DRAW"
        },
        "returns": {
          "type": "number",
          "value": 35044
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STATIC_READ",
        "info": {
          "code": "WebGL2RenderingContext.STATIC_READ"
        },
        "returns": {
          "type": "number",
          "value": 35045
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL"
        },
        "returns": {
          "type": "number",
          "value": 6146
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_ATTACHMENT",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 36128
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_BACK_FAIL",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_BACK_FAIL"
        },
        "returns": {
          "type": "number",
          "value": 34817
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_BACK_FUNC",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_BACK_FUNC"
        },
        "returns": {
          "type": "number",
          "value": 34816
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_BACK_PASS_DEPTH_FAIL",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_BACK_PASS_DEPTH_FAIL"
        },
        "returns": {
          "type": "number",
          "value": 34818
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_BACK_PASS_DEPTH_PASS",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_BACK_PASS_DEPTH_PASS"
        },
        "returns": {
          "type": "number",
          "value": 34819
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_BACK_REF",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_BACK_REF"
        },
        "returns": {
          "type": "number",
          "value": 36003
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_BACK_VALUE_MASK",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_BACK_VALUE_MASK"
        },
        "returns": {
          "type": "number",
          "value": 36004
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_BACK_WRITEMASK",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_BACK_WRITEMASK"
        },
        "returns": {
          "type": "number",
          "value": 36005
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_BITS",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3415
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_BUFFER_BIT",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_BUFFER_BIT"
        },
        "returns": {
          "type": "number",
          "value": 1024
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_CLEAR_VALUE",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_CLEAR_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 2961
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_FAIL",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_FAIL"
        },
        "returns": {
          "type": "number",
          "value": 2964
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_FUNC",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_FUNC"
        },
        "returns": {
          "type": "number",
          "value": 2962
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_INDEX8",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_INDEX8"
        },
        "returns": {
          "type": "number",
          "value": 36168
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_PASS_DEPTH_FAIL",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_PASS_DEPTH_FAIL"
        },
        "returns": {
          "type": "number",
          "value": 2965
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_PASS_DEPTH_PASS",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_PASS_DEPTH_PASS"
        },
        "returns": {
          "type": "number",
          "value": 2966
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_REF",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_REF"
        },
        "returns": {
          "type": "number",
          "value": 2967
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_TEST",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_TEST"
        },
        "returns": {
          "type": "number",
          "value": 2960
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_VALUE_MASK",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_VALUE_MASK"
        },
        "returns": {
          "type": "number",
          "value": 2963
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STENCIL_WRITEMASK",
        "info": {
          "code": "WebGL2RenderingContext.STENCIL_WRITEMASK"
        },
        "returns": {
          "type": "number",
          "value": 2968
        }
      },
      {
        "context": "api.WebGL2RenderingContext.stencilFunc",
        "info": {
          "code": "WebGL2RenderingContext.prototype.stencilFunc"
        },
        "returns": {
          "length": 3,
          "name": "stencilFunc",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.stencilFuncSeparate",
        "info": {
          "code": "WebGL2RenderingContext.prototype.stencilFuncSeparate"
        },
        "returns": {
          "length": 4,
          "name": "stencilFuncSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.stencilMask",
        "info": {
          "code": "WebGL2RenderingContext.prototype.stencilMask"
        },
        "returns": {
          "length": 1,
          "name": "stencilMask",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.stencilMaskSeparate",
        "info": {
          "code": "WebGL2RenderingContext.prototype.stencilMaskSeparate"
        },
        "returns": {
          "length": 2,
          "name": "stencilMaskSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.stencilOp",
        "info": {
          "code": "WebGL2RenderingContext.prototype.stencilOp"
        },
        "returns": {
          "length": 3,
          "name": "stencilOp",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.stencilOpSeparate",
        "info": {
          "code": "WebGL2RenderingContext.prototype.stencilOpSeparate"
        },
        "returns": {
          "length": 4,
          "name": "stencilOpSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STREAM_COPY",
        "info": {
          "code": "WebGL2RenderingContext.STREAM_COPY"
        },
        "returns": {
          "type": "number",
          "value": 35042
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STREAM_DRAW",
        "info": {
          "code": "WebGL2RenderingContext.STREAM_DRAW"
        },
        "returns": {
          "type": "number",
          "value": 35040
        }
      },
      {
        "context": "api.WebGL2RenderingContext.STREAM_READ",
        "info": {
          "code": "WebGL2RenderingContext.STREAM_READ"
        },
        "returns": {
          "type": "number",
          "value": 35041
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SUBPIXEL_BITS",
        "info": {
          "code": "WebGL2RenderingContext.SUBPIXEL_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3408
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SYNC_CONDITION",
        "info": {
          "code": "WebGL2RenderingContext.SYNC_CONDITION"
        },
        "returns": {
          "type": "number",
          "value": 37139
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SYNC_FENCE",
        "info": {
          "code": "WebGL2RenderingContext.SYNC_FENCE"
        },
        "returns": {
          "type": "number",
          "value": 37142
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SYNC_FLAGS",
        "info": {
          "code": "WebGL2RenderingContext.SYNC_FLAGS"
        },
        "returns": {
          "type": "number",
          "value": 37141
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SYNC_FLUSH_COMMANDS_BIT",
        "info": {
          "code": "WebGL2RenderingContext.SYNC_FLUSH_COMMANDS_BIT"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SYNC_GPU_COMMANDS_COMPLETE",
        "info": {
          "code": "WebGL2RenderingContext.SYNC_GPU_COMMANDS_COMPLETE"
        },
        "returns": {
          "type": "number",
          "value": 37143
        }
      },
      {
        "context": "api.WebGL2RenderingContext.SYNC_STATUS",
        "info": {
          "code": "WebGL2RenderingContext.SYNC_STATUS"
        },
        "returns": {
          "type": "number",
          "value": 37140
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage2D"
        },
        "returns": {
          "length": 6,
          "name": "texImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage2D"
        },
        "returns": {
          "length": 6,
          "name": "texImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage2D"
        },
        "returns": {
          "length": 6,
          "name": "texImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage2D"
        },
        "returns": {
          "length": 6,
          "name": "texImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage2D"
        },
        "returns": {
          "length": 6,
          "name": "texImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage2D"
        },
        "returns": {
          "length": 6,
          "name": "texImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage2D"
        },
        "returns": {
          "length": 6,
          "name": "texImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage3D"
        },
        "returns": {
          "length": 10,
          "name": "texImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage3D"
        },
        "returns": {
          "length": 10,
          "name": "texImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage3D"
        },
        "returns": {
          "length": 10,
          "name": "texImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texImage3D"
        },
        "returns": {
          "length": 10,
          "name": "texImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texParameterf",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texParameterf"
        },
        "returns": {
          "length": 3,
          "name": "texParameterf",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texParameteri",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texParameteri"
        },
        "returns": {
          "length": 3,
          "name": "texParameteri",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texStorage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texStorage2D"
        },
        "returns": {
          "length": 5,
          "name": "texStorage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texStorage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texStorage3D"
        },
        "returns": {
          "length": 6,
          "name": "texStorage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage2D"
        },
        "returns": {
          "length": 7,
          "name": "texSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage2D"
        },
        "returns": {
          "length": 7,
          "name": "texSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage2D"
        },
        "returns": {
          "length": 7,
          "name": "texSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage2D"
        },
        "returns": {
          "length": 7,
          "name": "texSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage2D"
        },
        "returns": {
          "length": 7,
          "name": "texSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage2D"
        },
        "returns": {
          "length": 7,
          "name": "texSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage2D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage2D"
        },
        "returns": {
          "length": 7,
          "name": "texSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage3D"
        },
        "returns": {
          "length": 11,
          "name": "texSubImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage3D"
        },
        "returns": {
          "length": 11,
          "name": "texSubImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.texSubImage3D",
        "info": {
          "code": "WebGL2RenderingContext.prototype.texSubImage3D"
        },
        "returns": {
          "length": 11,
          "name": "texSubImage3D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE"
        },
        "returns": {
          "type": "number",
          "value": 5890
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_2D",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_2D"
        },
        "returns": {
          "type": "number",
          "value": 3553
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_2D_ARRAY",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_2D_ARRAY"
        },
        "returns": {
          "type": "number",
          "value": 35866
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_3D",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_3D"
        },
        "returns": {
          "type": "number",
          "value": 32879
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_BASE_LEVEL",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_BASE_LEVEL"
        },
        "returns": {
          "type": "number",
          "value": 33084
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_BINDING_2D",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_BINDING_2D"
        },
        "returns": {
          "type": "number",
          "value": 32873
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_BINDING_2D_ARRAY",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_BINDING_2D_ARRAY"
        },
        "returns": {
          "type": "number",
          "value": 35869
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_BINDING_3D",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_BINDING_3D"
        },
        "returns": {
          "type": "number",
          "value": 32874
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_BINDING_CUBE_MAP",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_BINDING_CUBE_MAP"
        },
        "returns": {
          "type": "number",
          "value": 34068
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_COMPARE_FUNC",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_COMPARE_FUNC"
        },
        "returns": {
          "type": "number",
          "value": 34893
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_COMPARE_MODE",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_COMPARE_MODE"
        },
        "returns": {
          "type": "number",
          "value": 34892
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_CUBE_MAP",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_CUBE_MAP"
        },
        "returns": {
          "type": "number",
          "value": 34067
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X"
        },
        "returns": {
          "type": "number",
          "value": 34070
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y"
        },
        "returns": {
          "type": "number",
          "value": 34072
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z"
        },
        "returns": {
          "type": "number",
          "value": 34074
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X"
        },
        "returns": {
          "type": "number",
          "value": 34069
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y"
        },
        "returns": {
          "type": "number",
          "value": 34071
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z"
        },
        "returns": {
          "type": "number",
          "value": 34073
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_IMMUTABLE_FORMAT",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_IMMUTABLE_FORMAT"
        },
        "returns": {
          "type": "number",
          "value": 37167
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_IMMUTABLE_LEVELS",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_IMMUTABLE_LEVELS"
        },
        "returns": {
          "type": "number",
          "value": 33503
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_MAG_FILTER",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_MAG_FILTER"
        },
        "returns": {
          "type": "number",
          "value": 10240
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_MAX_LEVEL",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_MAX_LEVEL"
        },
        "returns": {
          "type": "number",
          "value": 33085
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_MAX_LOD",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_MAX_LOD"
        },
        "returns": {
          "type": "number",
          "value": 33083
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_MIN_FILTER",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_MIN_FILTER"
        },
        "returns": {
          "type": "number",
          "value": 10241
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_MIN_LOD",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_MIN_LOD"
        },
        "returns": {
          "type": "number",
          "value": 33082
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_WRAP_R",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_WRAP_R"
        },
        "returns": {
          "type": "number",
          "value": 32882
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_WRAP_S",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_WRAP_S"
        },
        "returns": {
          "type": "number",
          "value": 10242
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE_WRAP_T",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE_WRAP_T"
        },
        "returns": {
          "type": "number",
          "value": 10243
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE0",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE0"
        },
        "returns": {
          "type": "number",
          "value": 33984
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE1",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE1"
        },
        "returns": {
          "type": "number",
          "value": 33985
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE10",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE10"
        },
        "returns": {
          "type": "number",
          "value": 33994
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE11",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE11"
        },
        "returns": {
          "type": "number",
          "value": 33995
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE12",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE12"
        },
        "returns": {
          "type": "number",
          "value": 33996
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE13",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE13"
        },
        "returns": {
          "type": "number",
          "value": 33997
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE14",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE14"
        },
        "returns": {
          "type": "number",
          "value": 33998
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE15",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE15"
        },
        "returns": {
          "type": "number",
          "value": 33999
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE16",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE16"
        },
        "returns": {
          "type": "number",
          "value": 34000
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE17",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE17"
        },
        "returns": {
          "type": "number",
          "value": 34001
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE18",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE18"
        },
        "returns": {
          "type": "number",
          "value": 34002
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE19",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE19"
        },
        "returns": {
          "type": "number",
          "value": 34003
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE2",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE2"
        },
        "returns": {
          "type": "number",
          "value": 33986
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE20",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE20"
        },
        "returns": {
          "type": "number",
          "value": 34004
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE21",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE21"
        },
        "returns": {
          "type": "number",
          "value": 34005
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE22",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE22"
        },
        "returns": {
          "type": "number",
          "value": 34006
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE23",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE23"
        },
        "returns": {
          "type": "number",
          "value": 34007
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE24",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE24"
        },
        "returns": {
          "type": "number",
          "value": 34008
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE25",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE25"
        },
        "returns": {
          "type": "number",
          "value": 34009
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE26",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE26"
        },
        "returns": {
          "type": "number",
          "value": 34010
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE27",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE27"
        },
        "returns": {
          "type": "number",
          "value": 34011
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE28",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE28"
        },
        "returns": {
          "type": "number",
          "value": 34012
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE29",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE29"
        },
        "returns": {
          "type": "number",
          "value": 34013
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE3",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE3"
        },
        "returns": {
          "type": "number",
          "value": 33987
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE30",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE30"
        },
        "returns": {
          "type": "number",
          "value": 34014
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE31",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE31"
        },
        "returns": {
          "type": "number",
          "value": 34015
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE4",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE4"
        },
        "returns": {
          "type": "number",
          "value": 33988
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE5",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE5"
        },
        "returns": {
          "type": "number",
          "value": 33989
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE6",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE6"
        },
        "returns": {
          "type": "number",
          "value": 33990
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE7",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE7"
        },
        "returns": {
          "type": "number",
          "value": 33991
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE8",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE8"
        },
        "returns": {
          "type": "number",
          "value": 33992
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TEXTURE9",
        "info": {
          "code": "WebGL2RenderingContext.TEXTURE9"
        },
        "returns": {
          "type": "number",
          "value": 33993
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TIMEOUT_EXPIRED",
        "info": {
          "code": "WebGL2RenderingContext.TIMEOUT_EXPIRED"
        },
        "returns": {
          "type": "number",
          "value": 37147
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TIMEOUT_IGNORED",
        "info": {
          "code": "WebGL2RenderingContext.TIMEOUT_IGNORED"
        },
        "returns": {
          "type": "number",
          "value": -1
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK"
        },
        "returns": {
          "type": "number",
          "value": 36386
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_ACTIVE",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_ACTIVE"
        },
        "returns": {
          "type": "number",
          "value": 36388
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 36389
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 35982
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 35983
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_MODE",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_MODE"
        },
        "returns": {
          "type": "number",
          "value": 35967
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 35973
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_START",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_START"
        },
        "returns": {
          "type": "number",
          "value": 35972
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_PAUSED",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_PAUSED"
        },
        "returns": {
          "type": "number",
          "value": 36387
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN"
        },
        "returns": {
          "type": "number",
          "value": 35976
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRANSFORM_FEEDBACK_VARYINGS",
        "info": {
          "code": "WebGL2RenderingContext.TRANSFORM_FEEDBACK_VARYINGS"
        },
        "returns": {
          "type": "number",
          "value": 35971
        }
      },
      {
        "context": "api.WebGL2RenderingContext.transformFeedbackVaryings",
        "info": {
          "code": "WebGL2RenderingContext.prototype.transformFeedbackVaryings"
        },
        "returns": {
          "length": 3,
          "name": "transformFeedbackVaryings",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRIANGLE_FAN",
        "info": {
          "code": "WebGL2RenderingContext.TRIANGLE_FAN"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRIANGLE_STRIP",
        "info": {
          "code": "WebGL2RenderingContext.TRIANGLE_STRIP"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.WebGL2RenderingContext.TRIANGLES",
        "info": {
          "code": "WebGL2RenderingContext.TRIANGLES"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_ARRAY_STRIDE",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_ARRAY_STRIDE"
        },
        "returns": {
          "type": "number",
          "value": 35388
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES"
        },
        "returns": {
          "type": "number",
          "value": 35395
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BLOCK_ACTIVE_UNIFORMS",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BLOCK_ACTIVE_UNIFORMS"
        },
        "returns": {
          "type": "number",
          "value": 35394
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BLOCK_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BLOCK_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 35391
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BLOCK_DATA_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BLOCK_DATA_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 35392
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BLOCK_INDEX",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BLOCK_INDEX"
        },
        "returns": {
          "type": "number",
          "value": 35386
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER"
        },
        "returns": {
          "type": "number",
          "value": 35398
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER"
        },
        "returns": {
          "type": "number",
          "value": 35396
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BUFFER",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 35345
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 35368
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BUFFER_OFFSET_ALIGNMENT",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BUFFER_OFFSET_ALIGNMENT"
        },
        "returns": {
          "type": "number",
          "value": 35380
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BUFFER_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BUFFER_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 35370
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_BUFFER_START",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_BUFFER_START"
        },
        "returns": {
          "type": "number",
          "value": 35369
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_IS_ROW_MAJOR",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_IS_ROW_MAJOR"
        },
        "returns": {
          "type": "number",
          "value": 35390
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_MATRIX_STRIDE",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_MATRIX_STRIDE"
        },
        "returns": {
          "type": "number",
          "value": 35389
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_OFFSET",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_OFFSET"
        },
        "returns": {
          "type": "number",
          "value": 35387
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 35384
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNIFORM_TYPE",
        "info": {
          "code": "WebGL2RenderingContext.UNIFORM_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 35383
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform1f",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform1f"
        },
        "returns": {
          "length": 2,
          "name": "uniform1f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform1fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform1fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform1fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform1fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform1fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform1fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform1i",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform1i"
        },
        "returns": {
          "length": 2,
          "name": "uniform1i",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform1iv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform1iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform1iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform1iv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform1iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform1iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform1ui",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform1ui"
        },
        "returns": {
          "length": 2,
          "name": "uniform1ui",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform1uiv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform1uiv"
        },
        "returns": {
          "length": 2,
          "name": "uniform1uiv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform2f",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform2f"
        },
        "returns": {
          "length": 3,
          "name": "uniform2f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform2fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform2fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform2fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform2fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform2i",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform2i"
        },
        "returns": {
          "length": 3,
          "name": "uniform2i",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform2iv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform2iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform2iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform2iv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform2iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform2iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform2ui",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform2ui"
        },
        "returns": {
          "length": 3,
          "name": "uniform2ui",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform2uiv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform2uiv"
        },
        "returns": {
          "length": 2,
          "name": "uniform2uiv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform3f",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform3f"
        },
        "returns": {
          "length": 4,
          "name": "uniform3f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform3fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform3fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform3fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform3fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform3i",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform3i"
        },
        "returns": {
          "length": 4,
          "name": "uniform3i",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform3iv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform3iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform3iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform3iv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform3iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform3iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform3ui",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform3ui"
        },
        "returns": {
          "length": 4,
          "name": "uniform3ui",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform3uiv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform3uiv"
        },
        "returns": {
          "length": 2,
          "name": "uniform3uiv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform4f",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform4f"
        },
        "returns": {
          "length": 5,
          "name": "uniform4f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform4fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform4fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform4fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform4fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform4i",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform4i"
        },
        "returns": {
          "length": 5,
          "name": "uniform4i",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform4iv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform4iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform4iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform4iv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform4iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform4iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform4ui",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform4ui"
        },
        "returns": {
          "length": 5,
          "name": "uniform4ui",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniform4uiv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniform4uiv"
        },
        "returns": {
          "length": 2,
          "name": "uniform4uiv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformBlockBinding",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformBlockBinding"
        },
        "returns": {
          "length": 3,
          "name": "uniformBlockBinding",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix2fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix2fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix2fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix2fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix2x3fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix2x3fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix2x3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix2x4fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix2x4fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix2x4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix3fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix3fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix3fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix3fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix3x2fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix3x2fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix3x2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix3x4fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix3x4fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix3x4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix4fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix4fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix4fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix4fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix4x2fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix4x2fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix4x2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.uniformMatrix4x3fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.uniformMatrix4x3fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix4x3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNPACK_ALIGNMENT",
        "info": {
          "code": "WebGL2RenderingContext.UNPACK_ALIGNMENT"
        },
        "returns": {
          "type": "number",
          "value": 3317
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL",
        "info": {
          "code": "WebGL2RenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37443
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNPACK_FLIP_Y_WEBGL",
        "info": {
          "code": "WebGL2RenderingContext.UNPACK_FLIP_Y_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37440
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNPACK_IMAGE_HEIGHT",
        "info": {
          "code": "WebGL2RenderingContext.UNPACK_IMAGE_HEIGHT"
        },
        "returns": {
          "type": "number",
          "value": 32878
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL",
        "info": {
          "code": "WebGL2RenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37441
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNPACK_ROW_LENGTH",
        "info": {
          "code": "WebGL2RenderingContext.UNPACK_ROW_LENGTH"
        },
        "returns": {
          "type": "number",
          "value": 3314
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNPACK_SKIP_IMAGES",
        "info": {
          "code": "WebGL2RenderingContext.UNPACK_SKIP_IMAGES"
        },
        "returns": {
          "type": "number",
          "value": 32877
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNPACK_SKIP_PIXELS",
        "info": {
          "code": "WebGL2RenderingContext.UNPACK_SKIP_PIXELS"
        },
        "returns": {
          "type": "number",
          "value": 3316
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNPACK_SKIP_ROWS",
        "info": {
          "code": "WebGL2RenderingContext.UNPACK_SKIP_ROWS"
        },
        "returns": {
          "type": "number",
          "value": 3315
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNALED",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNALED"
        },
        "returns": {
          "type": "number",
          "value": 37144
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_BYTE",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_BYTE"
        },
        "returns": {
          "type": "number",
          "value": 5121
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT"
        },
        "returns": {
          "type": "number",
          "value": 5125
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_10F_11F_11F_REV",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_10F_11F_11F_REV"
        },
        "returns": {
          "type": "number",
          "value": 35899
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV"
        },
        "returns": {
          "type": "number",
          "value": 33640
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_24_8",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_24_8"
        },
        "returns": {
          "type": "number",
          "value": 34042
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_5_9_9_9_REV",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_5_9_9_9_REV"
        },
        "returns": {
          "type": "number",
          "value": 35902
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_2D",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_2D"
        },
        "returns": {
          "type": "number",
          "value": 36306
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_2D_ARRAY",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_2D_ARRAY"
        },
        "returns": {
          "type": "number",
          "value": 36311
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_3D",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_3D"
        },
        "returns": {
          "type": "number",
          "value": 36307
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_CUBE",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_CUBE"
        },
        "returns": {
          "type": "number",
          "value": 36308
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_VEC2",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_VEC2"
        },
        "returns": {
          "type": "number",
          "value": 36294
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_VEC3",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_VEC3"
        },
        "returns": {
          "type": "number",
          "value": 36295
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_INT_VEC4",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_INT_VEC4"
        },
        "returns": {
          "type": "number",
          "value": 36296
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_NORMALIZED",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_NORMALIZED"
        },
        "returns": {
          "type": "number",
          "value": 35863
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_SHORT",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_SHORT"
        },
        "returns": {
          "type": "number",
          "value": 5123
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_SHORT_4_4_4_4",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_SHORT_4_4_4_4"
        },
        "returns": {
          "type": "number",
          "value": 32819
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_SHORT_5_5_5_1",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_SHORT_5_5_5_1"
        },
        "returns": {
          "type": "number",
          "value": 32820
        }
      },
      {
        "context": "api.WebGL2RenderingContext.UNSIGNED_SHORT_5_6_5",
        "info": {
          "code": "WebGL2RenderingContext.UNSIGNED_SHORT_5_6_5"
        },
        "returns": {
          "type": "number",
          "value": 33635
        }
      },
      {
        "context": "api.WebGL2RenderingContext.useProgram",
        "info": {
          "code": "WebGL2RenderingContext.prototype.useProgram"
        },
        "returns": {
          "length": 1,
          "name": "useProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VALIDATE_STATUS",
        "info": {
          "code": "WebGL2RenderingContext.VALIDATE_STATUS"
        },
        "returns": {
          "type": "number",
          "value": 35715
        }
      },
      {
        "context": "api.WebGL2RenderingContext.validateProgram",
        "info": {
          "code": "WebGL2RenderingContext.prototype.validateProgram"
        },
        "returns": {
          "length": 1,
          "name": "validateProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VENDOR",
        "info": {
          "code": "WebGL2RenderingContext.VENDOR"
        },
        "returns": {
          "type": "number",
          "value": 7936
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERSION",
        "info": {
          "code": "WebGL2RenderingContext.VERSION"
        },
        "returns": {
          "type": "number",
          "value": 7938
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ARRAY_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ARRAY_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 34229
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 34975
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_DIVISOR",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_DIVISOR"
        },
        "returns": {
          "type": "number",
          "value": 35070
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_ENABLED",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_ENABLED"
        },
        "returns": {
          "type": "number",
          "value": 34338
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_INTEGER",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_INTEGER"
        },
        "returns": {
          "type": "number",
          "value": 35069
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_NORMALIZED",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_NORMALIZED"
        },
        "returns": {
          "type": "number",
          "value": 34922
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_POINTER",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_POINTER"
        },
        "returns": {
          "type": "number",
          "value": 34373
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_SIZE",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 34339
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_STRIDE",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_STRIDE"
        },
        "returns": {
          "type": "number",
          "value": 34340
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_TYPE",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 34341
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VERTEX_SHADER",
        "info": {
          "code": "WebGL2RenderingContext.VERTEX_SHADER"
        },
        "returns": {
          "type": "number",
          "value": 35633
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttrib1f",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttrib1f"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib1f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttrib1fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttrib1fv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib1fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttrib2f",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttrib2f"
        },
        "returns": {
          "length": 3,
          "name": "vertexAttrib2f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttrib2fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttrib2fv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttrib3f",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttrib3f"
        },
        "returns": {
          "length": 4,
          "name": "vertexAttrib3f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttrib3fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttrib3fv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttrib4f",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttrib4f"
        },
        "returns": {
          "length": 5,
          "name": "vertexAttrib4f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttrib4fv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttrib4fv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttribDivisor",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttribDivisor"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttribDivisor",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttribI4i",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttribI4i"
        },
        "returns": {
          "length": 5,
          "name": "vertexAttribI4i",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttribI4iv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttribI4iv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttribI4iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttribI4ui",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttribI4ui"
        },
        "returns": {
          "length": 5,
          "name": "vertexAttribI4ui",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttribI4uiv",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttribI4uiv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttribI4uiv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttribIPointer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttribIPointer"
        },
        "returns": {
          "length": 5,
          "name": "vertexAttribIPointer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.vertexAttribPointer",
        "info": {
          "code": "WebGL2RenderingContext.prototype.vertexAttribPointer"
        },
        "returns": {
          "length": 6,
          "name": "vertexAttribPointer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.viewport",
        "info": {
          "code": "WebGL2RenderingContext.prototype.viewport"
        },
        "returns": {
          "length": 4,
          "name": "viewport",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.VIEWPORT",
        "info": {
          "code": "WebGL2RenderingContext.VIEWPORT"
        },
        "returns": {
          "type": "number",
          "value": 2978
        }
      },
      {
        "context": "api.WebGL2RenderingContext.WAIT_FAILED",
        "info": {
          "code": "WebGL2RenderingContext.WAIT_FAILED"
        },
        "returns": {
          "type": "number",
          "value": 37149
        }
      },
      {
        "context": "api.WebGL2RenderingContext.waitSync",
        "info": {
          "code": "WebGL2RenderingContext.prototype.waitSync"
        },
        "returns": {
          "length": 3,
          "name": "waitSync",
          "type": "function"
        }
      },
      {
        "context": "api.WebGL2RenderingContext.ZERO",
        "info": {
          "code": "WebGL2RenderingContext.ZERO"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.WebGLActiveInfo",
        "info": {
          "code": "self.WebGLActiveInfo"
        },
        "returns": {
          "length": 0,
          "name": "WebGLActiveInfo",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLActiveInfo.name",
        "info": {
          "code": "'name' in WebGLActiveInfo.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLActiveInfo.size",
        "info": {
          "code": "'size' in WebGLActiveInfo.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLActiveInfo.type",
        "info": {
          "code": "'type' in WebGLActiveInfo.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLBuffer",
        "info": {
          "code": "self.WebGLBuffer"
        },
        "returns": {
          "length": 0,
          "name": "WebGLBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLContextEvent",
        "info": {
          "code": "self.WebGLContextEvent"
        },
        "returns": {
          "length": 1,
          "name": "WebGLContextEvent",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLContextEvent.statusMessage",
        "info": {
          "code": "'statusMessage' in WebGLContextEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLFramebuffer",
        "info": {
          "code": "self.WebGLFramebuffer"
        },
        "returns": {
          "length": 0,
          "name": "WebGLFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLObject",
        "info": {
          "code": "self.WebGLObject"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WebGLProgram",
        "info": {
          "code": "self.WebGLProgram"
        },
        "returns": {
          "length": 0,
          "name": "WebGLProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLQuery",
        "info": {
          "code": "self.WebGLQuery"
        },
        "returns": {
          "length": 0,
          "name": "WebGLQuery",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderbuffer",
        "info": {
          "code": "self.WebGLRenderbuffer"
        },
        "returns": {
          "length": 0,
          "name": "WebGLRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext",
        "info": {
          "code": "self.WebGLRenderingContext"
        },
        "returns": {
          "length": 0,
          "name": "WebGLRenderingContext",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.ACTIVE_ATTRIBUTES",
        "info": {
          "code": "WebGLRenderingContext.ACTIVE_ATTRIBUTES"
        },
        "returns": {
          "type": "number",
          "value": 35721
        }
      },
      {
        "context": "api.WebGLRenderingContext.ACTIVE_TEXTURE",
        "info": {
          "code": "WebGLRenderingContext.ACTIVE_TEXTURE"
        },
        "returns": {
          "type": "number",
          "value": 34016
        }
      },
      {
        "context": "api.WebGLRenderingContext.ACTIVE_UNIFORMS",
        "info": {
          "code": "WebGLRenderingContext.ACTIVE_UNIFORMS"
        },
        "returns": {
          "type": "number",
          "value": 35718
        }
      },
      {
        "context": "api.WebGLRenderingContext.activeTexture",
        "info": {
          "code": "WebGLRenderingContext.prototype.activeTexture"
        },
        "returns": {
          "length": 1,
          "name": "activeTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.ALIASED_LINE_WIDTH_RANGE",
        "info": {
          "code": "WebGLRenderingContext.ALIASED_LINE_WIDTH_RANGE"
        },
        "returns": {
          "type": "number",
          "value": 33902
        }
      },
      {
        "context": "api.WebGLRenderingContext.ALIASED_POINT_SIZE_RANGE",
        "info": {
          "code": "WebGLRenderingContext.ALIASED_POINT_SIZE_RANGE"
        },
        "returns": {
          "type": "number",
          "value": 33901
        }
      },
      {
        "context": "api.WebGLRenderingContext.ALPHA",
        "info": {
          "code": "WebGLRenderingContext.ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 6406
        }
      },
      {
        "context": "api.WebGLRenderingContext.ALPHA_BITS",
        "info": {
          "code": "WebGLRenderingContext.ALPHA_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3413
        }
      },
      {
        "context": "api.WebGLRenderingContext.ALWAYS",
        "info": {
          "code": "WebGLRenderingContext.ALWAYS"
        },
        "returns": {
          "type": "number",
          "value": 519
        }
      },
      {
        "context": "api.WebGLRenderingContext.ARRAY_BUFFER",
        "info": {
          "code": "WebGLRenderingContext.ARRAY_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 34962
        }
      },
      {
        "context": "api.WebGLRenderingContext.ARRAY_BUFFER_BINDING",
        "info": {
          "code": "WebGLRenderingContext.ARRAY_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 34964
        }
      },
      {
        "context": "api.WebGLRenderingContext.ATTACHED_SHADERS",
        "info": {
          "code": "WebGLRenderingContext.ATTACHED_SHADERS"
        },
        "returns": {
          "type": "number",
          "value": 35717
        }
      },
      {
        "context": "api.WebGLRenderingContext.attachShader",
        "info": {
          "code": "WebGLRenderingContext.prototype.attachShader"
        },
        "returns": {
          "length": 2,
          "name": "attachShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.BACK",
        "info": {
          "code": "WebGLRenderingContext.BACK"
        },
        "returns": {
          "type": "number",
          "value": 1029
        }
      },
      {
        "context": "api.WebGLRenderingContext.bindAttribLocation",
        "info": {
          "code": "WebGLRenderingContext.prototype.bindAttribLocation"
        },
        "returns": {
          "length": 3,
          "name": "bindAttribLocation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.bindBuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.bindBuffer"
        },
        "returns": {
          "length": 2,
          "name": "bindBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.bindFramebuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.bindFramebuffer"
        },
        "returns": {
          "length": 2,
          "name": "bindFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.bindRenderbuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.bindRenderbuffer"
        },
        "returns": {
          "length": 2,
          "name": "bindRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.bindTexture",
        "info": {
          "code": "WebGLRenderingContext.prototype.bindTexture"
        },
        "returns": {
          "length": 2,
          "name": "bindTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLEND",
        "info": {
          "code": "WebGLRenderingContext.BLEND"
        },
        "returns": {
          "type": "number",
          "value": 3042
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLEND_COLOR",
        "info": {
          "code": "WebGLRenderingContext.BLEND_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 32773
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLEND_DST_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.BLEND_DST_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 32970
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLEND_DST_RGB",
        "info": {
          "code": "WebGLRenderingContext.BLEND_DST_RGB"
        },
        "returns": {
          "type": "number",
          "value": 32968
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLEND_EQUATION",
        "info": {
          "code": "WebGLRenderingContext.BLEND_EQUATION"
        },
        "returns": {
          "type": "number",
          "value": 32777
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLEND_EQUATION_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.BLEND_EQUATION_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 34877
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLEND_EQUATION_RGB",
        "info": {
          "code": "WebGLRenderingContext.BLEND_EQUATION_RGB"
        },
        "returns": {
          "type": "number",
          "value": 32777
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLEND_SRC_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.BLEND_SRC_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 32971
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLEND_SRC_RGB",
        "info": {
          "code": "WebGLRenderingContext.BLEND_SRC_RGB"
        },
        "returns": {
          "type": "number",
          "value": 32969
        }
      },
      {
        "context": "api.WebGLRenderingContext.blendColor",
        "info": {
          "code": "WebGLRenderingContext.prototype.blendColor"
        },
        "returns": {
          "length": 4,
          "name": "blendColor",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.blendEquation",
        "info": {
          "code": "WebGLRenderingContext.prototype.blendEquation"
        },
        "returns": {
          "length": 1,
          "name": "blendEquation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.blendEquationSeparate",
        "info": {
          "code": "WebGLRenderingContext.prototype.blendEquationSeparate"
        },
        "returns": {
          "length": 2,
          "name": "blendEquationSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.blendFunc",
        "info": {
          "code": "WebGLRenderingContext.prototype.blendFunc"
        },
        "returns": {
          "length": 2,
          "name": "blendFunc",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.blendFuncSeparate",
        "info": {
          "code": "WebGLRenderingContext.prototype.blendFuncSeparate"
        },
        "returns": {
          "length": 4,
          "name": "blendFuncSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.BLUE_BITS",
        "info": {
          "code": "WebGLRenderingContext.BLUE_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3412
        }
      },
      {
        "context": "api.WebGLRenderingContext.BOOL",
        "info": {
          "code": "WebGLRenderingContext.BOOL"
        },
        "returns": {
          "type": "number",
          "value": 35670
        }
      },
      {
        "context": "api.WebGLRenderingContext.BOOL_VEC2",
        "info": {
          "code": "WebGLRenderingContext.BOOL_VEC2"
        },
        "returns": {
          "type": "number",
          "value": 35671
        }
      },
      {
        "context": "api.WebGLRenderingContext.BOOL_VEC3",
        "info": {
          "code": "WebGLRenderingContext.BOOL_VEC3"
        },
        "returns": {
          "type": "number",
          "value": 35672
        }
      },
      {
        "context": "api.WebGLRenderingContext.BOOL_VEC4",
        "info": {
          "code": "WebGLRenderingContext.BOOL_VEC4"
        },
        "returns": {
          "type": "number",
          "value": 35673
        }
      },
      {
        "context": "api.WebGLRenderingContext.BROWSER_DEFAULT_WEBGL",
        "info": {
          "code": "WebGLRenderingContext.BROWSER_DEFAULT_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37444
        }
      },
      {
        "context": "api.WebGLRenderingContext.BUFFER_SIZE",
        "info": {
          "code": "WebGLRenderingContext.BUFFER_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 34660
        }
      },
      {
        "context": "api.WebGLRenderingContext.BUFFER_USAGE",
        "info": {
          "code": "WebGLRenderingContext.BUFFER_USAGE"
        },
        "returns": {
          "type": "number",
          "value": 34661
        }
      },
      {
        "context": "api.WebGLRenderingContext.bufferData",
        "info": {
          "code": "WebGLRenderingContext.prototype.bufferData"
        },
        "returns": {
          "length": 3,
          "name": "bufferData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.bufferData",
        "info": {
          "code": "WebGLRenderingContext.prototype.bufferData"
        },
        "returns": {
          "length": 3,
          "name": "bufferData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.bufferSubData",
        "info": {
          "code": "WebGLRenderingContext.prototype.bufferSubData"
        },
        "returns": {
          "length": 3,
          "name": "bufferSubData",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.BYTE",
        "info": {
          "code": "WebGLRenderingContext.BYTE"
        },
        "returns": {
          "type": "number",
          "value": 5120
        }
      },
      {
        "context": "api.WebGLRenderingContext.canvas",
        "info": {
          "code": "'canvas' in WebGLRenderingContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLRenderingContext.canvas",
        "info": {
          "code": "'canvas' in WebGLRenderingContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLRenderingContext.CCW",
        "info": {
          "code": "WebGLRenderingContext.CCW"
        },
        "returns": {
          "type": "number",
          "value": 2305
        }
      },
      {
        "context": "api.WebGLRenderingContext.checkFramebufferStatus",
        "info": {
          "code": "WebGLRenderingContext.prototype.checkFramebufferStatus"
        },
        "returns": {
          "length": 1,
          "name": "checkFramebufferStatus",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.CLAMP_TO_EDGE",
        "info": {
          "code": "WebGLRenderingContext.CLAMP_TO_EDGE"
        },
        "returns": {
          "type": "number",
          "value": 33071
        }
      },
      {
        "context": "api.WebGLRenderingContext.clear",
        "info": {
          "code": "WebGLRenderingContext.prototype.clear"
        },
        "returns": {
          "length": 1,
          "name": "clear",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.clearColor",
        "info": {
          "code": "WebGLRenderingContext.prototype.clearColor"
        },
        "returns": {
          "length": 4,
          "name": "clearColor",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.clearDepth",
        "info": {
          "code": "WebGLRenderingContext.prototype.clearDepth"
        },
        "returns": {
          "length": 1,
          "name": "clearDepth",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.clearStencil",
        "info": {
          "code": "WebGLRenderingContext.prototype.clearStencil"
        },
        "returns": {
          "length": 1,
          "name": "clearStencil",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.COLOR_ATTACHMENT0",
        "info": {
          "code": "WebGLRenderingContext.COLOR_ATTACHMENT0"
        },
        "returns": {
          "type": "number",
          "value": 36064
        }
      },
      {
        "context": "api.WebGLRenderingContext.COLOR_BUFFER_BIT",
        "info": {
          "code": "WebGLRenderingContext.COLOR_BUFFER_BIT"
        },
        "returns": {
          "type": "number",
          "value": 16384
        }
      },
      {
        "context": "api.WebGLRenderingContext.COLOR_CLEAR_VALUE",
        "info": {
          "code": "WebGLRenderingContext.COLOR_CLEAR_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 3106
        }
      },
      {
        "context": "api.WebGLRenderingContext.COLOR_WRITEMASK",
        "info": {
          "code": "WebGLRenderingContext.COLOR_WRITEMASK"
        },
        "returns": {
          "type": "number",
          "value": 3107
        }
      },
      {
        "context": "api.WebGLRenderingContext.colorMask",
        "info": {
          "code": "WebGLRenderingContext.prototype.colorMask"
        },
        "returns": {
          "length": 4,
          "name": "colorMask",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.COMPILE_STATUS",
        "info": {
          "code": "WebGLRenderingContext.COMPILE_STATUS"
        },
        "returns": {
          "type": "number",
          "value": 35713
        }
      },
      {
        "context": "api.WebGLRenderingContext.compileShader",
        "info": {
          "code": "WebGLRenderingContext.prototype.compileShader"
        },
        "returns": {
          "length": 1,
          "name": "compileShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.COMPRESSED_TEXTURE_FORMATS",
        "info": {
          "code": "WebGLRenderingContext.COMPRESSED_TEXTURE_FORMATS"
        },
        "returns": {
          "type": "number",
          "value": 34467
        }
      },
      {
        "context": "api.WebGLRenderingContext.compressedTexImage2D",
        "info": {
          "code": "WebGLRenderingContext.prototype.compressedTexImage2D"
        },
        "returns": {
          "length": 7,
          "name": "compressedTexImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.compressedTexSubImage2D",
        "info": {
          "code": "WebGLRenderingContext.prototype.compressedTexSubImage2D"
        },
        "returns": {
          "length": 8,
          "name": "compressedTexSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.CONSTANT_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.CONSTANT_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 32771
        }
      },
      {
        "context": "api.WebGLRenderingContext.CONSTANT_COLOR",
        "info": {
          "code": "WebGLRenderingContext.CONSTANT_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 32769
        }
      },
      {
        "context": "api.WebGLRenderingContext.CONTEXT_LOST_WEBGL",
        "info": {
          "code": "WebGLRenderingContext.CONTEXT_LOST_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37442
        }
      },
      {
        "context": "api.WebGLRenderingContext.copyTexImage2D",
        "info": {
          "code": "WebGLRenderingContext.prototype.copyTexImage2D"
        },
        "returns": {
          "length": 8,
          "name": "copyTexImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.copyTexSubImage2D",
        "info": {
          "code": "WebGLRenderingContext.prototype.copyTexSubImage2D"
        },
        "returns": {
          "length": 8,
          "name": "copyTexSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.createBuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.createBuffer"
        },
        "returns": {
          "length": 0,
          "name": "createBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.createFramebuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.createFramebuffer"
        },
        "returns": {
          "length": 0,
          "name": "createFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.createProgram",
        "info": {
          "code": "WebGLRenderingContext.prototype.createProgram"
        },
        "returns": {
          "length": 0,
          "name": "createProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.createRenderbuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.createRenderbuffer"
        },
        "returns": {
          "length": 0,
          "name": "createRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.createShader",
        "info": {
          "code": "WebGLRenderingContext.prototype.createShader"
        },
        "returns": {
          "length": 1,
          "name": "createShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.createTexture",
        "info": {
          "code": "WebGLRenderingContext.prototype.createTexture"
        },
        "returns": {
          "length": 0,
          "name": "createTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.CULL_FACE",
        "info": {
          "code": "WebGLRenderingContext.CULL_FACE"
        },
        "returns": {
          "type": "number",
          "value": 2884
        }
      },
      {
        "context": "api.WebGLRenderingContext.CULL_FACE_MODE",
        "info": {
          "code": "WebGLRenderingContext.CULL_FACE_MODE"
        },
        "returns": {
          "type": "number",
          "value": 2885
        }
      },
      {
        "context": "api.WebGLRenderingContext.cullFace",
        "info": {
          "code": "WebGLRenderingContext.prototype.cullFace"
        },
        "returns": {
          "length": 1,
          "name": "cullFace",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.CURRENT_PROGRAM",
        "info": {
          "code": "WebGLRenderingContext.CURRENT_PROGRAM"
        },
        "returns": {
          "type": "number",
          "value": 35725
        }
      },
      {
        "context": "api.WebGLRenderingContext.CURRENT_VERTEX_ATTRIB",
        "info": {
          "code": "WebGLRenderingContext.CURRENT_VERTEX_ATTRIB"
        },
        "returns": {
          "type": "number",
          "value": 34342
        }
      },
      {
        "context": "api.WebGLRenderingContext.CW",
        "info": {
          "code": "WebGLRenderingContext.CW"
        },
        "returns": {
          "type": "number",
          "value": 2304
        }
      },
      {
        "context": "api.WebGLRenderingContext.DECR",
        "info": {
          "code": "WebGLRenderingContext.DECR"
        },
        "returns": {
          "type": "number",
          "value": 7683
        }
      },
      {
        "context": "api.WebGLRenderingContext.DECR_WRAP",
        "info": {
          "code": "WebGLRenderingContext.DECR_WRAP"
        },
        "returns": {
          "type": "number",
          "value": 34056
        }
      },
      {
        "context": "api.WebGLRenderingContext.DELETE_STATUS",
        "info": {
          "code": "WebGLRenderingContext.DELETE_STATUS"
        },
        "returns": {
          "type": "number",
          "value": 35712
        }
      },
      {
        "context": "api.WebGLRenderingContext.deleteBuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.deleteBuffer"
        },
        "returns": {
          "length": 1,
          "name": "deleteBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.deleteFramebuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.deleteFramebuffer"
        },
        "returns": {
          "length": 1,
          "name": "deleteFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.deleteProgram",
        "info": {
          "code": "WebGLRenderingContext.prototype.deleteProgram"
        },
        "returns": {
          "length": 1,
          "name": "deleteProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.deleteRenderbuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.deleteRenderbuffer"
        },
        "returns": {
          "length": 1,
          "name": "deleteRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.deleteShader",
        "info": {
          "code": "WebGLRenderingContext.prototype.deleteShader"
        },
        "returns": {
          "length": 1,
          "name": "deleteShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.deleteTexture",
        "info": {
          "code": "WebGLRenderingContext.prototype.deleteTexture"
        },
        "returns": {
          "length": 1,
          "name": "deleteTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_ATTACHMENT",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 36096
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_BITS",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3414
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_BUFFER_BIT",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_BUFFER_BIT"
        },
        "returns": {
          "type": "number",
          "value": 256
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_CLEAR_VALUE",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_CLEAR_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 2931
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_COMPONENT",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_COMPONENT"
        },
        "returns": {
          "type": "number",
          "value": 6402
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_COMPONENT16",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_COMPONENT16"
        },
        "returns": {
          "type": "number",
          "value": 33189
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_FUNC",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_FUNC"
        },
        "returns": {
          "type": "number",
          "value": 2932
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_RANGE",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_RANGE"
        },
        "returns": {
          "type": "number",
          "value": 2928
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_STENCIL",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_STENCIL"
        },
        "returns": {
          "type": "number",
          "value": 34041
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_STENCIL_ATTACHMENT",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_STENCIL_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 33306
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_TEST",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_TEST"
        },
        "returns": {
          "type": "number",
          "value": 2929
        }
      },
      {
        "context": "api.WebGLRenderingContext.DEPTH_WRITEMASK",
        "info": {
          "code": "WebGLRenderingContext.DEPTH_WRITEMASK"
        },
        "returns": {
          "type": "number",
          "value": 2930
        }
      },
      {
        "context": "api.WebGLRenderingContext.depthFunc",
        "info": {
          "code": "WebGLRenderingContext.prototype.depthFunc"
        },
        "returns": {
          "length": 1,
          "name": "depthFunc",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.depthMask",
        "info": {
          "code": "WebGLRenderingContext.prototype.depthMask"
        },
        "returns": {
          "length": 1,
          "name": "depthMask",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.depthRange",
        "info": {
          "code": "WebGLRenderingContext.prototype.depthRange"
        },
        "returns": {
          "length": 2,
          "name": "depthRange",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.detachShader",
        "info": {
          "code": "WebGLRenderingContext.prototype.detachShader"
        },
        "returns": {
          "length": 2,
          "name": "detachShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.disable",
        "info": {
          "code": "WebGLRenderingContext.prototype.disable"
        },
        "returns": {
          "length": 1,
          "name": "disable",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.disableVertexAttribArray",
        "info": {
          "code": "WebGLRenderingContext.prototype.disableVertexAttribArray"
        },
        "returns": {
          "length": 1,
          "name": "disableVertexAttribArray",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.DITHER",
        "info": {
          "code": "WebGLRenderingContext.DITHER"
        },
        "returns": {
          "type": "number",
          "value": 3024
        }
      },
      {
        "context": "api.WebGLRenderingContext.DONT_CARE",
        "info": {
          "code": "WebGLRenderingContext.DONT_CARE"
        },
        "returns": {
          "type": "number",
          "value": 4352
        }
      },
      {
        "context": "api.WebGLRenderingContext.drawArrays",
        "info": {
          "code": "WebGLRenderingContext.prototype.drawArrays"
        },
        "returns": {
          "length": 3,
          "name": "drawArrays",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.drawElements",
        "info": {
          "code": "WebGLRenderingContext.prototype.drawElements"
        },
        "returns": {
          "length": 4,
          "name": "drawElements",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.drawingBufferHeight",
        "info": {
          "code": "'drawingBufferHeight' in WebGLRenderingContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLRenderingContext.drawingBufferWidth",
        "info": {
          "code": "'drawingBufferWidth' in WebGLRenderingContext.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLRenderingContext.DST_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.DST_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 772
        }
      },
      {
        "context": "api.WebGLRenderingContext.DST_COLOR",
        "info": {
          "code": "WebGLRenderingContext.DST_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 774
        }
      },
      {
        "context": "api.WebGLRenderingContext.DYNAMIC_DRAW",
        "info": {
          "code": "WebGLRenderingContext.DYNAMIC_DRAW"
        },
        "returns": {
          "type": "number",
          "value": 35048
        }
      },
      {
        "context": "api.WebGLRenderingContext.ELEMENT_ARRAY_BUFFER",
        "info": {
          "code": "WebGLRenderingContext.ELEMENT_ARRAY_BUFFER"
        },
        "returns": {
          "type": "number",
          "value": 34963
        }
      },
      {
        "context": "api.WebGLRenderingContext.ELEMENT_ARRAY_BUFFER_BINDING",
        "info": {
          "code": "WebGLRenderingContext.ELEMENT_ARRAY_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 34965
        }
      },
      {
        "context": "api.WebGLRenderingContext.enable",
        "info": {
          "code": "WebGLRenderingContext.prototype.enable"
        },
        "returns": {
          "length": 1,
          "name": "enable",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.enableVertexAttribArray",
        "info": {
          "code": "WebGLRenderingContext.prototype.enableVertexAttribArray"
        },
        "returns": {
          "length": 1,
          "name": "enableVertexAttribArray",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.EQUAL",
        "info": {
          "code": "WebGLRenderingContext.EQUAL"
        },
        "returns": {
          "type": "number",
          "value": 514
        }
      },
      {
        "context": "api.WebGLRenderingContext.FASTEST",
        "info": {
          "code": "WebGLRenderingContext.FASTEST"
        },
        "returns": {
          "type": "number",
          "value": 4353
        }
      },
      {
        "context": "api.WebGLRenderingContext.finish",
        "info": {
          "code": "WebGLRenderingContext.prototype.finish"
        },
        "returns": {
          "length": 0,
          "name": "finish",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.FLOAT",
        "info": {
          "code": "WebGLRenderingContext.FLOAT"
        },
        "returns": {
          "type": "number",
          "value": 5126
        }
      },
      {
        "context": "api.WebGLRenderingContext.FLOAT_MAT2",
        "info": {
          "code": "WebGLRenderingContext.FLOAT_MAT2"
        },
        "returns": {
          "type": "number",
          "value": 35674
        }
      },
      {
        "context": "api.WebGLRenderingContext.FLOAT_MAT3",
        "info": {
          "code": "WebGLRenderingContext.FLOAT_MAT3"
        },
        "returns": {
          "type": "number",
          "value": 35675
        }
      },
      {
        "context": "api.WebGLRenderingContext.FLOAT_MAT4",
        "info": {
          "code": "WebGLRenderingContext.FLOAT_MAT4"
        },
        "returns": {
          "type": "number",
          "value": 35676
        }
      },
      {
        "context": "api.WebGLRenderingContext.FLOAT_VEC2",
        "info": {
          "code": "WebGLRenderingContext.FLOAT_VEC2"
        },
        "returns": {
          "type": "number",
          "value": 35664
        }
      },
      {
        "context": "api.WebGLRenderingContext.FLOAT_VEC3",
        "info": {
          "code": "WebGLRenderingContext.FLOAT_VEC3"
        },
        "returns": {
          "type": "number",
          "value": 35665
        }
      },
      {
        "context": "api.WebGLRenderingContext.FLOAT_VEC4",
        "info": {
          "code": "WebGLRenderingContext.FLOAT_VEC4"
        },
        "returns": {
          "type": "number",
          "value": 35666
        }
      },
      {
        "context": "api.WebGLRenderingContext.flush",
        "info": {
          "code": "WebGLRenderingContext.prototype.flush"
        },
        "returns": {
          "length": 0,
          "name": "flush",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAGMENT_SHADER",
        "info": {
          "code": "WebGLRenderingContext.FRAGMENT_SHADER"
        },
        "returns": {
          "type": "number",
          "value": 35632
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER"
        },
        "returns": {
          "type": "number",
          "value": 36160
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"
        },
        "returns": {
          "type": "number",
          "value": 36049
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 36048
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"
        },
        "returns": {
          "type": "number",
          "value": 36051
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"
        },
        "returns": {
          "type": "number",
          "value": 36050
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_BINDING",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 36006
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_COMPLETE",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_COMPLETE"
        },
        "returns": {
          "type": "number",
          "value": 36053
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 36054
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS"
        },
        "returns": {
          "type": "number",
          "value": 36057
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 36055
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRAMEBUFFER_UNSUPPORTED",
        "info": {
          "code": "WebGLRenderingContext.FRAMEBUFFER_UNSUPPORTED"
        },
        "returns": {
          "type": "number",
          "value": 36061
        }
      },
      {
        "context": "api.WebGLRenderingContext.framebufferRenderbuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.framebufferRenderbuffer"
        },
        "returns": {
          "length": 4,
          "name": "framebufferRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.framebufferTexture2D",
        "info": {
          "code": "WebGLRenderingContext.prototype.framebufferTexture2D"
        },
        "returns": {
          "length": 5,
          "name": "framebufferTexture2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRONT",
        "info": {
          "code": "WebGLRenderingContext.FRONT"
        },
        "returns": {
          "type": "number",
          "value": 1028
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRONT_AND_BACK",
        "info": {
          "code": "WebGLRenderingContext.FRONT_AND_BACK"
        },
        "returns": {
          "type": "number",
          "value": 1032
        }
      },
      {
        "context": "api.WebGLRenderingContext.FRONT_FACE",
        "info": {
          "code": "WebGLRenderingContext.FRONT_FACE"
        },
        "returns": {
          "type": "number",
          "value": 2886
        }
      },
      {
        "context": "api.WebGLRenderingContext.frontFace",
        "info": {
          "code": "WebGLRenderingContext.prototype.frontFace"
        },
        "returns": {
          "length": 1,
          "name": "frontFace",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.FUNC_ADD",
        "info": {
          "code": "WebGLRenderingContext.FUNC_ADD"
        },
        "returns": {
          "type": "number",
          "value": 32774
        }
      },
      {
        "context": "api.WebGLRenderingContext.FUNC_REVERSE_SUBTRACT",
        "info": {
          "code": "WebGLRenderingContext.FUNC_REVERSE_SUBTRACT"
        },
        "returns": {
          "type": "number",
          "value": 32779
        }
      },
      {
        "context": "api.WebGLRenderingContext.FUNC_SUBTRACT",
        "info": {
          "code": "WebGLRenderingContext.FUNC_SUBTRACT"
        },
        "returns": {
          "type": "number",
          "value": 32778
        }
      },
      {
        "context": "api.WebGLRenderingContext.GENERATE_MIPMAP_HINT",
        "info": {
          "code": "WebGLRenderingContext.GENERATE_MIPMAP_HINT"
        },
        "returns": {
          "type": "number",
          "value": 33170
        }
      },
      {
        "context": "api.WebGLRenderingContext.generateMipmap",
        "info": {
          "code": "WebGLRenderingContext.prototype.generateMipmap"
        },
        "returns": {
          "length": 1,
          "name": "generateMipmap",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.GEQUAL",
        "info": {
          "code": "WebGLRenderingContext.GEQUAL"
        },
        "returns": {
          "type": "number",
          "value": 518
        }
      },
      {
        "context": "api.WebGLRenderingContext.getActiveAttrib",
        "info": {
          "code": "WebGLRenderingContext.prototype.getActiveAttrib"
        },
        "returns": {
          "length": 2,
          "name": "getActiveAttrib",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getActiveUniform",
        "info": {
          "code": "WebGLRenderingContext.prototype.getActiveUniform"
        },
        "returns": {
          "length": 2,
          "name": "getActiveUniform",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getAttachedShaders",
        "info": {
          "code": "WebGLRenderingContext.prototype.getAttachedShaders"
        },
        "returns": {
          "length": 1,
          "name": "getAttachedShaders",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getAttribLocation",
        "info": {
          "code": "WebGLRenderingContext.prototype.getAttribLocation"
        },
        "returns": {
          "length": 2,
          "name": "getAttribLocation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getBufferParameter",
        "info": {
          "code": "WebGLRenderingContext.prototype.getBufferParameter"
        },
        "returns": {
          "length": 2,
          "name": "getBufferParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getContextAttributes",
        "info": {
          "code": "WebGLRenderingContext.prototype.getContextAttributes"
        },
        "returns": {
          "length": 0,
          "name": "getContextAttributes",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getError",
        "info": {
          "code": "WebGLRenderingContext.prototype.getError"
        },
        "returns": {
          "length": 0,
          "name": "getError",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getExtension",
        "info": {
          "code": "WebGLRenderingContext.prototype.getExtension"
        },
        "returns": {
          "length": 1,
          "name": "getExtension",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getFramebufferAttachmentParameter",
        "info": {
          "code": "WebGLRenderingContext.prototype.getFramebufferAttachmentParameter"
        },
        "returns": {
          "length": 3,
          "name": "getFramebufferAttachmentParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getParameter",
        "info": {
          "code": "WebGLRenderingContext.prototype.getParameter"
        },
        "returns": {
          "length": 1,
          "name": "getParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getProgramInfoLog",
        "info": {
          "code": "WebGLRenderingContext.prototype.getProgramInfoLog"
        },
        "returns": {
          "length": 1,
          "name": "getProgramInfoLog",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getProgramParameter",
        "info": {
          "code": "WebGLRenderingContext.prototype.getProgramParameter"
        },
        "returns": {
          "length": 2,
          "name": "getProgramParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getRenderbufferParameter",
        "info": {
          "code": "WebGLRenderingContext.prototype.getRenderbufferParameter"
        },
        "returns": {
          "length": 2,
          "name": "getRenderbufferParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getShaderInfoLog",
        "info": {
          "code": "WebGLRenderingContext.prototype.getShaderInfoLog"
        },
        "returns": {
          "length": 1,
          "name": "getShaderInfoLog",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getShaderParameter",
        "info": {
          "code": "WebGLRenderingContext.prototype.getShaderParameter"
        },
        "returns": {
          "length": 2,
          "name": "getShaderParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getShaderPrecisionFormat",
        "info": {
          "code": "WebGLRenderingContext.prototype.getShaderPrecisionFormat"
        },
        "returns": {
          "length": 2,
          "name": "getShaderPrecisionFormat",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getShaderSource",
        "info": {
          "code": "WebGLRenderingContext.prototype.getShaderSource"
        },
        "returns": {
          "length": 1,
          "name": "getShaderSource",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getSupportedExtensions",
        "info": {
          "code": "WebGLRenderingContext.prototype.getSupportedExtensions"
        },
        "returns": {
          "length": 0,
          "name": "getSupportedExtensions",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getTexParameter",
        "info": {
          "code": "WebGLRenderingContext.prototype.getTexParameter"
        },
        "returns": {
          "length": 2,
          "name": "getTexParameter",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getUniform",
        "info": {
          "code": "WebGLRenderingContext.prototype.getUniform"
        },
        "returns": {
          "length": 2,
          "name": "getUniform",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getUniformLocation",
        "info": {
          "code": "WebGLRenderingContext.prototype.getUniformLocation"
        },
        "returns": {
          "length": 2,
          "name": "getUniformLocation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getVertexAttrib",
        "info": {
          "code": "WebGLRenderingContext.prototype.getVertexAttrib"
        },
        "returns": {
          "length": 2,
          "name": "getVertexAttrib",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.getVertexAttribOffset",
        "info": {
          "code": "WebGLRenderingContext.prototype.getVertexAttribOffset"
        },
        "returns": {
          "length": 2,
          "name": "getVertexAttribOffset",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.GREATER",
        "info": {
          "code": "WebGLRenderingContext.GREATER"
        },
        "returns": {
          "type": "number",
          "value": 516
        }
      },
      {
        "context": "api.WebGLRenderingContext.GREEN_BITS",
        "info": {
          "code": "WebGLRenderingContext.GREEN_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3411
        }
      },
      {
        "context": "api.WebGLRenderingContext.HIGH_FLOAT",
        "info": {
          "code": "WebGLRenderingContext.HIGH_FLOAT"
        },
        "returns": {
          "type": "number",
          "value": 36338
        }
      },
      {
        "context": "api.WebGLRenderingContext.HIGH_INT",
        "info": {
          "code": "WebGLRenderingContext.HIGH_INT"
        },
        "returns": {
          "type": "number",
          "value": 36341
        }
      },
      {
        "context": "api.WebGLRenderingContext.hint",
        "info": {
          "code": "WebGLRenderingContext.prototype.hint"
        },
        "returns": {
          "length": 2,
          "name": "hint",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.IMPLEMENTATION_COLOR_READ_FORMAT",
        "info": {
          "code": "WebGLRenderingContext.IMPLEMENTATION_COLOR_READ_FORMAT"
        },
        "returns": {
          "type": "number",
          "value": 35739
        }
      },
      {
        "context": "api.WebGLRenderingContext.IMPLEMENTATION_COLOR_READ_TYPE",
        "info": {
          "code": "WebGLRenderingContext.IMPLEMENTATION_COLOR_READ_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 35738
        }
      },
      {
        "context": "api.WebGLRenderingContext.INCR",
        "info": {
          "code": "WebGLRenderingContext.INCR"
        },
        "returns": {
          "type": "number",
          "value": 7682
        }
      },
      {
        "context": "api.WebGLRenderingContext.INCR_WRAP",
        "info": {
          "code": "WebGLRenderingContext.INCR_WRAP"
        },
        "returns": {
          "type": "number",
          "value": 34055
        }
      },
      {
        "context": "api.WebGLRenderingContext.INT",
        "info": {
          "code": "WebGLRenderingContext.INT"
        },
        "returns": {
          "type": "number",
          "value": 5124
        }
      },
      {
        "context": "api.WebGLRenderingContext.INT_VEC2",
        "info": {
          "code": "WebGLRenderingContext.INT_VEC2"
        },
        "returns": {
          "type": "number",
          "value": 35667
        }
      },
      {
        "context": "api.WebGLRenderingContext.INT_VEC3",
        "info": {
          "code": "WebGLRenderingContext.INT_VEC3"
        },
        "returns": {
          "type": "number",
          "value": 35668
        }
      },
      {
        "context": "api.WebGLRenderingContext.INT_VEC4",
        "info": {
          "code": "WebGLRenderingContext.INT_VEC4"
        },
        "returns": {
          "type": "number",
          "value": 35669
        }
      },
      {
        "context": "api.WebGLRenderingContext.INVALID_ENUM",
        "info": {
          "code": "WebGLRenderingContext.INVALID_ENUM"
        },
        "returns": {
          "type": "number",
          "value": 1280
        }
      },
      {
        "context": "api.WebGLRenderingContext.INVALID_FRAMEBUFFER_OPERATION",
        "info": {
          "code": "WebGLRenderingContext.INVALID_FRAMEBUFFER_OPERATION"
        },
        "returns": {
          "type": "number",
          "value": 1286
        }
      },
      {
        "context": "api.WebGLRenderingContext.INVALID_OPERATION",
        "info": {
          "code": "WebGLRenderingContext.INVALID_OPERATION"
        },
        "returns": {
          "type": "number",
          "value": 1282
        }
      },
      {
        "context": "api.WebGLRenderingContext.INVALID_VALUE",
        "info": {
          "code": "WebGLRenderingContext.INVALID_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 1281
        }
      },
      {
        "context": "api.WebGLRenderingContext.INVERT",
        "info": {
          "code": "WebGLRenderingContext.INVERT"
        },
        "returns": {
          "type": "number",
          "value": 5386
        }
      },
      {
        "context": "api.WebGLRenderingContext.isBuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.isBuffer"
        },
        "returns": {
          "length": 1,
          "name": "isBuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.isContextLost",
        "info": {
          "code": "WebGLRenderingContext.prototype.isContextLost"
        },
        "returns": {
          "length": 0,
          "name": "isContextLost",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.isEnabled",
        "info": {
          "code": "WebGLRenderingContext.prototype.isEnabled"
        },
        "returns": {
          "length": 1,
          "name": "isEnabled",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.isFramebuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.isFramebuffer"
        },
        "returns": {
          "length": 1,
          "name": "isFramebuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.isProgram",
        "info": {
          "code": "WebGLRenderingContext.prototype.isProgram"
        },
        "returns": {
          "length": 1,
          "name": "isProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.isRenderbuffer",
        "info": {
          "code": "WebGLRenderingContext.prototype.isRenderbuffer"
        },
        "returns": {
          "length": 1,
          "name": "isRenderbuffer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.isShader",
        "info": {
          "code": "WebGLRenderingContext.prototype.isShader"
        },
        "returns": {
          "length": 1,
          "name": "isShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.isTexture",
        "info": {
          "code": "WebGLRenderingContext.prototype.isTexture"
        },
        "returns": {
          "length": 1,
          "name": "isTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.KEEP",
        "info": {
          "code": "WebGLRenderingContext.KEEP"
        },
        "returns": {
          "type": "number",
          "value": 7680
        }
      },
      {
        "context": "api.WebGLRenderingContext.LEQUAL",
        "info": {
          "code": "WebGLRenderingContext.LEQUAL"
        },
        "returns": {
          "type": "number",
          "value": 515
        }
      },
      {
        "context": "api.WebGLRenderingContext.LESS",
        "info": {
          "code": "WebGLRenderingContext.LESS"
        },
        "returns": {
          "type": "number",
          "value": 513
        }
      },
      {
        "context": "api.WebGLRenderingContext.LINE_LOOP",
        "info": {
          "code": "WebGLRenderingContext.LINE_LOOP"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.WebGLRenderingContext.LINE_STRIP",
        "info": {
          "code": "WebGLRenderingContext.LINE_STRIP"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.WebGLRenderingContext.LINE_WIDTH",
        "info": {
          "code": "WebGLRenderingContext.LINE_WIDTH"
        },
        "returns": {
          "type": "number",
          "value": 2849
        }
      },
      {
        "context": "api.WebGLRenderingContext.LINEAR",
        "info": {
          "code": "WebGLRenderingContext.LINEAR"
        },
        "returns": {
          "type": "number",
          "value": 9729
        }
      },
      {
        "context": "api.WebGLRenderingContext.LINEAR_MIPMAP_LINEAR",
        "info": {
          "code": "WebGLRenderingContext.LINEAR_MIPMAP_LINEAR"
        },
        "returns": {
          "type": "number",
          "value": 9987
        }
      },
      {
        "context": "api.WebGLRenderingContext.LINEAR_MIPMAP_NEAREST",
        "info": {
          "code": "WebGLRenderingContext.LINEAR_MIPMAP_NEAREST"
        },
        "returns": {
          "type": "number",
          "value": 9985
        }
      },
      {
        "context": "api.WebGLRenderingContext.LINES",
        "info": {
          "code": "WebGLRenderingContext.LINES"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.WebGLRenderingContext.lineWidth",
        "info": {
          "code": "WebGLRenderingContext.prototype.lineWidth"
        },
        "returns": {
          "length": 1,
          "name": "lineWidth",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.LINK_STATUS",
        "info": {
          "code": "WebGLRenderingContext.LINK_STATUS"
        },
        "returns": {
          "type": "number",
          "value": 35714
        }
      },
      {
        "context": "api.WebGLRenderingContext.linkProgram",
        "info": {
          "code": "WebGLRenderingContext.prototype.linkProgram"
        },
        "returns": {
          "length": 1,
          "name": "linkProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.LOW_FLOAT",
        "info": {
          "code": "WebGLRenderingContext.LOW_FLOAT"
        },
        "returns": {
          "type": "number",
          "value": 36336
        }
      },
      {
        "context": "api.WebGLRenderingContext.LOW_INT",
        "info": {
          "code": "WebGLRenderingContext.LOW_INT"
        },
        "returns": {
          "type": "number",
          "value": 36339
        }
      },
      {
        "context": "api.WebGLRenderingContext.LUMINANCE",
        "info": {
          "code": "WebGLRenderingContext.LUMINANCE"
        },
        "returns": {
          "type": "number",
          "value": 6409
        }
      },
      {
        "context": "api.WebGLRenderingContext.LUMINANCE_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.LUMINANCE_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 6410
        }
      },
      {
        "context": "api.WebGLRenderingContext.makeXRCompatible",
        "info": {
          "code": "WebGLRenderingContext.prototype.makeXRCompatible"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS",
        "info": {
          "code": "WebGLRenderingContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS"
        },
        "returns": {
          "type": "number",
          "value": 35661
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_CUBE_MAP_TEXTURE_SIZE",
        "info": {
          "code": "WebGLRenderingContext.MAX_CUBE_MAP_TEXTURE_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 34076
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_FRAGMENT_UNIFORM_VECTORS",
        "info": {
          "code": "WebGLRenderingContext.MAX_FRAGMENT_UNIFORM_VECTORS"
        },
        "returns": {
          "type": "number",
          "value": 36349
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_RENDERBUFFER_SIZE",
        "info": {
          "code": "WebGLRenderingContext.MAX_RENDERBUFFER_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 34024
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_TEXTURE_IMAGE_UNITS",
        "info": {
          "code": "WebGLRenderingContext.MAX_TEXTURE_IMAGE_UNITS"
        },
        "returns": {
          "type": "number",
          "value": 34930
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_TEXTURE_SIZE",
        "info": {
          "code": "WebGLRenderingContext.MAX_TEXTURE_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 3379
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_VARYING_VECTORS",
        "info": {
          "code": "WebGLRenderingContext.MAX_VARYING_VECTORS"
        },
        "returns": {
          "type": "number",
          "value": 36348
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_VERTEX_ATTRIBS",
        "info": {
          "code": "WebGLRenderingContext.MAX_VERTEX_ATTRIBS"
        },
        "returns": {
          "type": "number",
          "value": 34921
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS",
        "info": {
          "code": "WebGLRenderingContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS"
        },
        "returns": {
          "type": "number",
          "value": 35660
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_VERTEX_UNIFORM_VECTORS",
        "info": {
          "code": "WebGLRenderingContext.MAX_VERTEX_UNIFORM_VECTORS"
        },
        "returns": {
          "type": "number",
          "value": 36347
        }
      },
      {
        "context": "api.WebGLRenderingContext.MAX_VIEWPORT_DIMS",
        "info": {
          "code": "WebGLRenderingContext.MAX_VIEWPORT_DIMS"
        },
        "returns": {
          "type": "number",
          "value": 3386
        }
      },
      {
        "context": "api.WebGLRenderingContext.MEDIUM_FLOAT",
        "info": {
          "code": "WebGLRenderingContext.MEDIUM_FLOAT"
        },
        "returns": {
          "type": "number",
          "value": 36337
        }
      },
      {
        "context": "api.WebGLRenderingContext.MEDIUM_INT",
        "info": {
          "code": "WebGLRenderingContext.MEDIUM_INT"
        },
        "returns": {
          "type": "number",
          "value": 36340
        }
      },
      {
        "context": "api.WebGLRenderingContext.MIRRORED_REPEAT",
        "info": {
          "code": "WebGLRenderingContext.MIRRORED_REPEAT"
        },
        "returns": {
          "type": "number",
          "value": 33648
        }
      },
      {
        "context": "api.WebGLRenderingContext.NEAREST",
        "info": {
          "code": "WebGLRenderingContext.NEAREST"
        },
        "returns": {
          "type": "number",
          "value": 9728
        }
      },
      {
        "context": "api.WebGLRenderingContext.NEAREST_MIPMAP_LINEAR",
        "info": {
          "code": "WebGLRenderingContext.NEAREST_MIPMAP_LINEAR"
        },
        "returns": {
          "type": "number",
          "value": 9986
        }
      },
      {
        "context": "api.WebGLRenderingContext.NEAREST_MIPMAP_NEAREST",
        "info": {
          "code": "WebGLRenderingContext.NEAREST_MIPMAP_NEAREST"
        },
        "returns": {
          "type": "number",
          "value": 9984
        }
      },
      {
        "context": "api.WebGLRenderingContext.NEVER",
        "info": {
          "code": "WebGLRenderingContext.NEVER"
        },
        "returns": {
          "type": "number",
          "value": 512
        }
      },
      {
        "context": "api.WebGLRenderingContext.NICEST",
        "info": {
          "code": "WebGLRenderingContext.NICEST"
        },
        "returns": {
          "type": "number",
          "value": 4354
        }
      },
      {
        "context": "api.WebGLRenderingContext.NO_ERROR",
        "info": {
          "code": "WebGLRenderingContext.NO_ERROR"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.WebGLRenderingContext.NONE",
        "info": {
          "code": "WebGLRenderingContext.NONE"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.WebGLRenderingContext.NOTEQUAL",
        "info": {
          "code": "WebGLRenderingContext.NOTEQUAL"
        },
        "returns": {
          "type": "number",
          "value": 517
        }
      },
      {
        "context": "api.WebGLRenderingContext.ONE",
        "info": {
          "code": "WebGLRenderingContext.ONE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.WebGLRenderingContext.ONE_MINUS_CONSTANT_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.ONE_MINUS_CONSTANT_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 32772
        }
      },
      {
        "context": "api.WebGLRenderingContext.ONE_MINUS_CONSTANT_COLOR",
        "info": {
          "code": "WebGLRenderingContext.ONE_MINUS_CONSTANT_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 32770
        }
      },
      {
        "context": "api.WebGLRenderingContext.ONE_MINUS_DST_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.ONE_MINUS_DST_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 773
        }
      },
      {
        "context": "api.WebGLRenderingContext.ONE_MINUS_DST_COLOR",
        "info": {
          "code": "WebGLRenderingContext.ONE_MINUS_DST_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 775
        }
      },
      {
        "context": "api.WebGLRenderingContext.ONE_MINUS_SRC_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.ONE_MINUS_SRC_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 771
        }
      },
      {
        "context": "api.WebGLRenderingContext.ONE_MINUS_SRC_COLOR",
        "info": {
          "code": "WebGLRenderingContext.ONE_MINUS_SRC_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 769
        }
      },
      {
        "context": "api.WebGLRenderingContext.OUT_OF_MEMORY",
        "info": {
          "code": "WebGLRenderingContext.OUT_OF_MEMORY"
        },
        "returns": {
          "type": "number",
          "value": 1285
        }
      },
      {
        "context": "api.WebGLRenderingContext.PACK_ALIGNMENT",
        "info": {
          "code": "WebGLRenderingContext.PACK_ALIGNMENT"
        },
        "returns": {
          "type": "number",
          "value": 3333
        }
      },
      {
        "context": "api.WebGLRenderingContext.pixelStorei",
        "info": {
          "code": "WebGLRenderingContext.prototype.pixelStorei"
        },
        "returns": {
          "length": 2,
          "name": "pixelStorei",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.POINTS",
        "info": {
          "code": "WebGLRenderingContext.POINTS"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.WebGLRenderingContext.POLYGON_OFFSET_FACTOR",
        "info": {
          "code": "WebGLRenderingContext.POLYGON_OFFSET_FACTOR"
        },
        "returns": {
          "type": "number",
          "value": 32824
        }
      },
      {
        "context": "api.WebGLRenderingContext.POLYGON_OFFSET_FILL",
        "info": {
          "code": "WebGLRenderingContext.POLYGON_OFFSET_FILL"
        },
        "returns": {
          "type": "number",
          "value": 32823
        }
      },
      {
        "context": "api.WebGLRenderingContext.POLYGON_OFFSET_UNITS",
        "info": {
          "code": "WebGLRenderingContext.POLYGON_OFFSET_UNITS"
        },
        "returns": {
          "type": "number",
          "value": 10752
        }
      },
      {
        "context": "api.WebGLRenderingContext.polygonOffset",
        "info": {
          "code": "WebGLRenderingContext.prototype.polygonOffset"
        },
        "returns": {
          "length": 2,
          "name": "polygonOffset",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.readPixels",
        "info": {
          "code": "WebGLRenderingContext.prototype.readPixels"
        },
        "returns": {
          "length": 7,
          "name": "readPixels",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.RED_BITS",
        "info": {
          "code": "WebGLRenderingContext.RED_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3410
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER"
        },
        "returns": {
          "type": "number",
          "value": 36161
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_ALPHA_SIZE",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_ALPHA_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36179
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_BINDING",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 36007
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_BLUE_SIZE",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_BLUE_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36178
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_DEPTH_SIZE",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_DEPTH_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36180
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_GREEN_SIZE",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_GREEN_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36177
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_HEIGHT",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_HEIGHT"
        },
        "returns": {
          "type": "number",
          "value": 36163
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_INTERNAL_FORMAT",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_INTERNAL_FORMAT"
        },
        "returns": {
          "type": "number",
          "value": 36164
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_RED_SIZE",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_RED_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36176
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_STENCIL_SIZE",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_STENCIL_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 36181
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERBUFFER_WIDTH",
        "info": {
          "code": "WebGLRenderingContext.RENDERBUFFER_WIDTH"
        },
        "returns": {
          "type": "number",
          "value": 36162
        }
      },
      {
        "context": "api.WebGLRenderingContext.renderbufferStorage",
        "info": {
          "code": "WebGLRenderingContext.prototype.renderbufferStorage"
        },
        "returns": {
          "length": 4,
          "name": "renderbufferStorage",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.RENDERER",
        "info": {
          "code": "WebGLRenderingContext.RENDERER"
        },
        "returns": {
          "type": "number",
          "value": 7937
        }
      },
      {
        "context": "api.WebGLRenderingContext.REPEAT",
        "info": {
          "code": "WebGLRenderingContext.REPEAT"
        },
        "returns": {
          "type": "number",
          "value": 10497
        }
      },
      {
        "context": "api.WebGLRenderingContext.REPLACE",
        "info": {
          "code": "WebGLRenderingContext.REPLACE"
        },
        "returns": {
          "type": "number",
          "value": 7681
        }
      },
      {
        "context": "api.WebGLRenderingContext.RGB",
        "info": {
          "code": "WebGLRenderingContext.RGB"
        },
        "returns": {
          "type": "number",
          "value": 6407
        }
      },
      {
        "context": "api.WebGLRenderingContext.RGB5_A1",
        "info": {
          "code": "WebGLRenderingContext.RGB5_A1"
        },
        "returns": {
          "type": "number",
          "value": 32855
        }
      },
      {
        "context": "api.WebGLRenderingContext.RGB565",
        "info": {
          "code": "WebGLRenderingContext.RGB565"
        },
        "returns": {
          "type": "number",
          "value": 36194
        }
      },
      {
        "context": "api.WebGLRenderingContext.RGBA",
        "info": {
          "code": "WebGLRenderingContext.RGBA"
        },
        "returns": {
          "type": "number",
          "value": 6408
        }
      },
      {
        "context": "api.WebGLRenderingContext.RGBA4",
        "info": {
          "code": "WebGLRenderingContext.RGBA4"
        },
        "returns": {
          "type": "number",
          "value": 32854
        }
      },
      {
        "context": "api.WebGLRenderingContext.SAMPLE_ALPHA_TO_COVERAGE",
        "info": {
          "code": "WebGLRenderingContext.SAMPLE_ALPHA_TO_COVERAGE"
        },
        "returns": {
          "type": "number",
          "value": 32926
        }
      },
      {
        "context": "api.WebGLRenderingContext.SAMPLE_BUFFERS",
        "info": {
          "code": "WebGLRenderingContext.SAMPLE_BUFFERS"
        },
        "returns": {
          "type": "number",
          "value": 32936
        }
      },
      {
        "context": "api.WebGLRenderingContext.SAMPLE_COVERAGE",
        "info": {
          "code": "WebGLRenderingContext.SAMPLE_COVERAGE"
        },
        "returns": {
          "type": "number",
          "value": 32928
        }
      },
      {
        "context": "api.WebGLRenderingContext.SAMPLE_COVERAGE_INVERT",
        "info": {
          "code": "WebGLRenderingContext.SAMPLE_COVERAGE_INVERT"
        },
        "returns": {
          "type": "number",
          "value": 32939
        }
      },
      {
        "context": "api.WebGLRenderingContext.SAMPLE_COVERAGE_VALUE",
        "info": {
          "code": "WebGLRenderingContext.SAMPLE_COVERAGE_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 32938
        }
      },
      {
        "context": "api.WebGLRenderingContext.sampleCoverage",
        "info": {
          "code": "WebGLRenderingContext.prototype.sampleCoverage"
        },
        "returns": {
          "length": 2,
          "name": "sampleCoverage",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.SAMPLER_2D",
        "info": {
          "code": "WebGLRenderingContext.SAMPLER_2D"
        },
        "returns": {
          "type": "number",
          "value": 35678
        }
      },
      {
        "context": "api.WebGLRenderingContext.SAMPLER_CUBE",
        "info": {
          "code": "WebGLRenderingContext.SAMPLER_CUBE"
        },
        "returns": {
          "type": "number",
          "value": 35680
        }
      },
      {
        "context": "api.WebGLRenderingContext.SAMPLES",
        "info": {
          "code": "WebGLRenderingContext.SAMPLES"
        },
        "returns": {
          "type": "number",
          "value": 32937
        }
      },
      {
        "context": "api.WebGLRenderingContext.scissor",
        "info": {
          "code": "WebGLRenderingContext.prototype.scissor"
        },
        "returns": {
          "length": 4,
          "name": "scissor",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.SCISSOR_BOX",
        "info": {
          "code": "WebGLRenderingContext.SCISSOR_BOX"
        },
        "returns": {
          "type": "number",
          "value": 3088
        }
      },
      {
        "context": "api.WebGLRenderingContext.SCISSOR_TEST",
        "info": {
          "code": "WebGLRenderingContext.SCISSOR_TEST"
        },
        "returns": {
          "type": "number",
          "value": 3089
        }
      },
      {
        "context": "api.WebGLRenderingContext.SHADER_TYPE",
        "info": {
          "code": "WebGLRenderingContext.SHADER_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 35663
        }
      },
      {
        "context": "api.WebGLRenderingContext.shaderSource",
        "info": {
          "code": "WebGLRenderingContext.prototype.shaderSource"
        },
        "returns": {
          "length": 2,
          "name": "shaderSource",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.SHADING_LANGUAGE_VERSION",
        "info": {
          "code": "WebGLRenderingContext.SHADING_LANGUAGE_VERSION"
        },
        "returns": {
          "type": "number",
          "value": 35724
        }
      },
      {
        "context": "api.WebGLRenderingContext.SHORT",
        "info": {
          "code": "WebGLRenderingContext.SHORT"
        },
        "returns": {
          "type": "number",
          "value": 5122
        }
      },
      {
        "context": "api.WebGLRenderingContext.SRC_ALPHA",
        "info": {
          "code": "WebGLRenderingContext.SRC_ALPHA"
        },
        "returns": {
          "type": "number",
          "value": 770
        }
      },
      {
        "context": "api.WebGLRenderingContext.SRC_ALPHA_SATURATE",
        "info": {
          "code": "WebGLRenderingContext.SRC_ALPHA_SATURATE"
        },
        "returns": {
          "type": "number",
          "value": 776
        }
      },
      {
        "context": "api.WebGLRenderingContext.SRC_COLOR",
        "info": {
          "code": "WebGLRenderingContext.SRC_COLOR"
        },
        "returns": {
          "type": "number",
          "value": 768
        }
      },
      {
        "context": "api.WebGLRenderingContext.STATIC_DRAW",
        "info": {
          "code": "WebGLRenderingContext.STATIC_DRAW"
        },
        "returns": {
          "type": "number",
          "value": 35044
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_ATTACHMENT",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_ATTACHMENT"
        },
        "returns": {
          "type": "number",
          "value": 36128
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_BACK_FAIL",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_BACK_FAIL"
        },
        "returns": {
          "type": "number",
          "value": 34817
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_BACK_FUNC",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_BACK_FUNC"
        },
        "returns": {
          "type": "number",
          "value": 34816
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_FAIL",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_FAIL"
        },
        "returns": {
          "type": "number",
          "value": 34818
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_PASS",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_PASS"
        },
        "returns": {
          "type": "number",
          "value": 34819
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_BACK_REF",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_BACK_REF"
        },
        "returns": {
          "type": "number",
          "value": 36003
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_BACK_VALUE_MASK",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_BACK_VALUE_MASK"
        },
        "returns": {
          "type": "number",
          "value": 36004
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_BACK_WRITEMASK",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_BACK_WRITEMASK"
        },
        "returns": {
          "type": "number",
          "value": 36005
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_BITS",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3415
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_BUFFER_BIT",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_BUFFER_BIT"
        },
        "returns": {
          "type": "number",
          "value": 1024
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_CLEAR_VALUE",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_CLEAR_VALUE"
        },
        "returns": {
          "type": "number",
          "value": 2961
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_FAIL",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_FAIL"
        },
        "returns": {
          "type": "number",
          "value": 2964
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_FUNC",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_FUNC"
        },
        "returns": {
          "type": "number",
          "value": 2962
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_INDEX8",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_INDEX8"
        },
        "returns": {
          "type": "number",
          "value": 36168
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_PASS_DEPTH_FAIL",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_PASS_DEPTH_FAIL"
        },
        "returns": {
          "type": "number",
          "value": 2965
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_PASS_DEPTH_PASS",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_PASS_DEPTH_PASS"
        },
        "returns": {
          "type": "number",
          "value": 2966
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_REF",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_REF"
        },
        "returns": {
          "type": "number",
          "value": 2967
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_TEST",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_TEST"
        },
        "returns": {
          "type": "number",
          "value": 2960
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_VALUE_MASK",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_VALUE_MASK"
        },
        "returns": {
          "type": "number",
          "value": 2963
        }
      },
      {
        "context": "api.WebGLRenderingContext.STENCIL_WRITEMASK",
        "info": {
          "code": "WebGLRenderingContext.STENCIL_WRITEMASK"
        },
        "returns": {
          "type": "number",
          "value": 2968
        }
      },
      {
        "context": "api.WebGLRenderingContext.stencilFunc",
        "info": {
          "code": "WebGLRenderingContext.prototype.stencilFunc"
        },
        "returns": {
          "length": 3,
          "name": "stencilFunc",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.stencilFuncSeparate",
        "info": {
          "code": "WebGLRenderingContext.prototype.stencilFuncSeparate"
        },
        "returns": {
          "length": 4,
          "name": "stencilFuncSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.stencilMask",
        "info": {
          "code": "WebGLRenderingContext.prototype.stencilMask"
        },
        "returns": {
          "length": 1,
          "name": "stencilMask",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.stencilMaskSeparate",
        "info": {
          "code": "WebGLRenderingContext.prototype.stencilMaskSeparate"
        },
        "returns": {
          "length": 2,
          "name": "stencilMaskSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.stencilOp",
        "info": {
          "code": "WebGLRenderingContext.prototype.stencilOp"
        },
        "returns": {
          "length": 3,
          "name": "stencilOp",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.stencilOpSeparate",
        "info": {
          "code": "WebGLRenderingContext.prototype.stencilOpSeparate"
        },
        "returns": {
          "length": 4,
          "name": "stencilOpSeparate",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.STREAM_DRAW",
        "info": {
          "code": "WebGLRenderingContext.STREAM_DRAW"
        },
        "returns": {
          "type": "number",
          "value": 35040
        }
      },
      {
        "context": "api.WebGLRenderingContext.SUBPIXEL_BITS",
        "info": {
          "code": "WebGLRenderingContext.SUBPIXEL_BITS"
        },
        "returns": {
          "type": "number",
          "value": 3408
        }
      },
      {
        "context": "api.WebGLRenderingContext.texImage2D",
        "info": {
          "code": "WebGLRenderingContext.prototype.texImage2D"
        },
        "returns": {
          "length": 6,
          "name": "texImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.texImage2D",
        "info": {
          "code": "WebGLRenderingContext.prototype.texImage2D"
        },
        "returns": {
          "length": 6,
          "name": "texImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.texParameterf",
        "info": {
          "code": "WebGLRenderingContext.prototype.texParameterf"
        },
        "returns": {
          "length": 3,
          "name": "texParameterf",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.texParameteri",
        "info": {
          "code": "WebGLRenderingContext.prototype.texParameteri"
        },
        "returns": {
          "length": 3,
          "name": "texParameteri",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.texSubImage2D",
        "info": {
          "code": "WebGLRenderingContext.prototype.texSubImage2D"
        },
        "returns": {
          "length": 7,
          "name": "texSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.texSubImage2D",
        "info": {
          "code": "WebGLRenderingContext.prototype.texSubImage2D"
        },
        "returns": {
          "length": 7,
          "name": "texSubImage2D",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE"
        },
        "returns": {
          "type": "number",
          "value": 5890
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_2D",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_2D"
        },
        "returns": {
          "type": "number",
          "value": 3553
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_BINDING_2D",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_BINDING_2D"
        },
        "returns": {
          "type": "number",
          "value": 32873
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_BINDING_CUBE_MAP",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_BINDING_CUBE_MAP"
        },
        "returns": {
          "type": "number",
          "value": 34068
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_CUBE_MAP",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_CUBE_MAP"
        },
        "returns": {
          "type": "number",
          "value": 34067
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X"
        },
        "returns": {
          "type": "number",
          "value": 34070
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y"
        },
        "returns": {
          "type": "number",
          "value": 34072
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z"
        },
        "returns": {
          "type": "number",
          "value": 34074
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X"
        },
        "returns": {
          "type": "number",
          "value": 34069
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y"
        },
        "returns": {
          "type": "number",
          "value": 34071
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z"
        },
        "returns": {
          "type": "number",
          "value": 34073
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_MAG_FILTER",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_MAG_FILTER"
        },
        "returns": {
          "type": "number",
          "value": 10240
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_MIN_FILTER",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_MIN_FILTER"
        },
        "returns": {
          "type": "number",
          "value": 10241
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_WRAP_S",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_WRAP_S"
        },
        "returns": {
          "type": "number",
          "value": 10242
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE_WRAP_T",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE_WRAP_T"
        },
        "returns": {
          "type": "number",
          "value": 10243
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE0",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE0"
        },
        "returns": {
          "type": "number",
          "value": 33984
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE1",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE1"
        },
        "returns": {
          "type": "number",
          "value": 33985
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE10",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE10"
        },
        "returns": {
          "type": "number",
          "value": 33994
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE11",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE11"
        },
        "returns": {
          "type": "number",
          "value": 33995
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE12",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE12"
        },
        "returns": {
          "type": "number",
          "value": 33996
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE13",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE13"
        },
        "returns": {
          "type": "number",
          "value": 33997
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE14",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE14"
        },
        "returns": {
          "type": "number",
          "value": 33998
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE15",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE15"
        },
        "returns": {
          "type": "number",
          "value": 33999
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE16",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE16"
        },
        "returns": {
          "type": "number",
          "value": 34000
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE17",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE17"
        },
        "returns": {
          "type": "number",
          "value": 34001
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE18",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE18"
        },
        "returns": {
          "type": "number",
          "value": 34002
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE19",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE19"
        },
        "returns": {
          "type": "number",
          "value": 34003
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE2",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE2"
        },
        "returns": {
          "type": "number",
          "value": 33986
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE20",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE20"
        },
        "returns": {
          "type": "number",
          "value": 34004
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE21",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE21"
        },
        "returns": {
          "type": "number",
          "value": 34005
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE22",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE22"
        },
        "returns": {
          "type": "number",
          "value": 34006
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE23",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE23"
        },
        "returns": {
          "type": "number",
          "value": 34007
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE24",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE24"
        },
        "returns": {
          "type": "number",
          "value": 34008
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE25",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE25"
        },
        "returns": {
          "type": "number",
          "value": 34009
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE26",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE26"
        },
        "returns": {
          "type": "number",
          "value": 34010
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE27",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE27"
        },
        "returns": {
          "type": "number",
          "value": 34011
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE28",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE28"
        },
        "returns": {
          "type": "number",
          "value": 34012
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE29",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE29"
        },
        "returns": {
          "type": "number",
          "value": 34013
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE3",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE3"
        },
        "returns": {
          "type": "number",
          "value": 33987
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE30",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE30"
        },
        "returns": {
          "type": "number",
          "value": 34014
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE31",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE31"
        },
        "returns": {
          "type": "number",
          "value": 34015
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE4",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE4"
        },
        "returns": {
          "type": "number",
          "value": 33988
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE5",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE5"
        },
        "returns": {
          "type": "number",
          "value": 33989
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE6",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE6"
        },
        "returns": {
          "type": "number",
          "value": 33990
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE7",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE7"
        },
        "returns": {
          "type": "number",
          "value": 33991
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE8",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE8"
        },
        "returns": {
          "type": "number",
          "value": 33992
        }
      },
      {
        "context": "api.WebGLRenderingContext.TEXTURE9",
        "info": {
          "code": "WebGLRenderingContext.TEXTURE9"
        },
        "returns": {
          "type": "number",
          "value": 33993
        }
      },
      {
        "context": "api.WebGLRenderingContext.TRIANGLE_FAN",
        "info": {
          "code": "WebGLRenderingContext.TRIANGLE_FAN"
        },
        "returns": {
          "type": "number",
          "value": 6
        }
      },
      {
        "context": "api.WebGLRenderingContext.TRIANGLE_STRIP",
        "info": {
          "code": "WebGLRenderingContext.TRIANGLE_STRIP"
        },
        "returns": {
          "type": "number",
          "value": 5
        }
      },
      {
        "context": "api.WebGLRenderingContext.TRIANGLES",
        "info": {
          "code": "WebGLRenderingContext.TRIANGLES"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform1f",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform1f"
        },
        "returns": {
          "length": 2,
          "name": "uniform1f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform1fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform1fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform1fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform1i",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform1i"
        },
        "returns": {
          "length": 2,
          "name": "uniform1i",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform1iv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform1iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform1iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform2f",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform2f"
        },
        "returns": {
          "length": 3,
          "name": "uniform2f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform2fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform2fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform2i",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform2i"
        },
        "returns": {
          "length": 3,
          "name": "uniform2i",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform2iv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform2iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform2iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform3f",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform3f"
        },
        "returns": {
          "length": 4,
          "name": "uniform3f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform3fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform3fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform3i",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform3i"
        },
        "returns": {
          "length": 4,
          "name": "uniform3i",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform3iv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform3iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform3iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform4f",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform4f"
        },
        "returns": {
          "length": 5,
          "name": "uniform4f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform4fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform4fv"
        },
        "returns": {
          "length": 2,
          "name": "uniform4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform4i",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform4i"
        },
        "returns": {
          "length": 5,
          "name": "uniform4i",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniform4iv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniform4iv"
        },
        "returns": {
          "length": 2,
          "name": "uniform4iv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniformMatrix2fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniformMatrix2fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniformMatrix3fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniformMatrix3fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.uniformMatrix4fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.uniformMatrix4fv"
        },
        "returns": {
          "length": 3,
          "name": "uniformMatrix4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNPACK_ALIGNMENT",
        "info": {
          "code": "WebGLRenderingContext.UNPACK_ALIGNMENT"
        },
        "returns": {
          "type": "number",
          "value": 3317
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL",
        "info": {
          "code": "WebGLRenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37443
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL",
        "info": {
          "code": "WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37440
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL",
        "info": {
          "code": "WebGLRenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL"
        },
        "returns": {
          "type": "number",
          "value": 37441
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNSIGNED_BYTE",
        "info": {
          "code": "WebGLRenderingContext.UNSIGNED_BYTE"
        },
        "returns": {
          "type": "number",
          "value": 5121
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNSIGNED_INT",
        "info": {
          "code": "WebGLRenderingContext.UNSIGNED_INT"
        },
        "returns": {
          "type": "number",
          "value": 5125
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNSIGNED_SHORT",
        "info": {
          "code": "WebGLRenderingContext.UNSIGNED_SHORT"
        },
        "returns": {
          "type": "number",
          "value": 5123
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4",
        "info": {
          "code": "WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4"
        },
        "returns": {
          "type": "number",
          "value": 32819
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1",
        "info": {
          "code": "WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1"
        },
        "returns": {
          "type": "number",
          "value": 32820
        }
      },
      {
        "context": "api.WebGLRenderingContext.UNSIGNED_SHORT_5_6_5",
        "info": {
          "code": "WebGLRenderingContext.UNSIGNED_SHORT_5_6_5"
        },
        "returns": {
          "type": "number",
          "value": 33635
        }
      },
      {
        "context": "api.WebGLRenderingContext.useProgram",
        "info": {
          "code": "WebGLRenderingContext.prototype.useProgram"
        },
        "returns": {
          "length": 1,
          "name": "useProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.VALIDATE_STATUS",
        "info": {
          "code": "WebGLRenderingContext.VALIDATE_STATUS"
        },
        "returns": {
          "type": "number",
          "value": 35715
        }
      },
      {
        "context": "api.WebGLRenderingContext.validateProgram",
        "info": {
          "code": "WebGLRenderingContext.prototype.validateProgram"
        },
        "returns": {
          "length": 1,
          "name": "validateProgram",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.VENDOR",
        "info": {
          "code": "WebGLRenderingContext.VENDOR"
        },
        "returns": {
          "type": "number",
          "value": 7936
        }
      },
      {
        "context": "api.WebGLRenderingContext.VERSION",
        "info": {
          "code": "WebGLRenderingContext.VERSION"
        },
        "returns": {
          "type": "number",
          "value": 7938
        }
      },
      {
        "context": "api.WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
        "info": {
          "code": "WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"
        },
        "returns": {
          "type": "number",
          "value": 34975
        }
      },
      {
        "context": "api.WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_ENABLED",
        "info": {
          "code": "WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_ENABLED"
        },
        "returns": {
          "type": "number",
          "value": 34338
        }
      },
      {
        "context": "api.WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_NORMALIZED",
        "info": {
          "code": "WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_NORMALIZED"
        },
        "returns": {
          "type": "number",
          "value": 34922
        }
      },
      {
        "context": "api.WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_POINTER",
        "info": {
          "code": "WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_POINTER"
        },
        "returns": {
          "type": "number",
          "value": 34373
        }
      },
      {
        "context": "api.WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_SIZE",
        "info": {
          "code": "WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_SIZE"
        },
        "returns": {
          "type": "number",
          "value": 34339
        }
      },
      {
        "context": "api.WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_STRIDE",
        "info": {
          "code": "WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_STRIDE"
        },
        "returns": {
          "type": "number",
          "value": 34340
        }
      },
      {
        "context": "api.WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_TYPE",
        "info": {
          "code": "WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_TYPE"
        },
        "returns": {
          "type": "number",
          "value": 34341
        }
      },
      {
        "context": "api.WebGLRenderingContext.VERTEX_SHADER",
        "info": {
          "code": "WebGLRenderingContext.VERTEX_SHADER"
        },
        "returns": {
          "type": "number",
          "value": 35633
        }
      },
      {
        "context": "api.WebGLRenderingContext.vertexAttrib1f",
        "info": {
          "code": "WebGLRenderingContext.prototype.vertexAttrib1f"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib1f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.vertexAttrib1fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.vertexAttrib1fv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib1fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.vertexAttrib2f",
        "info": {
          "code": "WebGLRenderingContext.prototype.vertexAttrib2f"
        },
        "returns": {
          "length": 3,
          "name": "vertexAttrib2f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.vertexAttrib2fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.vertexAttrib2fv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib2fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.vertexAttrib3f",
        "info": {
          "code": "WebGLRenderingContext.prototype.vertexAttrib3f"
        },
        "returns": {
          "length": 4,
          "name": "vertexAttrib3f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.vertexAttrib3fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.vertexAttrib3fv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib3fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.vertexAttrib4f",
        "info": {
          "code": "WebGLRenderingContext.prototype.vertexAttrib4f"
        },
        "returns": {
          "length": 5,
          "name": "vertexAttrib4f",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.vertexAttrib4fv",
        "info": {
          "code": "WebGLRenderingContext.prototype.vertexAttrib4fv"
        },
        "returns": {
          "length": 2,
          "name": "vertexAttrib4fv",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.vertexAttribPointer",
        "info": {
          "code": "WebGLRenderingContext.prototype.vertexAttribPointer"
        },
        "returns": {
          "length": 6,
          "name": "vertexAttribPointer",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.viewport",
        "info": {
          "code": "WebGLRenderingContext.prototype.viewport"
        },
        "returns": {
          "length": 4,
          "name": "viewport",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLRenderingContext.VIEWPORT",
        "info": {
          "code": "WebGLRenderingContext.VIEWPORT"
        },
        "returns": {
          "type": "number",
          "value": 2978
        }
      },
      {
        "context": "api.WebGLRenderingContext.ZERO",
        "info": {
          "code": "WebGLRenderingContext.ZERO"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.WebGLSampler",
        "info": {
          "code": "self.WebGLSampler"
        },
        "returns": {
          "length": 0,
          "name": "WebGLSampler",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLShader",
        "info": {
          "code": "self.WebGLShader"
        },
        "returns": {
          "length": 0,
          "name": "WebGLShader",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLShaderPrecisionFormat",
        "info": {
          "code": "self.WebGLShaderPrecisionFormat"
        },
        "returns": {
          "length": 0,
          "name": "WebGLShaderPrecisionFormat",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLShaderPrecisionFormat.precision",
        "info": {
          "code": "'precision' in WebGLShaderPrecisionFormat.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLShaderPrecisionFormat.rangeMax",
        "info": {
          "code": "'rangeMax' in WebGLShaderPrecisionFormat.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLShaderPrecisionFormat.rangeMin",
        "info": {
          "code": "'rangeMin' in WebGLShaderPrecisionFormat.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebGLSync",
        "info": {
          "code": "self.WebGLSync"
        },
        "returns": {
          "length": 0,
          "name": "WebGLSync",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLTexture",
        "info": {
          "code": "self.WebGLTexture"
        },
        "returns": {
          "length": 0,
          "name": "WebGLTexture",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLTransformFeedback",
        "info": {
          "code": "self.WebGLTransformFeedback"
        },
        "returns": {
          "length": 0,
          "name": "WebGLTransformFeedback",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLUniformLocation",
        "info": {
          "code": "self.WebGLUniformLocation"
        },
        "returns": {
          "length": 0,
          "name": "WebGLUniformLocation",
          "type": "function"
        }
      },
      {
        "context": "api.WebGLVertexArrayObject",
        "info": {
          "code": "self.WebGLVertexArrayObject"
        },
        "returns": {
          "length": 0,
          "name": "WebGLVertexArrayObject",
          "type": "function"
        }
      },
      {
        "context": "api.WebSocket",
        "info": {
          "code": "self.WebSocket"
        },
        "returns": {
          "length": 1,
          "name": "WebSocket",
          "type": "function"
        }
      },
      {
        "context": "api.WebSocket.binaryType",
        "info": {
          "code": "'binaryType' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebSocket.bufferedAmount",
        "info": {
          "code": "'bufferedAmount' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebSocket.close",
        "info": {
          "code": "WebSocket.prototype.close"
        },
        "returns": {
          "length": 0,
          "name": "close",
          "type": "function"
        }
      },
      {
        "context": "api.WebSocket.CLOSED",
        "info": {
          "code": "WebSocket.CLOSED"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.WebSocket.CLOSING",
        "info": {
          "code": "WebSocket.CLOSING"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.WebSocket.CONNECTING",
        "info": {
          "code": "WebSocket.CONNECTING"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.WebSocket.extensions",
        "info": {
          "code": "'extensions' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebSocket.onclose",
        "info": {
          "code": "'onclose' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebSocket.onerror",
        "info": {
          "code": "'onerror' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebSocket.onmessage",
        "info": {
          "code": "'onmessage' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebSocket.onopen",
        "info": {
          "code": "'onopen' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebSocket.OPEN",
        "info": {
          "code": "WebSocket.OPEN"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.WebSocket.protocol",
        "info": {
          "code": "'protocol' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebSocket.readyState",
        "info": {
          "code": "'readyState' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WebSocket.send",
        "info": {
          "code": "WebSocket.prototype.send"
        },
        "returns": {
          "length": 1,
          "name": "send",
          "type": "function"
        }
      },
      {
        "context": "api.WebSocket.send",
        "info": {
          "code": "WebSocket.prototype.send"
        },
        "returns": {
          "length": 1,
          "name": "send",
          "type": "function"
        }
      },
      {
        "context": "api.WebSocket.send",
        "info": {
          "code": "WebSocket.prototype.send"
        },
        "returns": {
          "length": 1,
          "name": "send",
          "type": "function"
        }
      },
      {
        "context": "api.WebSocket.send",
        "info": {
          "code": "WebSocket.prototype.send"
        },
        "returns": {
          "length": 1,
          "name": "send",
          "type": "function"
        }
      },
      {
        "context": "api.WebSocket.url",
        "info": {
          "code": "'url' in WebSocket.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WheelEvent",
        "info": {
          "code": "self.WheelEvent"
        },
        "returns": {
          "length": 1,
          "name": "WheelEvent",
          "type": "function"
        }
      },
      {
        "context": "api.WheelEvent.deltaMode",
        "info": {
          "code": "'deltaMode' in WheelEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WheelEvent.deltaX",
        "info": {
          "code": "'deltaX' in WheelEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WheelEvent.deltaY",
        "info": {
          "code": "'deltaY' in WheelEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WheelEvent.deltaZ",
        "info": {
          "code": "'deltaZ' in WheelEvent.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.WheelEvent.DOM_DELTA_LINE",
        "info": {
          "code": "WheelEvent.DOM_DELTA_LINE"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.WheelEvent.DOM_DELTA_PAGE",
        "info": {
          "code": "WheelEvent.DOM_DELTA_PAGE"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.WheelEvent.DOM_DELTA_PIXEL",
        "info": {
          "code": "WheelEvent.DOM_DELTA_PIXEL"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.Window",
        "info": {
          "code": "self.Window"
        },
        "returns": {
          "length": 0,
          "name": "Window",
          "type": "function"
        }
      },
      {
        "context": "api.Window.alert",
        "info": {
          "code": "Window.prototype.alert"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.alert",
        "info": {
          "code": "Window.prototype.alert"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.applicationCache",
        "info": {
          "code": "'applicationCache' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.atob",
        "info": {
          "code": "Window.prototype.atob"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.blur",
        "info": {
          "code": "Window.prototype.blur"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.btoa",
        "info": {
          "code": "Window.prototype.btoa"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.caches",
        "info": {
          "code": "'caches' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.cancelAnimationFrame",
        "info": {
          "code": "Window.prototype.cancelAnimationFrame"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.cancelIdleCallback",
        "info": {
          "code": "Window.prototype.cancelIdleCallback"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.captureEvents",
        "info": {
          "code": "Window.prototype.captureEvents"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.clearInterval",
        "info": {
          "code": "Window.prototype.clearInterval"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.clearTimeout",
        "info": {
          "code": "Window.prototype.clearTimeout"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.close",
        "info": {
          "code": "Window.prototype.close"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.closed",
        "info": {
          "code": "'closed' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.confirm",
        "info": {
          "code": "Window.prototype.confirm"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.cookieStore",
        "info": {
          "code": "'cookieStore' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.createImageBitmap",
        "info": {
          "code": "Window.prototype.createImageBitmap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.createImageBitmap",
        "info": {
          "code": "Window.prototype.createImageBitmap"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.crypto",
        "info": {
          "code": "'crypto' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.customElements",
        "info": {
          "code": "'customElements' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.devicePixelRatio",
        "info": {
          "code": "'devicePixelRatio' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.document",
        "info": {
          "code": "'document' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.event",
        "info": {
          "code": "'event' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.external",
        "info": {
          "code": "'external' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.fetch",
        "info": {
          "code": "Window.prototype.fetch"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.focus",
        "info": {
          "code": "Window.prototype.focus"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.frameElement",
        "info": {
          "code": "'frameElement' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.frames",
        "info": {
          "code": "'frames' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.getComputedStyle",
        "info": {
          "code": "Window.prototype.getComputedStyle"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.getPseudoElements",
        "info": {
          "code": "Window.prototype.getPseudoElements"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.getSelection",
        "info": {
          "code": "Window.prototype.getSelection"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.history",
        "info": {
          "code": "'history' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.indexedDB",
        "info": {
          "code": "'indexedDB' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.innerHeight",
        "info": {
          "code": "'innerHeight' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.innerWidth",
        "info": {
          "code": "'innerWidth' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.isSecureContext",
        "info": {
          "code": "'isSecureContext' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.length",
        "info": {
          "code": "'length' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.localStorage",
        "info": {
          "code": "'localStorage' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.location",
        "info": {
          "code": "'location' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.locationbar",
        "info": {
          "code": "'locationbar' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.matchMedia",
        "info": {
          "code": "Window.prototype.matchMedia"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.menubar",
        "info": {
          "code": "'menubar' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.moveBy",
        "info": {
          "code": "Window.prototype.moveBy"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.moveTo",
        "info": {
          "code": "Window.prototype.moveTo"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.name",
        "info": {
          "code": "'name' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.navigator",
        "info": {
          "code": "'navigator' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onabort",
        "info": {
          "code": "'onabort' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onafterprint",
        "info": {
          "code": "'onafterprint' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onanimationcancel",
        "info": {
          "code": "'onanimationcancel' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onanimationend",
        "info": {
          "code": "'onanimationend' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onanimationiteration",
        "info": {
          "code": "'onanimationiteration' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onanimationstart",
        "info": {
          "code": "'onanimationstart' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onappinstalled",
        "info": {
          "code": "'onappinstalled' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onauxclick",
        "info": {
          "code": "'onauxclick' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onbeforeinstallprompt",
        "info": {
          "code": "'onbeforeinstallprompt' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onbeforeprint",
        "info": {
          "code": "'onbeforeprint' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onbeforeunload",
        "info": {
          "code": "'onbeforeunload' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onblur",
        "info": {
          "code": "'onblur' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.oncancel",
        "info": {
          "code": "'oncancel' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.oncanplay",
        "info": {
          "code": "'oncanplay' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.oncanplaythrough",
        "info": {
          "code": "'oncanplaythrough' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onchange",
        "info": {
          "code": "'onchange' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onclick",
        "info": {
          "code": "'onclick' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onclose",
        "info": {
          "code": "'onclose' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.oncontextmenu",
        "info": {
          "code": "'oncontextmenu' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.oncuechange",
        "info": {
          "code": "'oncuechange' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondblclick",
        "info": {
          "code": "'ondblclick' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondevicemotion",
        "info": {
          "code": "'ondevicemotion' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondeviceorientation",
        "info": {
          "code": "'ondeviceorientation' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondrag",
        "info": {
          "code": "'ondrag' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondragend",
        "info": {
          "code": "'ondragend' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondragenter",
        "info": {
          "code": "'ondragenter' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondragexit",
        "info": {
          "code": "'ondragexit' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondragleave",
        "info": {
          "code": "'ondragleave' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondragover",
        "info": {
          "code": "'ondragover' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondragstart",
        "info": {
          "code": "'ondragstart' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondrop",
        "info": {
          "code": "'ondrop' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ondurationchange",
        "info": {
          "code": "'ondurationchange' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onemptied",
        "info": {
          "code": "'onemptied' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onended",
        "info": {
          "code": "'onended' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onerror",
        "info": {
          "code": "'onerror' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onfocus",
        "info": {
          "code": "'onfocus' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onformdata",
        "info": {
          "code": "'onformdata' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ongotpointercapture",
        "info": {
          "code": "'ongotpointercapture' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onhashchange",
        "info": {
          "code": "'onhashchange' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.oninput",
        "info": {
          "code": "'oninput' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.oninvalid",
        "info": {
          "code": "'oninvalid' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onkeydown",
        "info": {
          "code": "'onkeydown' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onkeypress",
        "info": {
          "code": "'onkeypress' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onkeyup",
        "info": {
          "code": "'onkeyup' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onlanguagechange",
        "info": {
          "code": "'onlanguagechange' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onload",
        "info": {
          "code": "'onload' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onloadeddata",
        "info": {
          "code": "'onloadeddata' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onloadedmetadata",
        "info": {
          "code": "'onloadedmetadata' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onloadend",
        "info": {
          "code": "'onloadend' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onloadstart",
        "info": {
          "code": "'onloadstart' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onlostpointercapture",
        "info": {
          "code": "'onlostpointercapture' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onmessage",
        "info": {
          "code": "'onmessage' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onmessageerror",
        "info": {
          "code": "'onmessageerror' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onmousedown",
        "info": {
          "code": "'onmousedown' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onmouseenter",
        "info": {
          "code": "'onmouseenter' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onmouseleave",
        "info": {
          "code": "'onmouseleave' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onmousemove",
        "info": {
          "code": "'onmousemove' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onmouseout",
        "info": {
          "code": "'onmouseout' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onmouseover",
        "info": {
          "code": "'onmouseover' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onmouseup",
        "info": {
          "code": "'onmouseup' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onoffline",
        "info": {
          "code": "'onoffline' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ononline",
        "info": {
          "code": "'ononline' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onorientationchange",
        "info": {
          "code": "'onorientationchange' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpagehide",
        "info": {
          "code": "'onpagehide' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpageshow",
        "info": {
          "code": "'onpageshow' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpause",
        "info": {
          "code": "'onpause' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onplay",
        "info": {
          "code": "'onplay' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onplaying",
        "info": {
          "code": "'onplaying' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpointercancel",
        "info": {
          "code": "'onpointercancel' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpointerdown",
        "info": {
          "code": "'onpointerdown' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpointerenter",
        "info": {
          "code": "'onpointerenter' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpointerleave",
        "info": {
          "code": "'onpointerleave' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpointermove",
        "info": {
          "code": "'onpointermove' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpointerout",
        "info": {
          "code": "'onpointerout' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpointerover",
        "info": {
          "code": "'onpointerover' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpointerup",
        "info": {
          "code": "'onpointerup' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onpopstate",
        "info": {
          "code": "'onpopstate' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onprogress",
        "info": {
          "code": "'onprogress' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onratechange",
        "info": {
          "code": "'onratechange' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onrejectionhandled",
        "info": {
          "code": "'onrejectionhandled' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onreset",
        "info": {
          "code": "'onreset' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onresize",
        "info": {
          "code": "'onresize' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onscroll",
        "info": {
          "code": "'onscroll' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onsecuritypolicyviolation",
        "info": {
          "code": "'onsecuritypolicyviolation' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onseeked",
        "info": {
          "code": "'onseeked' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onseeking",
        "info": {
          "code": "'onseeking' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onselect",
        "info": {
          "code": "'onselect' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onselectionchange",
        "info": {
          "code": "'onselectionchange' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onselectstart",
        "info": {
          "code": "'onselectstart' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onstalled",
        "info": {
          "code": "'onstalled' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onstorage",
        "info": {
          "code": "'onstorage' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onsubmit",
        "info": {
          "code": "'onsubmit' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onsuspend",
        "info": {
          "code": "'onsuspend' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontimeupdate",
        "info": {
          "code": "'ontimeupdate' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontoggle",
        "info": {
          "code": "'ontoggle' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontouchcancel",
        "info": {
          "code": "'ontouchcancel' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontouchend",
        "info": {
          "code": "'ontouchend' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontouchmove",
        "info": {
          "code": "'ontouchmove' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontouchstart",
        "info": {
          "code": "'ontouchstart' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontransitioncancel",
        "info": {
          "code": "'ontransitioncancel' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontransitionend",
        "info": {
          "code": "'ontransitionend' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontransitionrun",
        "info": {
          "code": "'ontransitionrun' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.ontransitionstart",
        "info": {
          "code": "'ontransitionstart' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onunhandledrejection",
        "info": {
          "code": "'onunhandledrejection' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onunload",
        "info": {
          "code": "'onunload' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onvolumechange",
        "info": {
          "code": "'onvolumechange' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onwaiting",
        "info": {
          "code": "'onwaiting' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.onwheel",
        "info": {
          "code": "'onwheel' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.open",
        "info": {
          "code": "Window.prototype.open"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.opener",
        "info": {
          "code": "'opener' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.orientation",
        "info": {
          "code": "'orientation' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.origin",
        "info": {
          "code": "'origin' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.outerHeight",
        "info": {
          "code": "'outerHeight' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.outerWidth",
        "info": {
          "code": "'outerWidth' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.pageXOffset",
        "info": {
          "code": "'pageXOffset' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.pageYOffset",
        "info": {
          "code": "'pageYOffset' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.parent",
        "info": {
          "code": "'parent' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.performance",
        "info": {
          "code": "'performance' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.personalbar",
        "info": {
          "code": "'personalbar' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.postMessage",
        "info": {
          "code": "Window.prototype.postMessage"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.postMessage",
        "info": {
          "code": "Window.prototype.postMessage"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.print",
        "info": {
          "code": "Window.prototype.print"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.prompt",
        "info": {
          "code": "Window.prototype.prompt"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.queueMicrotask",
        "info": {
          "code": "Window.prototype.queueMicrotask"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.releaseEvents",
        "info": {
          "code": "Window.prototype.releaseEvents"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.requestAnimationFrame",
        "info": {
          "code": "Window.prototype.requestAnimationFrame"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.requestIdleCallback",
        "info": {
          "code": "Window.prototype.requestIdleCallback"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.resizeBy",
        "info": {
          "code": "Window.prototype.resizeBy"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.resizeTo",
        "info": {
          "code": "Window.prototype.resizeTo"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.screen",
        "info": {
          "code": "'screen' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.screenLeft",
        "info": {
          "code": "'screenLeft' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.screenTop",
        "info": {
          "code": "'screenTop' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.screenX",
        "info": {
          "code": "'screenX' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.screenY",
        "info": {
          "code": "'screenY' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.scroll",
        "info": {
          "code": "Window.prototype.scroll"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.scroll",
        "info": {
          "code": "Window.prototype.scroll"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.scrollbars",
        "info": {
          "code": "'scrollbars' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.scrollBy",
        "info": {
          "code": "Window.prototype.scrollBy"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.scrollBy",
        "info": {
          "code": "Window.prototype.scrollBy"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.scrollTo",
        "info": {
          "code": "Window.prototype.scrollTo"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.scrollTo",
        "info": {
          "code": "Window.prototype.scrollTo"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.scrollX",
        "info": {
          "code": "'scrollX' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.scrollY",
        "info": {
          "code": "'scrollY' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.self",
        "info": {
          "code": "'self' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.sessionStorage",
        "info": {
          "code": "'sessionStorage' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.setInterval",
        "info": {
          "code": "Window.prototype.setInterval"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.setTimeout",
        "info": {
          "code": "Window.prototype.setTimeout"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.speechSynthesis",
        "info": {
          "code": "'speechSynthesis' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.status",
        "info": {
          "code": "'status' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.statusbar",
        "info": {
          "code": "'statusbar' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.stop",
        "info": {
          "code": "Window.prototype.stop"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Window.toolbar",
        "info": {
          "code": "'toolbar' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.top",
        "info": {
          "code": "'top' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.Window.window",
        "info": {
          "code": "'window' in Window.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "api.WindowClient",
        "info": {
          "code": "self.WindowClient"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WindowClient.ancestorOrigins",
        "info": {
          "code": "'ancestorOrigins' in WindowClient.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WindowClient.focus",
        "info": {
          "code": "WindowClient.prototype.focus"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WindowClient.focused",
        "info": {
          "code": "'focused' in WindowClient.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WindowClient.navigate",
        "info": {
          "code": "WindowClient.prototype.navigate"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WindowClient.visibilityState",
        "info": {
          "code": "'visibilityState' in WindowClient.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Worker",
        "info": {
          "code": "self.Worker"
        },
        "returns": {
          "length": 1,
          "name": "Worker",
          "type": "function"
        }
      },
      {
        "context": "api.Worker.onerror",
        "info": {
          "code": "'onerror' in Worker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Worker.onmessage",
        "info": {
          "code": "'onmessage' in Worker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Worker.onmessageerror",
        "info": {
          "code": "'onmessageerror' in Worker.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.Worker.postMessage",
        "info": {
          "code": "Worker.prototype.postMessage"
        },
        "returns": {
          "length": 1,
          "name": "postMessage",
          "type": "function"
        }
      },
      {
        "context": "api.Worker.postMessage",
        "info": {
          "code": "Worker.prototype.postMessage"
        },
        "returns": {
          "length": 1,
          "name": "postMessage",
          "type": "function"
        }
      },
      {
        "context": "api.Worker.terminate",
        "info": {
          "code": "Worker.prototype.terminate"
        },
        "returns": {
          "length": 0,
          "name": "terminate",
          "type": "function"
        }
      },
      {
        "context": "api.WorkerGlobalScope",
        "info": {
          "code": "self.WorkerGlobalScope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WorkerGlobalScope.addressSpace",
        "info": {
          "code": "'addressSpace' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.atob",
        "info": {
          "code": "WorkerGlobalScope.prototype.atob"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.btoa",
        "info": {
          "code": "WorkerGlobalScope.prototype.btoa"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.caches",
        "info": {
          "code": "'caches' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.clearInterval",
        "info": {
          "code": "WorkerGlobalScope.prototype.clearInterval"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.clearTimeout",
        "info": {
          "code": "WorkerGlobalScope.prototype.clearTimeout"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.createImageBitmap",
        "info": {
          "code": "WorkerGlobalScope.prototype.createImageBitmap"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.createImageBitmap",
        "info": {
          "code": "WorkerGlobalScope.prototype.createImageBitmap"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.crypto",
        "info": {
          "code": "'crypto' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.fetch",
        "info": {
          "code": "WorkerGlobalScope.prototype.fetch"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.fonts",
        "info": {
          "code": "'fonts' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.importScripts",
        "info": {
          "code": "WorkerGlobalScope.prototype.importScripts"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.indexedDB",
        "info": {
          "code": "'indexedDB' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.isSecureContext",
        "info": {
          "code": "'isSecureContext' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.location",
        "info": {
          "code": "'location' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.navigator",
        "info": {
          "code": "'navigator' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.onerror",
        "info": {
          "code": "'onerror' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.onlanguagechange",
        "info": {
          "code": "'onlanguagechange' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.onoffline",
        "info": {
          "code": "'onoffline' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.ononline",
        "info": {
          "code": "'ononline' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.onrejectionhandled",
        "info": {
          "code": "'onrejectionhandled' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.onunhandledrejection",
        "info": {
          "code": "'onunhandledrejection' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.origin",
        "info": {
          "code": "'origin' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.performance",
        "info": {
          "code": "'performance' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.queueMicrotask",
        "info": {
          "code": "WorkerGlobalScope.prototype.queueMicrotask"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.self",
        "info": {
          "code": "'self' in WorkerGlobalScope.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.setInterval",
        "info": {
          "code": "WorkerGlobalScope.prototype.setInterval"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerGlobalScope.setTimeout",
        "info": {
          "code": "WorkerGlobalScope.prototype.setTimeout"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerLocation",
        "info": {
          "code": "self.WorkerLocation"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WorkerLocation.hash",
        "info": {
          "code": "'hash' in WorkerLocation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerLocation.host",
        "info": {
          "code": "'host' in WorkerLocation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerLocation.hostname",
        "info": {
          "code": "'hostname' in WorkerLocation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerLocation.href",
        "info": {
          "code": "'href' in WorkerLocation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerLocation.origin",
        "info": {
          "code": "'origin' in WorkerLocation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerLocation.pathname",
        "info": {
          "code": "'pathname' in WorkerLocation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerLocation.port",
        "info": {
          "code": "'port' in WorkerLocation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerLocation.protocol",
        "info": {
          "code": "'protocol' in WorkerLocation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerLocation.search",
        "info": {
          "code": "'search' in WorkerLocation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator",
        "info": {
          "code": "self.WorkerNavigator"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WorkerNavigator.appCodeName",
        "info": {
          "code": "'appCodeName' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.appName",
        "info": {
          "code": "'appName' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.appVersion",
        "info": {
          "code": "'appVersion' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.connection",
        "info": {
          "code": "'connection' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.hardwareConcurrency",
        "info": {
          "code": "'hardwareConcurrency' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.language",
        "info": {
          "code": "'language' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.languages",
        "info": {
          "code": "'languages' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.mediaCapabilities",
        "info": {
          "code": "'mediaCapabilities' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.onLine",
        "info": {
          "code": "'onLine' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.oscpu",
        "info": {
          "code": "'oscpu' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.permissions",
        "info": {
          "code": "'permissions' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.platform",
        "info": {
          "code": "'platform' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.product",
        "info": {
          "code": "'product' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.productSub",
        "info": {
          "code": "'productSub' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.serviceWorker",
        "info": {
          "code": "'serviceWorker' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.storage",
        "info": {
          "code": "'storage' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.taintEnabled",
        "info": {
          "code": "WorkerNavigator.prototype.taintEnabled"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.usb",
        "info": {
          "code": "'usb' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.userAgent",
        "info": {
          "code": "'userAgent' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.vendor",
        "info": {
          "code": "'vendor' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkerNavigator.vendorSub",
        "info": {
          "code": "'vendorSub' in WorkerNavigator.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.Worklet",
        "info": {
          "code": "self.Worklet"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.Worklet.addModule",
        "info": {
          "code": "Worklet.prototype.addModule"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkletAnimation",
        "info": {
          "code": "self.WorkletAnimation"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WorkletAnimation.animatorName",
        "info": {
          "code": "'animatorName' in WorkletAnimation.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.WorkletGlobalScope",
        "info": {
          "code": "self.WorkletGlobalScope"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WorkletGroupEffect",
        "info": {
          "code": "self.WorkletGroupEffect"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.WorkletGroupEffect.getChildren",
        "info": {
          "code": "WorkletGroupEffect.prototype.getChildren"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XMLDocument",
        "info": {
          "code": "self.XMLDocument"
        },
        "returns": {
          "length": 0,
          "name": "XMLDocument",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest",
        "info": {
          "code": "self.XMLHttpRequest"
        },
        "returns": {
          "length": 0,
          "name": "XMLHttpRequest",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest.abort",
        "info": {
          "code": "XMLHttpRequest.prototype.abort"
        },
        "returns": {
          "length": 0,
          "name": "abort",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest.DONE",
        "info": {
          "code": "XMLHttpRequest.DONE"
        },
        "returns": {
          "type": "number",
          "value": 4
        }
      },
      {
        "context": "api.XMLHttpRequest.getAllResponseHeaders",
        "info": {
          "code": "XMLHttpRequest.prototype.getAllResponseHeaders"
        },
        "returns": {
          "length": 0,
          "name": "getAllResponseHeaders",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest.getResponseHeader",
        "info": {
          "code": "XMLHttpRequest.prototype.getResponseHeader"
        },
        "returns": {
          "length": 1,
          "name": "getResponseHeader",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest.HEADERS_RECEIVED",
        "info": {
          "code": "XMLHttpRequest.HEADERS_RECEIVED"
        },
        "returns": {
          "type": "number",
          "value": 2
        }
      },
      {
        "context": "api.XMLHttpRequest.LOADING",
        "info": {
          "code": "XMLHttpRequest.LOADING"
        },
        "returns": {
          "type": "number",
          "value": 3
        }
      },
      {
        "context": "api.XMLHttpRequest.onreadystatechange",
        "info": {
          "code": "'onreadystatechange' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.open",
        "info": {
          "code": "XMLHttpRequest.prototype.open"
        },
        "returns": {
          "length": 2,
          "name": "open",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest.open",
        "info": {
          "code": "XMLHttpRequest.prototype.open"
        },
        "returns": {
          "length": 2,
          "name": "open",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest.OPENED",
        "info": {
          "code": "XMLHttpRequest.OPENED"
        },
        "returns": {
          "type": "number",
          "value": 1
        }
      },
      {
        "context": "api.XMLHttpRequest.overrideMimeType",
        "info": {
          "code": "XMLHttpRequest.prototype.overrideMimeType"
        },
        "returns": {
          "length": 1,
          "name": "overrideMimeType",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest.readyState",
        "info": {
          "code": "'readyState' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.response",
        "info": {
          "code": "'response' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.responseText",
        "info": {
          "code": "'responseText' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.responseType",
        "info": {
          "code": "'responseType' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.responseURL",
        "info": {
          "code": "'responseURL' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.responseXML",
        "info": {
          "code": "'responseXML' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.send",
        "info": {
          "code": "XMLHttpRequest.prototype.send"
        },
        "returns": {
          "length": 0,
          "name": "send",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest.setRequestHeader",
        "info": {
          "code": "XMLHttpRequest.prototype.setRequestHeader"
        },
        "returns": {
          "length": 2,
          "name": "setRequestHeader",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequest.status",
        "info": {
          "code": "'status' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.statusText",
        "info": {
          "code": "'statusText' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.timeout",
        "info": {
          "code": "'timeout' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.UNSENT",
        "info": {
          "code": "XMLHttpRequest.UNSENT"
        },
        "returns": {
          "type": "number",
          "value": 0
        }
      },
      {
        "context": "api.XMLHttpRequest.upload",
        "info": {
          "code": "'upload' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequest.withCredentials",
        "info": {
          "code": "'withCredentials' in XMLHttpRequest.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequestEventTarget",
        "info": {
          "code": "self.XMLHttpRequestEventTarget"
        },
        "returns": {
          "length": 0,
          "name": "XMLHttpRequestEventTarget",
          "type": "function"
        }
      },
      {
        "context": "api.XMLHttpRequestEventTarget.onabort",
        "info": {
          "code": "'onabort' in XMLHttpRequestEventTarget.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequestEventTarget.onerror",
        "info": {
          "code": "'onerror' in XMLHttpRequestEventTarget.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequestEventTarget.onload",
        "info": {
          "code": "'onload' in XMLHttpRequestEventTarget.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequestEventTarget.onloadend",
        "info": {
          "code": "'onloadend' in XMLHttpRequestEventTarget.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequestEventTarget.onloadstart",
        "info": {
          "code": "'onloadstart' in XMLHttpRequestEventTarget.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequestEventTarget.onprogress",
        "info": {
          "code": "'onprogress' in XMLHttpRequestEventTarget.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequestEventTarget.ontimeout",
        "info": {
          "code": "'ontimeout' in XMLHttpRequestEventTarget.prototype"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "api.XMLHttpRequestUpload",
        "info": {
          "code": "self.XMLHttpRequestUpload"
        },
        "returns": {
          "length": 0,
          "name": "XMLHttpRequestUpload",
          "type": "function"
        }
      },
      {
        "context": "api.XMLSerializer",
        "info": {
          "code": "self.XMLSerializer"
        },
        "returns": {
          "length": 0,
          "name": "XMLSerializer",
          "type": "function"
        }
      },
      {
        "context": "api.XMLSerializer.serializeToString",
        "info": {
          "code": "XMLSerializer.prototype.serializeToString"
        },
        "returns": {
          "length": 1,
          "name": "serializeToString",
          "type": "function"
        }
      },
      {
        "context": "api.XR",
        "info": {
          "code": "self.XR"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XR.ondevicechange",
        "info": {
          "code": "'ondevicechange' in XR.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XR.requestSession",
        "info": {
          "code": "XR.prototype.requestSession"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XR.supportsSessionMode",
        "info": {
          "code": "XR.prototype.supportsSessionMode"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRBoundedReferenceSpace",
        "info": {
          "code": "self.XRBoundedReferenceSpace"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRBoundedReferenceSpace.boundsGeometry",
        "info": {
          "code": "'boundsGeometry' in XRBoundedReferenceSpace.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRFrame",
        "info": {
          "code": "self.XRFrame"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRFrame.getPose",
        "info": {
          "code": "XRFrame.prototype.getPose"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRFrame.getViewerPose",
        "info": {
          "code": "XRFrame.prototype.getViewerPose"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRFrame.session",
        "info": {
          "code": "'session' in XRFrame.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRInputSource",
        "info": {
          "code": "self.XRInputSource"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRInputSource.gripSpace",
        "info": {
          "code": "'gripSpace' in XRInputSource.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRInputSource.handedness",
        "info": {
          "code": "'handedness' in XRInputSource.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRInputSource.targetRayMode",
        "info": {
          "code": "'targetRayMode' in XRInputSource.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRInputSource.targetRaySpace",
        "info": {
          "code": "'targetRaySpace' in XRInputSource.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRInputSourceEvent",
        "info": {
          "code": "self.XRInputSourceEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRInputSourceEvent.frame",
        "info": {
          "code": "'frame' in XRInputSourceEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRInputSourceEvent.inputSource",
        "info": {
          "code": "'inputSource' in XRInputSourceEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRLayer",
        "info": {
          "code": "self.XRLayer"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRPose",
        "info": {
          "code": "self.XRPose"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRPose.emulatedPosition",
        "info": {
          "code": "'emulatedPosition' in XRPose.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRPose.transform",
        "info": {
          "code": "'transform' in XRPose.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRPresentationContext",
        "info": {
          "code": "self.XRPresentationContext"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRPresentationContext.canvas",
        "info": {
          "code": "'canvas' in XRPresentationContext.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRRay",
        "info": {
          "code": "self.XRRay"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRRay.direction",
        "info": {
          "code": "'direction' in XRRay.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRRay.matrix",
        "info": {
          "code": "'matrix' in XRRay.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRRay.origin",
        "info": {
          "code": "'origin' in XRRay.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRReferenceSpace",
        "info": {
          "code": "self.XRReferenceSpace"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRReferenceSpace.onreset",
        "info": {
          "code": "'onreset' in XRReferenceSpace.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRReferenceSpace.originOffset",
        "info": {
          "code": "'originOffset' in XRReferenceSpace.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRReferenceSpaceEvent",
        "info": {
          "code": "self.XRReferenceSpaceEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRReferenceSpaceEvent.referenceSpace",
        "info": {
          "code": "'referenceSpace' in XRReferenceSpaceEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRReferenceSpaceEvent.transform",
        "info": {
          "code": "'transform' in XRReferenceSpaceEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRRenderState",
        "info": {
          "code": "self.XRRenderState"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRRenderState.baseLayer",
        "info": {
          "code": "'baseLayer' in XRRenderState.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRRenderState.depthFar",
        "info": {
          "code": "'depthFar' in XRRenderState.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRRenderState.depthNear",
        "info": {
          "code": "'depthNear' in XRRenderState.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRRigidTransform",
        "info": {
          "code": "self.XRRigidTransform"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRRigidTransform.matrix",
        "info": {
          "code": "'matrix' in XRRigidTransform.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRRigidTransform.orientation",
        "info": {
          "code": "'orientation' in XRRigidTransform.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRRigidTransform.position",
        "info": {
          "code": "'position' in XRRigidTransform.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession",
        "info": {
          "code": "self.XRSession"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRSession.cancelAnimationFrame",
        "info": {
          "code": "XRSession.prototype.cancelAnimationFrame"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.end",
        "info": {
          "code": "XRSession.prototype.end"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.environmentBlendMode",
        "info": {
          "code": "'environmentBlendMode' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.getInputSources",
        "info": {
          "code": "XRSession.prototype.getInputSources"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.mode",
        "info": {
          "code": "'mode' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.onblur",
        "info": {
          "code": "'onblur' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.onend",
        "info": {
          "code": "'onend' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.onfocus",
        "info": {
          "code": "'onfocus' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.oninputsourceschange",
        "info": {
          "code": "'oninputsourceschange' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.onselect",
        "info": {
          "code": "'onselect' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.onselectend",
        "info": {
          "code": "'onselectend' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.onselectstart",
        "info": {
          "code": "'onselectstart' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.outputContext",
        "info": {
          "code": "'outputContext' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.renderState",
        "info": {
          "code": "'renderState' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.requestAnimationFrame",
        "info": {
          "code": "XRSession.prototype.requestAnimationFrame"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.requestReferenceSpace",
        "info": {
          "code": "XRSession.prototype.requestReferenceSpace"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.updateRenderState",
        "info": {
          "code": "XRSession.prototype.updateRenderState"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSession.viewerSpace",
        "info": {
          "code": "'viewerSpace' in XRSession.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSessionEvent",
        "info": {
          "code": "self.XRSessionEvent"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRSessionEvent.session",
        "info": {
          "code": "'session' in XRSessionEvent.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRSpace",
        "info": {
          "code": "self.XRSpace"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRStationaryReferenceSpace",
        "info": {
          "code": "self.XRStationaryReferenceSpace"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRStationaryReferenceSpace.subtype",
        "info": {
          "code": "'subtype' in XRStationaryReferenceSpace.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRUnboundedReferenceSpace",
        "info": {
          "code": "self.XRUnboundedReferenceSpace"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRView",
        "info": {
          "code": "self.XRView"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRView.eye",
        "info": {
          "code": "'eye' in XRView.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRView.projectionMatrix",
        "info": {
          "code": "'projectionMatrix' in XRView.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRView.transform",
        "info": {
          "code": "'transform' in XRView.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRView.viewMatrix",
        "info": {
          "code": "'viewMatrix' in XRView.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRViewerPose",
        "info": {
          "code": "self.XRViewerPose"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRViewerPose.views",
        "info": {
          "code": "'views' in XRViewerPose.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRViewport",
        "info": {
          "code": "self.XRViewport"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRViewport.height",
        "info": {
          "code": "'height' in XRViewport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRViewport.width",
        "info": {
          "code": "'width' in XRViewport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRViewport.x",
        "info": {
          "code": "'x' in XRViewport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRViewport.y",
        "info": {
          "code": "'y' in XRViewport.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer",
        "info": {
          "code": "self.XRWebGLLayer"
        },
        "returns": {
          "type": "undefined"
        }
      },
      {
        "context": "api.XRWebGLLayer.alpha",
        "info": {
          "code": "'alpha' in XRWebGLLayer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.antialias",
        "info": {
          "code": "'antialias' in XRWebGLLayer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.context",
        "info": {
          "code": "'context' in XRWebGLLayer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.depth",
        "info": {
          "code": "'depth' in XRWebGLLayer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.framebuffer",
        "info": {
          "code": "'framebuffer' in XRWebGLLayer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.framebufferHeight",
        "info": {
          "code": "'framebufferHeight' in XRWebGLLayer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.framebufferWidth",
        "info": {
          "code": "'framebufferWidth' in XRWebGLLayer.prototype"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.getNativeFramebufferScaleFactor",
        "info": {
          "code": "XRWebGLLayer.getNativeFramebufferScaleFactor"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.getViewport",
        "info": {
          "code": "XRWebGLLayer.prototype.getViewport"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.requestViewportScaling",
        "info": {
          "code": "XRWebGLLayer.prototype.requestViewportScaling"
        },
        "throws": {
          "type": "object"
        }
      },
      {
        "context": "api.XRWebGLLayer.stencil",
        "info": {
          "code": "'stencil' in XRWebGLLayer.prototype"
        },
        "throws": {
          "type": "object"
        }
      }
    ],
    "http://mdn-bcd-collector.appspot.com/css/properties/dot-supports.html": [
      {
        "context": "css.properties.-webkit-background-clip",
        "info": {
          "code": "CSS.supports(\"-webkit-background-clip\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.-webkit-text-fill-color",
        "info": {
          "code": "CSS.supports(\"-webkit-text-fill-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.-webkit-text-stroke",
        "info": {
          "code": "CSS.supports(\"-webkit-text-stroke\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.-webkit-text-stroke-color",
        "info": {
          "code": "CSS.supports(\"-webkit-text-stroke-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.-webkit-text-stroke-width",
        "info": {
          "code": "CSS.supports(\"-webkit-text-stroke-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.align-content",
        "info": {
          "code": "CSS.supports(\"align-content\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.align-items",
        "info": {
          "code": "CSS.supports(\"align-items\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.align-self",
        "info": {
          "code": "CSS.supports(\"align-self\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.alignment-baseline",
        "info": {
          "code": "CSS.supports(\"alignment-baseline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.all",
        "info": {
          "code": "CSS.supports(\"all\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.animation-composition",
        "info": {
          "code": "CSS.supports(\"animation-composition\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.animation-timeline",
        "info": {
          "code": "CSS.supports(\"animation-timeline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.appearance",
        "info": {
          "code": "CSS.supports(\"appearance\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.azimuth",
        "info": {
          "code": "CSS.supports(\"azimuth\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.backdrop-filter",
        "info": {
          "code": "CSS.supports(\"backdrop-filter\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.backface-visibility",
        "info": {
          "code": "CSS.supports(\"backface-visibility\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background",
        "info": {
          "code": "CSS.supports(\"background\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background-attachment",
        "info": {
          "code": "CSS.supports(\"background-attachment\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background-blend-mode",
        "info": {
          "code": "CSS.supports(\"background-blend-mode\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background-clip",
        "info": {
          "code": "CSS.supports(\"background-clip\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background-color",
        "info": {
          "code": "CSS.supports(\"background-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background-image",
        "info": {
          "code": "CSS.supports(\"background-image\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background-position",
        "info": {
          "code": "CSS.supports(\"background-position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background-position-block",
        "info": {
          "code": "CSS.supports(\"background-position-block\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.background-position-inline",
        "info": {
          "code": "CSS.supports(\"background-position-inline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.background-position-x",
        "info": {
          "code": "CSS.supports(\"background-position-x\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background-position-y",
        "info": {
          "code": "CSS.supports(\"background-position-y\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.background-repeat",
        "info": {
          "code": "CSS.supports(\"background-repeat\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.baseline-shift",
        "info": {
          "code": "CSS.supports(\"baseline-shift\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.block-size",
        "info": {
          "code": "CSS.supports(\"block-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.block-step",
        "info": {
          "code": "CSS.supports(\"block-step\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.block-step-align",
        "info": {
          "code": "CSS.supports(\"block-step-align\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.block-step-insert",
        "info": {
          "code": "CSS.supports(\"block-step-insert\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.block-step-round",
        "info": {
          "code": "CSS.supports(\"block-step-round\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.block-step-size",
        "info": {
          "code": "CSS.supports(\"block-step-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.bookmark-label",
        "info": {
          "code": "CSS.supports(\"bookmark-label\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.bookmark-level",
        "info": {
          "code": "CSS.supports(\"bookmark-level\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.bookmark-state",
        "info": {
          "code": "CSS.supports(\"bookmark-state\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border",
        "info": {
          "code": "CSS.supports(\"border\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-block",
        "info": {
          "code": "CSS.supports(\"border-block\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-block-color",
        "info": {
          "code": "CSS.supports(\"border-block-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-block-end",
        "info": {
          "code": "CSS.supports(\"border-block-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-block-end-color",
        "info": {
          "code": "CSS.supports(\"border-block-end-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-block-end-style",
        "info": {
          "code": "CSS.supports(\"border-block-end-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-block-end-width",
        "info": {
          "code": "CSS.supports(\"border-block-end-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-block-start",
        "info": {
          "code": "CSS.supports(\"border-block-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-block-start-color",
        "info": {
          "code": "CSS.supports(\"border-block-start-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-block-start-style",
        "info": {
          "code": "CSS.supports(\"border-block-start-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-block-start-width",
        "info": {
          "code": "CSS.supports(\"border-block-start-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-block-style",
        "info": {
          "code": "CSS.supports(\"border-block-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-block-width",
        "info": {
          "code": "CSS.supports(\"border-block-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-bottom",
        "info": {
          "code": "CSS.supports(\"border-bottom\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-bottom-color",
        "info": {
          "code": "CSS.supports(\"border-bottom-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-bottom-style",
        "info": {
          "code": "CSS.supports(\"border-bottom-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-bottom-width",
        "info": {
          "code": "CSS.supports(\"border-bottom-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-boundary",
        "info": {
          "code": "CSS.supports(\"border-boundary\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-clip",
        "info": {
          "code": "CSS.supports(\"border-clip\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-clip-bottom",
        "info": {
          "code": "CSS.supports(\"border-clip-bottom\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-clip-left",
        "info": {
          "code": "CSS.supports(\"border-clip-left\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-clip-right",
        "info": {
          "code": "CSS.supports(\"border-clip-right\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-clip-top",
        "info": {
          "code": "CSS.supports(\"border-clip-top\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-collapse",
        "info": {
          "code": "CSS.supports(\"border-collapse\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-color",
        "info": {
          "code": "CSS.supports(\"border-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-end-end-radius",
        "info": {
          "code": "CSS.supports(\"border-end-end-radius\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-end-start-radius",
        "info": {
          "code": "CSS.supports(\"border-end-start-radius\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-inline",
        "info": {
          "code": "CSS.supports(\"border-inline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-inline-color",
        "info": {
          "code": "CSS.supports(\"border-inline-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-inline-end",
        "info": {
          "code": "CSS.supports(\"border-inline-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-inline-end-color",
        "info": {
          "code": "CSS.supports(\"border-inline-end-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-inline-end-style",
        "info": {
          "code": "CSS.supports(\"border-inline-end-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-inline-end-width",
        "info": {
          "code": "CSS.supports(\"border-inline-end-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-inline-start",
        "info": {
          "code": "CSS.supports(\"border-inline-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-inline-start-color",
        "info": {
          "code": "CSS.supports(\"border-inline-start-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-inline-start-style",
        "info": {
          "code": "CSS.supports(\"border-inline-start-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-inline-start-width",
        "info": {
          "code": "CSS.supports(\"border-inline-start-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-inline-style",
        "info": {
          "code": "CSS.supports(\"border-inline-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-inline-width",
        "info": {
          "code": "CSS.supports(\"border-inline-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-left",
        "info": {
          "code": "CSS.supports(\"border-left\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-left-color",
        "info": {
          "code": "CSS.supports(\"border-left-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-left-style",
        "info": {
          "code": "CSS.supports(\"border-left-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-left-width",
        "info": {
          "code": "CSS.supports(\"border-left-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-limit",
        "info": {
          "code": "CSS.supports(\"border-limit\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-radius",
        "info": {
          "code": "CSS.supports(\"border-radius\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-right",
        "info": {
          "code": "CSS.supports(\"border-right\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-right-color",
        "info": {
          "code": "CSS.supports(\"border-right-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-right-style",
        "info": {
          "code": "CSS.supports(\"border-right-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-right-width",
        "info": {
          "code": "CSS.supports(\"border-right-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-spacing",
        "info": {
          "code": "CSS.supports(\"border-spacing\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-start-end-radius",
        "info": {
          "code": "CSS.supports(\"border-start-end-radius\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-start-start-radius",
        "info": {
          "code": "CSS.supports(\"border-start-start-radius\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.border-style",
        "info": {
          "code": "CSS.supports(\"border-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-top",
        "info": {
          "code": "CSS.supports(\"border-top\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-top-color",
        "info": {
          "code": "CSS.supports(\"border-top-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-top-style",
        "info": {
          "code": "CSS.supports(\"border-top-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-top-width",
        "info": {
          "code": "CSS.supports(\"border-top-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.border-width",
        "info": {
          "code": "CSS.supports(\"border-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.bottom",
        "info": {
          "code": "CSS.supports(\"bottom\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.box-decoration-break",
        "info": {
          "code": "CSS.supports(\"box-decoration-break\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.box-snap",
        "info": {
          "code": "CSS.supports(\"box-snap\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.break-after",
        "info": {
          "code": "CSS.supports(\"break-after\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.break-before",
        "info": {
          "code": "CSS.supports(\"break-before\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.break-inside",
        "info": {
          "code": "CSS.supports(\"break-inside\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.caption-side",
        "info": {
          "code": "CSS.supports(\"caption-side\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.caret",
        "info": {
          "code": "CSS.supports(\"caret\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.caret-color",
        "info": {
          "code": "CSS.supports(\"caret-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.caret-shape",
        "info": {
          "code": "CSS.supports(\"caret-shape\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.clear",
        "info": {
          "code": "CSS.supports(\"clear\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.clip",
        "info": {
          "code": "CSS.supports(\"clip\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.clip-path",
        "info": {
          "code": "CSS.supports(\"clip-path\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.clip-rule",
        "info": {
          "code": "CSS.supports(\"clip-rule\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.color",
        "info": {
          "code": "CSS.supports(\"color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.color-adjust",
        "info": {
          "code": "CSS.supports(\"color-adjust\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.color-interpolation",
        "info": {
          "code": "CSS.supports(\"color-interpolation\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.color-rendering",
        "info": {
          "code": "CSS.supports(\"color-rendering\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.column-gap",
        "info": {
          "code": "CSS.supports(\"column-gap\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.column-span",
        "info": {
          "code": "CSS.supports(\"column-span\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.contain",
        "info": {
          "code": "CSS.supports(\"contain\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.content",
        "info": {
          "code": "CSS.supports(\"content\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.continue",
        "info": {
          "code": "CSS.supports(\"continue\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.copy-into",
        "info": {
          "code": "CSS.supports(\"copy-into\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.corner-shape",
        "info": {
          "code": "CSS.supports(\"corner-shape\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.corners",
        "info": {
          "code": "CSS.supports(\"corners\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.counter-increment",
        "info": {
          "code": "CSS.supports(\"counter-increment\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.counter-reset",
        "info": {
          "code": "CSS.supports(\"counter-reset\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.counter-set",
        "info": {
          "code": "CSS.supports(\"counter-set\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.cue",
        "info": {
          "code": "CSS.supports(\"cue\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.cue-after",
        "info": {
          "code": "CSS.supports(\"cue-after\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.cue-before",
        "info": {
          "code": "CSS.supports(\"cue-before\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.cursor",
        "info": {
          "code": "CSS.supports(\"cursor\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.cx",
        "info": {
          "code": "CSS.supports(\"cx\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.cy",
        "info": {
          "code": "CSS.supports(\"cy\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.d",
        "info": {
          "code": "CSS.supports(\"d\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.direction",
        "info": {
          "code": "CSS.supports(\"direction\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.display",
        "info": {
          "code": "CSS.supports(\"display\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.dominant-baseline",
        "info": {
          "code": "CSS.supports(\"dominant-baseline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.elevation",
        "info": {
          "code": "CSS.supports(\"elevation\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.empty-cells",
        "info": {
          "code": "CSS.supports(\"empty-cells\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.fill",
        "info": {
          "code": "CSS.supports(\"fill\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.fill-break",
        "info": {
          "code": "CSS.supports(\"fill-break\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.fill-color",
        "info": {
          "code": "CSS.supports(\"fill-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.fill-image",
        "info": {
          "code": "CSS.supports(\"fill-image\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.fill-opacity",
        "info": {
          "code": "CSS.supports(\"fill-opacity\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.fill-origin",
        "info": {
          "code": "CSS.supports(\"fill-origin\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.fill-position",
        "info": {
          "code": "CSS.supports(\"fill-position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.fill-repeat",
        "info": {
          "code": "CSS.supports(\"fill-repeat\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.fill-rule",
        "info": {
          "code": "CSS.supports(\"fill-rule\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.fill-size",
        "info": {
          "code": "CSS.supports(\"fill-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.flex",
        "info": {
          "code": "CSS.supports(\"flex\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.flex-basis",
        "info": {
          "code": "CSS.supports(\"flex-basis\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.flex-direction",
        "info": {
          "code": "CSS.supports(\"flex-direction\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.flex-flow",
        "info": {
          "code": "CSS.supports(\"flex-flow\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.flex-grow",
        "info": {
          "code": "CSS.supports(\"flex-grow\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.flex-shrink",
        "info": {
          "code": "CSS.supports(\"flex-shrink\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.flex-wrap",
        "info": {
          "code": "CSS.supports(\"flex-wrap\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.float",
        "info": {
          "code": "CSS.supports(\"float\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.float-defer",
        "info": {
          "code": "CSS.supports(\"float-defer\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.float-offset",
        "info": {
          "code": "CSS.supports(\"float-offset\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.float-reference",
        "info": {
          "code": "CSS.supports(\"float-reference\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.flow-from",
        "info": {
          "code": "CSS.supports(\"flow-from\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.flow-into",
        "info": {
          "code": "CSS.supports(\"flow-into\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.font",
        "info": {
          "code": "CSS.supports(\"font\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-family",
        "info": {
          "code": "CSS.supports(\"font-family\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-feature-settings",
        "info": {
          "code": "CSS.supports(\"font-feature-settings\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-kerning",
        "info": {
          "code": "CSS.supports(\"font-kerning\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-language-override",
        "info": {
          "code": "CSS.supports(\"font-language-override\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-max-size",
        "info": {
          "code": "CSS.supports(\"font-max-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.font-min-size",
        "info": {
          "code": "CSS.supports(\"font-min-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.font-optical-sizing",
        "info": {
          "code": "CSS.supports(\"font-optical-sizing\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-palette",
        "info": {
          "code": "CSS.supports(\"font-palette\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.font-size",
        "info": {
          "code": "CSS.supports(\"font-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-size-adjust",
        "info": {
          "code": "CSS.supports(\"font-size-adjust\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-stretch",
        "info": {
          "code": "CSS.supports(\"font-stretch\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-style",
        "info": {
          "code": "CSS.supports(\"font-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-synthesis",
        "info": {
          "code": "CSS.supports(\"font-synthesis\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-synthesis-small-caps",
        "info": {
          "code": "CSS.supports(\"font-synthesis-small-caps\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.font-synthesis-style",
        "info": {
          "code": "CSS.supports(\"font-synthesis-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.font-synthesis-weight",
        "info": {
          "code": "CSS.supports(\"font-synthesis-weight\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.font-variant",
        "info": {
          "code": "CSS.supports(\"font-variant\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-variant-alternates",
        "info": {
          "code": "CSS.supports(\"font-variant-alternates\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-variant-caps",
        "info": {
          "code": "CSS.supports(\"font-variant-caps\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-variant-east-asian",
        "info": {
          "code": "CSS.supports(\"font-variant-east-asian\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-variant-emoji",
        "info": {
          "code": "CSS.supports(\"font-variant-emoji\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.font-variant-ligatures",
        "info": {
          "code": "CSS.supports(\"font-variant-ligatures\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-variant-numeric",
        "info": {
          "code": "CSS.supports(\"font-variant-numeric\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-variant-position",
        "info": {
          "code": "CSS.supports(\"font-variant-position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-variation-settings",
        "info": {
          "code": "CSS.supports(\"font-variation-settings\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.font-weight",
        "info": {
          "code": "CSS.supports(\"font-weight\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.gap",
        "info": {
          "code": "CSS.supports(\"gap\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.glyph-orientation-vertical",
        "info": {
          "code": "CSS.supports(\"glyph-orientation-vertical\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.grid-template-columns",
        "info": {
          "code": "CSS.supports(\"grid-template-columns\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.grid-template-rows",
        "info": {
          "code": "CSS.supports(\"grid-template-rows\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.height",
        "info": {
          "code": "CSS.supports(\"height\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.hyphenate-character",
        "info": {
          "code": "CSS.supports(\"hyphenate-character\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.hyphenate-limit-chars",
        "info": {
          "code": "CSS.supports(\"hyphenate-limit-chars\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.hyphenate-limit-last",
        "info": {
          "code": "CSS.supports(\"hyphenate-limit-last\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.hyphenate-limit-lines",
        "info": {
          "code": "CSS.supports(\"hyphenate-limit-lines\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.hyphenate-limit-zone",
        "info": {
          "code": "CSS.supports(\"hyphenate-limit-zone\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.image-orientation",
        "info": {
          "code": "CSS.supports(\"image-orientation\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.image-rendering",
        "info": {
          "code": "CSS.supports(\"image-rendering\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.initial-letters",
        "info": {
          "code": "CSS.supports(\"initial-letters\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.initial-letters-align",
        "info": {
          "code": "CSS.supports(\"initial-letters-align\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.initial-letters-wrap",
        "info": {
          "code": "CSS.supports(\"initial-letters-wrap\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.inline-size",
        "info": {
          "code": "CSS.supports(\"inline-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.inline-sizing",
        "info": {
          "code": "CSS.supports(\"inline-sizing\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.inset",
        "info": {
          "code": "CSS.supports(\"inset\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.inset-after",
        "info": {
          "code": "CSS.supports(\"inset-after\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.inset-before",
        "info": {
          "code": "CSS.supports(\"inset-before\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.inset-block",
        "info": {
          "code": "CSS.supports(\"inset-block\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.inset-block-end",
        "info": {
          "code": "CSS.supports(\"inset-block-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.inset-block-start",
        "info": {
          "code": "CSS.supports(\"inset-block-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.inset-end",
        "info": {
          "code": "CSS.supports(\"inset-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.inset-inline",
        "info": {
          "code": "CSS.supports(\"inset-inline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.inset-inline-end",
        "info": {
          "code": "CSS.supports(\"inset-inline-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.inset-inline-start",
        "info": {
          "code": "CSS.supports(\"inset-inline-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.inset-start",
        "info": {
          "code": "CSS.supports(\"inset-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.isolation",
        "info": {
          "code": "CSS.supports(\"isolation\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.justify-content",
        "info": {
          "code": "CSS.supports(\"justify-content\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.justify-items",
        "info": {
          "code": "CSS.supports(\"justify-items\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.justify-self",
        "info": {
          "code": "CSS.supports(\"justify-self\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.leading-trim",
        "info": {
          "code": "CSS.supports(\"leading-trim\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.leading-trim-over",
        "info": {
          "code": "CSS.supports(\"leading-trim-over\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.leading-trim-under",
        "info": {
          "code": "CSS.supports(\"leading-trim-under\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.left",
        "info": {
          "code": "CSS.supports(\"left\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.letter-spacing",
        "info": {
          "code": "CSS.supports(\"letter-spacing\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.line-grid",
        "info": {
          "code": "CSS.supports(\"line-grid\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.line-height",
        "info": {
          "code": "CSS.supports(\"line-height\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.line-height-step",
        "info": {
          "code": "CSS.supports(\"line-height-step\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.line-padding",
        "info": {
          "code": "CSS.supports(\"line-padding\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.line-sizing",
        "info": {
          "code": "CSS.supports(\"line-sizing\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.line-snap",
        "info": {
          "code": "CSS.supports(\"line-snap\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.list-style",
        "info": {
          "code": "CSS.supports(\"list-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.list-style-image",
        "info": {
          "code": "CSS.supports(\"list-style-image\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.list-style-position",
        "info": {
          "code": "CSS.supports(\"list-style-position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.list-style-type",
        "info": {
          "code": "CSS.supports(\"list-style-type\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin",
        "info": {
          "code": "CSS.supports(\"margin\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin-block",
        "info": {
          "code": "CSS.supports(\"margin-block\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.margin-block-end",
        "info": {
          "code": "CSS.supports(\"margin-block-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin-block-start",
        "info": {
          "code": "CSS.supports(\"margin-block-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin-bottom",
        "info": {
          "code": "CSS.supports(\"margin-bottom\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin-inline",
        "info": {
          "code": "CSS.supports(\"margin-inline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.margin-inline-end",
        "info": {
          "code": "CSS.supports(\"margin-inline-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin-inline-start",
        "info": {
          "code": "CSS.supports(\"margin-inline-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin-left",
        "info": {
          "code": "CSS.supports(\"margin-left\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin-right",
        "info": {
          "code": "CSS.supports(\"margin-right\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin-top",
        "info": {
          "code": "CSS.supports(\"margin-top\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.margin-trim",
        "info": {
          "code": "CSS.supports(\"margin-trim\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.marker",
        "info": {
          "code": "CSS.supports(\"marker\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.marker-end",
        "info": {
          "code": "CSS.supports(\"marker-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.marker-knockout-left",
        "info": {
          "code": "CSS.supports(\"marker-knockout-left\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.marker-knockout-right",
        "info": {
          "code": "CSS.supports(\"marker-knockout-right\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.marker-mid",
        "info": {
          "code": "CSS.supports(\"marker-mid\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.marker-pattern",
        "info": {
          "code": "CSS.supports(\"marker-pattern\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.marker-segment",
        "info": {
          "code": "CSS.supports(\"marker-segment\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.marker-side",
        "info": {
          "code": "CSS.supports(\"marker-side\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.marker-start",
        "info": {
          "code": "CSS.supports(\"marker-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask",
        "info": {
          "code": "CSS.supports(\"mask\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask-border",
        "info": {
          "code": "CSS.supports(\"mask-border\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.mask-border-mode",
        "info": {
          "code": "CSS.supports(\"mask-border-mode\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.mask-border-outset",
        "info": {
          "code": "CSS.supports(\"mask-border-outset\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.mask-border-repeat",
        "info": {
          "code": "CSS.supports(\"mask-border-repeat\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.mask-border-slice",
        "info": {
          "code": "CSS.supports(\"mask-border-slice\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.mask-border-source",
        "info": {
          "code": "CSS.supports(\"mask-border-source\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.mask-border-width",
        "info": {
          "code": "CSS.supports(\"mask-border-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.mask-clip",
        "info": {
          "code": "CSS.supports(\"mask-clip\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask-composite",
        "info": {
          "code": "CSS.supports(\"mask-composite\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask-image",
        "info": {
          "code": "CSS.supports(\"mask-image\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask-mode",
        "info": {
          "code": "CSS.supports(\"mask-mode\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask-origin",
        "info": {
          "code": "CSS.supports(\"mask-origin\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask-position",
        "info": {
          "code": "CSS.supports(\"mask-position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask-repeat",
        "info": {
          "code": "CSS.supports(\"mask-repeat\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask-size",
        "info": {
          "code": "CSS.supports(\"mask-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mask-type",
        "info": {
          "code": "CSS.supports(\"mask-type\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.max-block-size",
        "info": {
          "code": "CSS.supports(\"max-block-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.max-height",
        "info": {
          "code": "CSS.supports(\"max-height\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.max-inline-size",
        "info": {
          "code": "CSS.supports(\"max-inline-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.max-lines",
        "info": {
          "code": "CSS.supports(\"max-lines\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.max-width",
        "info": {
          "code": "CSS.supports(\"max-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.min-block-size",
        "info": {
          "code": "CSS.supports(\"min-block-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.min-height",
        "info": {
          "code": "CSS.supports(\"min-height\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.min-inline-size",
        "info": {
          "code": "CSS.supports(\"min-inline-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.min-width",
        "info": {
          "code": "CSS.supports(\"min-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.mix-blend-mode",
        "info": {
          "code": "CSS.supports(\"mix-blend-mode\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.nav-down",
        "info": {
          "code": "CSS.supports(\"nav-down\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.nav-left",
        "info": {
          "code": "CSS.supports(\"nav-left\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.nav-right",
        "info": {
          "code": "CSS.supports(\"nav-right\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.nav-up",
        "info": {
          "code": "CSS.supports(\"nav-up\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.object-fit",
        "info": {
          "code": "CSS.supports(\"object-fit\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.object-position",
        "info": {
          "code": "CSS.supports(\"object-position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.offset",
        "info": {
          "code": "CSS.supports(\"offset\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.offset-anchor",
        "info": {
          "code": "CSS.supports(\"offset-anchor\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.offset-distance",
        "info": {
          "code": "CSS.supports(\"offset-distance\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.offset-path",
        "info": {
          "code": "CSS.supports(\"offset-path\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.offset-position",
        "info": {
          "code": "CSS.supports(\"offset-position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.offset-rotate",
        "info": {
          "code": "CSS.supports(\"offset-rotate\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.opacity",
        "info": {
          "code": "CSS.supports(\"opacity\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.order",
        "info": {
          "code": "CSS.supports(\"order\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.orphans",
        "info": {
          "code": "CSS.supports(\"orphans\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.outline",
        "info": {
          "code": "CSS.supports(\"outline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.outline-color",
        "info": {
          "code": "CSS.supports(\"outline-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.outline-offset",
        "info": {
          "code": "CSS.supports(\"outline-offset\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.outline-style",
        "info": {
          "code": "CSS.supports(\"outline-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.outline-width",
        "info": {
          "code": "CSS.supports(\"outline-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.overflow",
        "info": {
          "code": "CSS.supports(\"overflow\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.overflow-anchor",
        "info": {
          "code": "CSS.supports(\"overflow-anchor\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.overscroll-behavior",
        "info": {
          "code": "CSS.supports(\"overscroll-behavior\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.overscroll-behavior-x",
        "info": {
          "code": "CSS.supports(\"overscroll-behavior-x\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.overscroll-behavior-y",
        "info": {
          "code": "CSS.supports(\"overscroll-behavior-y\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.padding",
        "info": {
          "code": "CSS.supports(\"padding\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.padding-block",
        "info": {
          "code": "CSS.supports(\"padding-block\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.padding-block-end",
        "info": {
          "code": "CSS.supports(\"padding-block-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.padding-block-start",
        "info": {
          "code": "CSS.supports(\"padding-block-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.padding-bottom",
        "info": {
          "code": "CSS.supports(\"padding-bottom\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.padding-inline",
        "info": {
          "code": "CSS.supports(\"padding-inline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.padding-inline-end",
        "info": {
          "code": "CSS.supports(\"padding-inline-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.padding-inline-start",
        "info": {
          "code": "CSS.supports(\"padding-inline-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.padding-left",
        "info": {
          "code": "CSS.supports(\"padding-left\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.padding-right",
        "info": {
          "code": "CSS.supports(\"padding-right\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.padding-top",
        "info": {
          "code": "CSS.supports(\"padding-top\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.page",
        "info": {
          "code": "CSS.supports(\"page\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.page-break-after",
        "info": {
          "code": "CSS.supports(\"page-break-after\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.page-break-before",
        "info": {
          "code": "CSS.supports(\"page-break-before\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.page-break-inside",
        "info": {
          "code": "CSS.supports(\"page-break-inside\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.paint-order",
        "info": {
          "code": "CSS.supports(\"paint-order\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.pause",
        "info": {
          "code": "CSS.supports(\"pause\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.pause-after",
        "info": {
          "code": "CSS.supports(\"pause-after\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.pause-before",
        "info": {
          "code": "CSS.supports(\"pause-before\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.perspective",
        "info": {
          "code": "CSS.supports(\"perspective\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.perspective-origin",
        "info": {
          "code": "CSS.supports(\"perspective-origin\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.pitch",
        "info": {
          "code": "CSS.supports(\"pitch\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.pitch-range",
        "info": {
          "code": "CSS.supports(\"pitch-range\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.place-content",
        "info": {
          "code": "CSS.supports(\"place-content\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.place-items",
        "info": {
          "code": "CSS.supports(\"place-items\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.place-self",
        "info": {
          "code": "CSS.supports(\"place-self\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.play-during",
        "info": {
          "code": "CSS.supports(\"play-during\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.pointer-events",
        "info": {
          "code": "CSS.supports(\"pointer-events\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.position",
        "info": {
          "code": "CSS.supports(\"position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.quotes",
        "info": {
          "code": "CSS.supports(\"quotes\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.r",
        "info": {
          "code": "CSS.supports(\"r\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.region-fragment",
        "info": {
          "code": "CSS.supports(\"region-fragment\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.resize",
        "info": {
          "code": "CSS.supports(\"resize\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.richness",
        "info": {
          "code": "CSS.supports(\"richness\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.right",
        "info": {
          "code": "CSS.supports(\"right\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.rotate",
        "info": {
          "code": "CSS.supports(\"rotate\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.row-gap",
        "info": {
          "code": "CSS.supports(\"row-gap\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.ruby-align",
        "info": {
          "code": "CSS.supports(\"ruby-align\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.ruby-merge",
        "info": {
          "code": "CSS.supports(\"ruby-merge\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.ruby-position",
        "info": {
          "code": "CSS.supports(\"ruby-position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.rx",
        "info": {
          "code": "CSS.supports(\"rx\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.ry",
        "info": {
          "code": "CSS.supports(\"ry\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scale",
        "info": {
          "code": "CSS.supports(\"scale\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-behavior",
        "info": {
          "code": "CSS.supports(\"scroll-behavior\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.scroll-margin",
        "info": {
          "code": "CSS.supports(\"scroll-margin\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-block",
        "info": {
          "code": "CSS.supports(\"scroll-margin-block\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-block-end",
        "info": {
          "code": "CSS.supports(\"scroll-margin-block-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-block-start",
        "info": {
          "code": "CSS.supports(\"scroll-margin-block-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-bottom",
        "info": {
          "code": "CSS.supports(\"scroll-margin-bottom\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-inline",
        "info": {
          "code": "CSS.supports(\"scroll-margin-inline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-inline-end",
        "info": {
          "code": "CSS.supports(\"scroll-margin-inline-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-inline-start",
        "info": {
          "code": "CSS.supports(\"scroll-margin-inline-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-left",
        "info": {
          "code": "CSS.supports(\"scroll-margin-left\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-right",
        "info": {
          "code": "CSS.supports(\"scroll-margin-right\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-margin-top",
        "info": {
          "code": "CSS.supports(\"scroll-margin-top\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding",
        "info": {
          "code": "CSS.supports(\"scroll-padding\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-block",
        "info": {
          "code": "CSS.supports(\"scroll-padding-block\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-block-end",
        "info": {
          "code": "CSS.supports(\"scroll-padding-block-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-block-start",
        "info": {
          "code": "CSS.supports(\"scroll-padding-block-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-bottom",
        "info": {
          "code": "CSS.supports(\"scroll-padding-bottom\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-inline",
        "info": {
          "code": "CSS.supports(\"scroll-padding-inline\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-inline-end",
        "info": {
          "code": "CSS.supports(\"scroll-padding-inline-end\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-inline-start",
        "info": {
          "code": "CSS.supports(\"scroll-padding-inline-start\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-left",
        "info": {
          "code": "CSS.supports(\"scroll-padding-left\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-right",
        "info": {
          "code": "CSS.supports(\"scroll-padding-right\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-padding-top",
        "info": {
          "code": "CSS.supports(\"scroll-padding-top\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-snap-align",
        "info": {
          "code": "CSS.supports(\"scroll-snap-align\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-snap-stop",
        "info": {
          "code": "CSS.supports(\"scroll-snap-stop\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scroll-snap-type",
        "info": {
          "code": "CSS.supports(\"scroll-snap-type\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.scrollbar-color",
        "info": {
          "code": "CSS.supports(\"scrollbar-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.scrollbar-gutter",
        "info": {
          "code": "CSS.supports(\"scrollbar-gutter\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.scrollbar-width",
        "info": {
          "code": "CSS.supports(\"scrollbar-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.shape-inside",
        "info": {
          "code": "CSS.supports(\"shape-inside\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.shape-margin",
        "info": {
          "code": "CSS.supports(\"shape-margin\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.shape-padding",
        "info": {
          "code": "CSS.supports(\"shape-padding\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.shape-rendering",
        "info": {
          "code": "CSS.supports(\"shape-rendering\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.shape-subtract",
        "info": {
          "code": "CSS.supports(\"shape-subtract\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.speak",
        "info": {
          "code": "CSS.supports(\"speak\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.speak-header",
        "info": {
          "code": "CSS.supports(\"speak-header\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.speak-numeral",
        "info": {
          "code": "CSS.supports(\"speak-numeral\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.speak-punctuation",
        "info": {
          "code": "CSS.supports(\"speak-punctuation\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.speech-rate",
        "info": {
          "code": "CSS.supports(\"speech-rate\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stress",
        "info": {
          "code": "CSS.supports(\"stress\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.string-set",
        "info": {
          "code": "CSS.supports(\"string-set\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke",
        "info": {
          "code": "CSS.supports(\"stroke\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.stroke-align",
        "info": {
          "code": "CSS.supports(\"stroke-align\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-alignment",
        "info": {
          "code": "CSS.supports(\"stroke-alignment\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-break",
        "info": {
          "code": "CSS.supports(\"stroke-break\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-color",
        "info": {
          "code": "CSS.supports(\"stroke-color\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-dash-corner",
        "info": {
          "code": "CSS.supports(\"stroke-dash-corner\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-dash-justify",
        "info": {
          "code": "CSS.supports(\"stroke-dash-justify\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-dashadjust",
        "info": {
          "code": "CSS.supports(\"stroke-dashadjust\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-dasharray",
        "info": {
          "code": "CSS.supports(\"stroke-dasharray\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.stroke-dashcorner",
        "info": {
          "code": "CSS.supports(\"stroke-dashcorner\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-dashoffset",
        "info": {
          "code": "CSS.supports(\"stroke-dashoffset\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.stroke-image",
        "info": {
          "code": "CSS.supports(\"stroke-image\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-linecap",
        "info": {
          "code": "CSS.supports(\"stroke-linecap\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.stroke-linejoin",
        "info": {
          "code": "CSS.supports(\"stroke-linejoin\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.stroke-miterlimit",
        "info": {
          "code": "CSS.supports(\"stroke-miterlimit\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.stroke-opacity",
        "info": {
          "code": "CSS.supports(\"stroke-opacity\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.stroke-origin",
        "info": {
          "code": "CSS.supports(\"stroke-origin\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-position",
        "info": {
          "code": "CSS.supports(\"stroke-position\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-repeat",
        "info": {
          "code": "CSS.supports(\"stroke-repeat\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-size",
        "info": {
          "code": "CSS.supports(\"stroke-size\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.stroke-width",
        "info": {
          "code": "CSS.supports(\"stroke-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.table-layout",
        "info": {
          "code": "CSS.supports(\"table-layout\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-align",
        "info": {
          "code": "CSS.supports(\"text-align\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-anchor",
        "info": {
          "code": "CSS.supports(\"text-anchor\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-combine-upright",
        "info": {
          "code": "CSS.supports(\"text-combine-upright\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-decoration",
        "info": {
          "code": "CSS.supports(\"text-decoration\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-decoration-line",
        "info": {
          "code": "CSS.supports(\"text-decoration-line\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-decoration-skip",
        "info": {
          "code": "CSS.supports(\"text-decoration-skip\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-decoration-skip-ink",
        "info": {
          "code": "CSS.supports(\"text-decoration-skip-ink\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-decoration-width",
        "info": {
          "code": "CSS.supports(\"text-decoration-width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-emphasis-skip",
        "info": {
          "code": "CSS.supports(\"text-emphasis-skip\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-group-align",
        "info": {
          "code": "CSS.supports(\"text-group-align\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-indent",
        "info": {
          "code": "CSS.supports(\"text-indent\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-orientation",
        "info": {
          "code": "CSS.supports(\"text-orientation\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-overflow",
        "info": {
          "code": "CSS.supports(\"text-overflow\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-rendering",
        "info": {
          "code": "CSS.supports(\"text-rendering\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-size-adjust",
        "info": {
          "code": "CSS.supports(\"text-size-adjust\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-space-collapse",
        "info": {
          "code": "CSS.supports(\"text-space-collapse\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-space-trim",
        "info": {
          "code": "CSS.supports(\"text-space-trim\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-spacing",
        "info": {
          "code": "CSS.supports(\"text-spacing\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-transform",
        "info": {
          "code": "CSS.supports(\"text-transform\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.text-underline-offset",
        "info": {
          "code": "CSS.supports(\"text-underline-offset\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.text-wrap",
        "info": {
          "code": "CSS.supports(\"text-wrap\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.top",
        "info": {
          "code": "CSS.supports(\"top\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.touch-action",
        "info": {
          "code": "CSS.supports(\"touch-action\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.transform-style",
        "info": {
          "code": "CSS.supports(\"transform-style\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.translate",
        "info": {
          "code": "CSS.supports(\"translate\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.unicode-bidi",
        "info": {
          "code": "CSS.supports(\"unicode-bidi\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.user-select",
        "info": {
          "code": "CSS.supports(\"user-select\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.vector-effect",
        "info": {
          "code": "CSS.supports(\"vector-effect\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.vertical-align",
        "info": {
          "code": "CSS.supports(\"vertical-align\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.visibility",
        "info": {
          "code": "CSS.supports(\"visibility\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.voice-family",
        "info": {
          "code": "CSS.supports(\"voice-family\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.volume",
        "info": {
          "code": "CSS.supports(\"volume\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.white-space",
        "info": {
          "code": "CSS.supports(\"white-space\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.widows",
        "info": {
          "code": "CSS.supports(\"widows\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.width",
        "info": {
          "code": "CSS.supports(\"width\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.will-change",
        "info": {
          "code": "CSS.supports(\"will-change\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.word-spacing",
        "info": {
          "code": "CSS.supports(\"word-spacing\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.wrap-after",
        "info": {
          "code": "CSS.supports(\"wrap-after\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.wrap-before",
        "info": {
          "code": "CSS.supports(\"wrap-before\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.wrap-flow",
        "info": {
          "code": "CSS.supports(\"wrap-flow\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.wrap-inside",
        "info": {
          "code": "CSS.supports(\"wrap-inside\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.wrap-through",
        "info": {
          "code": "CSS.supports(\"wrap-through\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.writing-mode",
        "info": {
          "code": "CSS.supports(\"writing-mode\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      },
      {
        "context": "css.properties.x",
        "info": {
          "code": "CSS.supports(\"x\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.y",
        "info": {
          "code": "CSS.supports(\"y\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": false
        }
      },
      {
        "context": "css.properties.z-index",
        "info": {
          "code": "CSS.supports(\"z-index\", \"initial\")"
        },
        "returns": {
          "type": "boolean",
          "value": true
        }
      }
    ]
  },
  "userAgent": "Mozilla/5.0 (Android 9; Mobile; rv:65.0) Gecko/65.0 Firefox/65.0"
}
